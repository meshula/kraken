{
  "objectType" : "Graph",
  "metadata" : {
    "camera_mat44" : "{\n  \"row0\" : {\n    \"x\" : 0.55161052942276,\n    \"y\" : 0.1824282109737396,\n    \"z\" : -0.8139024972915649,\n    \"t\" : -3.358758926391602\n    },\n  \"row1\" : {\n    \"x\" : 6.034939588062116e-07,\n    \"y\" : 0.9757283329963684,\n    \"z\" : 0.2187258005142212,\n    \"t\" : 2.087502002716065\n    },\n  \"row2\" : {\n    \"x\" : 0.8340956568717957,\n    \"y\" : -0.1206455230712891,\n    \"z\" : 0.538256049156189,\n    \"t\" : 2.006179094314575\n    },\n  \"row3\" : {\n    \"x\" : 0,\n    \"y\" : 0,\n    \"z\" : 0,\n    \"t\" : 1\n    }\n  }",
    "timeline_start" : "1",
    "uiGraphZoom" : "{\n  \"value\" : 0.8015053272247315\n  }",
    "timeline_loopMode" : "1",
    "timeline_simMode" : "0",
    "camera_focalDistance" : "4.366913795471191",
    "timeline_current" : "1",
    "timeline_end" : "750",
    "uiGraphPan" : "{\n  \"x\" : 1002.421142578125,\n  \"y\" : 353.8837585449219\n  }"
    },
  "title" : "",
  "ports" : [
    {
      "objectType" : "ExecPort",
      "name" : "exec",
      "nodePortType" : "IO",
      "execPortType" : "IO",
      "typeSpec" : "Execute"
      },
    {
      "objectType" : "ExecPort",
      "name" : "timeline",
      "nodePortType" : "Out",
      "execPortType" : "In",
      "typeSpec" : "Float32"
      },
    {
      "objectType" : "ExecPort",
      "name" : "this",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "DrawingHandle"
      },
    {
      "objectType" : "ExecPort",
      "name" : "dummyResult",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "Vec3"
      },
    {
      "objectType" : "ExecPort",
      "name" : "instance",
      "nodePortType" : "In",
      "execPortType" : "Out",
      "typeSpec" : "InlineInstance"
      }
    ],
  "extDeps" : {},
  "nodes" : [
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":69.18998074530001,\"y\":-142.032102108}",
        "uiCollapsedState" : "0"
        },
      "name" : "ragdoll",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "time",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "sim",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "controlXfos",
          "nodePortType" : "In"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "ragdoll",
        "ports" : [
          {
            "objectType" : "ExecPort",
            "name" : "exec",
            "nodePortType" : "IO",
            "execPortType" : "IO",
            "typeSpec" : "Execute"
            },
          {
            "objectType" : "ExecPort",
            "name" : "time",
            "nodePortType" : "Out",
            "execPortType" : "In",
            "typeSpec" : "Scalar"
            },
          {
            "objectType" : "ExecPort",
            "name" : "sim",
            "nodePortType" : "Out",
            "execPortType" : "In",
            "typeSpec" : "RigidBodySimulation"
            },
          {
            "objectType" : "ExecPort",
            "name" : "controlXfos",
            "nodePortType" : "Out",
            "execPortType" : "In",
            "typeSpec" : "Xfo[]"
            }
          ],
        "extDeps" : {
          "BulletHelpers" : "*",
          "BulletRagdoll" : "*",
          "Math" : "*"
          },
        "code" : "function BulletRagdoll.addBodyPart!(io RigidBodySimulation sim, Integer index, Xfo xfo)
{
  BulletCapsuleShape shape = this.shapes[index];
  Lines lines();
  Scalar radius = shape.getRadius();
  Scalar height = shape.getHalfHeight() * 2.0;

  lines.addCapsule(Xfo(), radius, height, 24);
  Float32 mass = 1.0;
  Float32 friction = 0.5;
  Float32 restitution = 0.0;
  Vec3 linearVelocity = Vec3(0,0,0);
  Vec3 angularVelocity = Vec3(0,0,0);
  this.bodies[index].body = sim.addRigidBody(mass, friction, restitution, xfo, linearVelocity, angularVelocity, shape);
  //this.bodies[index] = sim.addRigidBody(1.0, xfo, shape, lines, this.color);
}


  
function BulletRagdoll.create!(io RigidBodySimulation sim, Xfo controlXfos[], Color color)
{ 
  this.color = color;
  this.shapes.resize(controlXfos.size());
  this.bodies.resize(controlXfos.size());
  Xfo localA, localB;
  
  for(Size i=0;i<(controlXfos.size());i++) {
    this.shapes[i] = BulletCapsuleShape(0.15, 0.20);
    this.addBodyPart(sim, i, controlXfos[i]);
    // Set up some damping
    this.bodies[i].body.setDamping(0.05, 0.85);
    this.bodies[i].body.setDeactivationTime(0.8);
    this.bodies[i].body.setSleepingThresholds(1.6, 2.5);
  }
  
  Size JOINT_COUNT = controlXfos.size();
  this.joints.resize(JOINT_COUNT);
  for(Size i=0;i<(JOINT_COUNT);i++) {
    // Setting up joints (currently equal number of children
    // currently random parent-child relationships (localA is Parent)
    localA.setIdentity(); localB.setIdentity();
    Size parentID = i;
    Size childID = i;
    Size jointID = i;
    localA =  controlXfos[parentID];
    localB =  controlXfos[childID];
    // Now setup the constraints
    BulletHingeConstraint coneC(this.bodies[parentID].body, this.bodies[childID].body, localA, localB);//
    coneC.setLimit(-QUARTER_PI, HALF_PI);
    this.joints[jointID] = coneC;
  }
  
  for(Integer i=0; i<this.joints.size(); i++){
    sim.dynamicsWorld.addConstraint(this.joints[i], true);
  }
}


dfgEntry {
  sim.initialized = false;
  if(!sim.initialized){
    sim.initPhysics();
    sim.createGround();
    BulletRagdoll ragDoll = BulletRagdoll();
    ragDoll.create(sim, controlXfos, randomColor(217, 1));
    sim.initialized = true;
  }
  
  if(time <= 1.0){
    sim.resetSimulation();
    sim.dynamicsWorld.setGravity(Vec3(0,-10,0));
  }
  else{
    sim.stepSimulation();
  }
}

"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":362.796170712,\"y\":-164.966492891}"
        },
      "name" : "GetAllRigidBodyXfos_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "this",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "metadata" : {
          "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.0/HTML/KLExtensionsGuide/BulletHelpers/RigidBodySimulation.html",
          "uiTooltip" : "returns the transforms of all rigid rigidBodies\n\n Supported by RigidBodySimulation"
          },
        "title" : "GetAllRigidBodyXfos",
        "ports" : [
          {
            "objectType" : "ExecPort",
            "name" : "exec",
            "nodePortType" : "IO",
            "execPortType" : "IO",
            "typeSpec" : "Execute"
            },
          {
            "objectType" : "ExecPort",
            "name" : "this",
            "nodePortType" : "Out",
            "execPortType" : "In",
            "typeSpec" : "RigidBodySimulation"
            },
          {
            "objectType" : "ExecPort",
            "metadata" : {
              "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
              },
            "name" : "result",
            "nodePortType" : "In",
            "execPortType" : "Out",
            "typeSpec" : "Xfo[]"
            }
          ],
        "extDeps" : {
          "BulletHelpers" : "*"
          },
        "origPresetGUID" : "25DDD9F75057F8A5E18196B58992AC6F",
        "code" : "require BulletHelpers;

dfgEntry {
report(this.getAllRigidBodyXfos());
  result = this.getAllRigidBodyXfos();
}
"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":373.393704891,\"y\":-235.232568026}"
        },
      "name" : "EmptyDrawingHandle",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "handle",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle",
      "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":656.127805233,\"y\":-164.251405001}"
        },
      "name" : "DrawPolygonMeshInstances",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "this",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "name",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "color",
          "nodePortType" : "In",
          "defaultValues" : {
            "Color" : {
              "r" : 0,
              "g" : 0.6000000238418579,
              "b" : 1,
              "a" : 1
              }
            }
          },
        {
          "objectType" : "InstPort",
          "name" : "specular",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "specFactor",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "transforms",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "mesh",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "wireFrame",
          "nodePortType" : "In",
          "defaultValues" : {
            "Boolean" : false
            }
          },
        {
          "objectType" : "InstPort",
          "name" : "doubleSided",
          "nodePortType" : "In",
          "defaultValues" : {
            "Boolean" : false
            }
          },
        {
          "objectType" : "InstPort",
          "name" : "dummyResult",
          "nodePortType" : "Out"
          },
        {
          "objectType" : "InstPort",
          "name" : "instance",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.DrawPolygonMeshInstances",
      "presetGUID" : "0C9FCE9D40A851AD390C29C4A14B316D"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":372.347409725,\"y\":-70.1643593311}"
        },
      "name" : "GetCube",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "size",
          "nodePortType" : "In",
          "defaultValues" : {
            "Float32" : 0.1800000071525574
            }
          },
        {
          "objectType" : "InstPort",
          "name" : "mesh",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Compounds.PolygonMesh.Create.GetCube",
      "presetGUID" : "0E6A12754DCE2F4F12529B6D80236D75"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":530.356687069,\"y\":-24.174233675}"
        },
      "name" : "Transform",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "mesh",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "xfo",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Compounds.PolygonMesh.Modify.Transform",
      "presetGUID" : "4293D289E438FE24AF2B0BA7FF7CDCEA"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":381.012998104,\"y\":20.1276385784}"
        },
      "name" : "Xfo_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "ori",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "tr",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "sc",
          "nodePortType" : "In",
          "defaultValues" : {
            "Vec3" : {
              "x" : 1,
              "y" : 1,
              "z" : 1
              }
            }
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Exts.Math.Xfo.ComposeXfo",
      "presetGUID" : "C0E51330BF816566F031E94807D29ED1"
      },
    {
      "objectType" : "User",
      "metadata" : {
        "uiTitle" : "Rendering",
        "uiGraphPos" : "{\"x\":293.386777401,\"y\":-346.944421053}",
        "uiNodeColor" : "{\n  \"r\" : 204,\n  \"g\" : 69,\n  \"b\" : 208\n  }",
        "uiGraphSize" : "{\n  \"w\" : 680,\n  \"h\" : 547\n  }"
        },
      "name" : "Rendering",
      "ports" : []
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-610.801155329,\"y\":71.734975338}"
        },
      "name" : "RigidBodySimulation",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "fps",
          "nodePortType" : "In",
          "defaultValues" : {
            "Scalar" : 30
            }
          },
        {
          "objectType" : "InstPort",
          "name" : "subSteps",
          "nodePortType" : "In",
          "defaultValues" : {
            "UInt32" : 3
            }
          },
        {
          "objectType" : "InstPort",
          "name" : "gravity",
          "nodePortType" : "In",
          "defaultValues" : {
            "Vec3" : {
              "x" : 0,
              "y" : -10,
              "z" : 0
              }
            }
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "metadata" : {
          "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.0/HTML/KLExtensionsGuide/BulletHelpers/RigidBodySimulation.html",
          "uiTooltip" : "\n\n Supported by RigidBodySimulation"
          },
        "title" : "RigidBodySimulation",
        "ports" : [
          {
            "objectType" : "ExecPort",
            "name" : "exec",
            "nodePortType" : "IO",
            "execPortType" : "IO",
            "typeSpec" : "Execute"
            },
          {
            "objectType" : "ExecPort",
            "name" : "fps",
            "nodePortType" : "Out",
            "defaultValues" : {
              "Scalar" : 24
              },
            "execPortType" : "In",
            "typeSpec" : "Scalar"
            },
          {
            "objectType" : "ExecPort",
            "name" : "subSteps",
            "nodePortType" : "Out",
            "defaultValues" : {
              "UInt32" : 2
              },
            "execPortType" : "In",
            "typeSpec" : "UInt32"
            },
          {
            "objectType" : "ExecPort",
            "metadata" : {
              "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
              },
            "name" : "gravity",
            "nodePortType" : "Out",
            "defaultValues" : {
              "Vec3" : {
                "x" : 0,
                "y" : -10,
                "z" : 0
                }
              },
            "execPortType" : "In",
            "typeSpec" : "Vec3"
            },
          {
            "objectType" : "ExecPort",
            "name" : "result",
            "nodePortType" : "In",
            "execPortType" : "Out",
            "typeSpec" : "RigidBodySimulation"
            }
          ],
        "extDeps" : {
          "BulletHelpers" : "*"
          },
        "origPresetGUID" : "51C7A04E35663B9FA8C6852A560D934D",
        "code" : "require BulletHelpers;

dfgEntry {
  result = RigidBodySimulation(fps, subSteps, gravity);
  result.initialized = false;
}
"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":63.2001779079,\"y\":15.4043064117}",
        "uiCollapsedState" : "0"
        },
      "name" : "ragdoll_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "time",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "sim",
          "nodePortType" : "IO"
          }
        ],
      "definition" : {
        "objectType" : "Func",
        "title" : "ragdoll",
        "ports" : [
          {
            "objectType" : "ExecPort",
            "name" : "exec",
            "nodePortType" : "IO",
            "execPortType" : "IO",
            "typeSpec" : "Execute"
            },
          {
            "objectType" : "ExecPort",
            "name" : "time",
            "nodePortType" : "Out",
            "execPortType" : "In",
            "typeSpec" : "Scalar"
            },
          {
            "objectType" : "ExecPort",
            "name" : "sim",
            "nodePortType" : "IO",
            "execPortType" : "IO",
            "typeSpec" : "RigidBodySimulation"
            }
          ],
        "extDeps" : {
          "BulletHelpers" : "*",
          "BulletRagdoll" : "*",
          "Math" : "*"
          },
        "code" : "const Integer BODYPART_PELVIS = 0;
const Integer BODYPART_LEFT_UPPER_LEG = 3;
const Integer BODYPART_SPINE = 1;
const Integer BODYPART_HEAD = 2;
const Integer BODYPART_LEFT_LOWER_LEG = 4;
const Integer BODYPART_RIGHT_UPPER_LEG = 5;
const Integer BODYPART_RIGHT_LOWER_LEG = 6;
const Integer BODYPART_LEFT_UPPER_ARM = 7;
const Integer BODYPART_LEFT_LOWER_ARM = 8;
const Integer BODYPART_RIGHT_UPPER_ARM = 9;
const Integer BODYPART_RIGHT_LOWER_ARM = 10;
const Integer BODYPART_COUNT = 11;
const Integer JOINT_PELVIS_SPINE = 0;
const Integer JOINT_SPINE_HEAD = 1;
const Integer JOINT_LEFT_HIP = 2;
const Integer JOINT_LEFT_KNEE = 3;
const Integer JOINT_RIGHT_HIP = 4;
const Integer JOINT_RIGHT_KNEE = 5;
const Integer JOINT_LEFT_SHOULDER = 6;
const Integer JOINT_LEFT_ELBOW = 7;
const Integer JOINT_RIGHT_SHOULDER = 8;
const Integer JOINT_RIGHT_ELBOW = 9;
const Integer JOINT_COUNT = 10;


function BulletRagdoll.addBodyPart!(io RigidBodySimulation sim, Integer index, Xfo xfo)
{
  BulletCapsuleShape shape = this.shapes[index];
  Lines lines();
  Scalar radius = shape.getRadius();
  Scalar height = shape.getHalfHeight() * 2.0;
  lines.addCapsule(Xfo(), radius, height, 24);
  Float32 mass = 1.0;
  Float32 friction = 0.5;
  Float32 restitution = 0.0;
  Vec3 linearVelocity = Vec3(0,0,0);
  Vec3 angularVelocity = Vec3(0,1,0);
  this.bodies[index].body = sim.addRigidBody(mass, friction, restitution, xfo, linearVelocity, angularVelocity, shape);
  //this.bodies[index] = sim.addRigidBody(1.0, xfo, shape, lines, this.color);
}

  
function BulletRagdoll.create!(io RigidBodySimulation sim, Xfo offset, Color color)
{
  this.color = color;
  // Setup the geometry
  this.shapes.resize(BODYPART_COUNT);
  this.shapes[BODYPART_PELVIS] = BulletCapsuleShape(0.15, 0.20);
  this.shapes[BODYPART_SPINE] = BulletCapsuleShape(0.15, 0.28);
  this.shapes[BODYPART_HEAD] = BulletCapsuleShape(0.10, 0.05);
  this.shapes[BODYPART_LEFT_UPPER_LEG] = BulletCapsuleShape(0.07, 0.45);
  this.shapes[BODYPART_LEFT_LOWER_LEG] = BulletCapsuleShape(0.05, 0.37);
  this.shapes[BODYPART_RIGHT_UPPER_LEG] = BulletCapsuleShape(0.07, 0.45);
  this.shapes[BODYPART_RIGHT_LOWER_LEG] = BulletCapsuleShape(0.05, 0.37);
  this.shapes[BODYPART_LEFT_UPPER_ARM] = BulletCapsuleShape(0.05, 0.33);
  this.shapes[BODYPART_LEFT_LOWER_ARM] = BulletCapsuleShape(0.04, 0.25);
  this.shapes[BODYPART_RIGHT_UPPER_ARM] = BulletCapsuleShape(0.05, 0.33);
  this.shapes[BODYPART_RIGHT_LOWER_ARM] = BulletCapsuleShape(0.04, 0.25);
  // Setup all the rigid bodies
  this.bodies.resize(BODYPART_COUNT);
  Xfo transform;
  transform.setIdentity();
  transform.tr = Vec3(0.0, 1.0, 0.0);
  this.addBodyPart(sim, BODYPART_PELVIS, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(0.0, 1.2, 0.0);
  this.addBodyPart(sim, BODYPART_SPINE, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(0.0, 1.6, 0.0);
  this.addBodyPart(sim, BODYPART_HEAD, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(-0.18, 0.65, 0.0);
  this.addBodyPart(sim, BODYPART_LEFT_UPPER_LEG, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(-0.18, 0.2, 0.0);
  this.addBodyPart(sim, BODYPART_LEFT_LOWER_LEG, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(0.18, 0.65, 0.0);
  this.addBodyPart(sim, BODYPART_RIGHT_UPPER_LEG, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(0.18, 0.2, 0.0);
  this.addBodyPart(sim, BODYPART_RIGHT_LOWER_LEG, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(-0.35, 1.45, 0.0);
  transform.ori.setFromEuler(Euler(0.0, 0.0, HALF_PI, RotationOrder('ZYX')));
  this.addBodyPart(sim, BODYPART_LEFT_UPPER_ARM, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(-0.7, 1.45, 0.0);
  transform.ori.setFromEuler(Euler(0.0, 0.0, HALF_PI, RotationOrder('ZYX')));
  this.addBodyPart(sim, BODYPART_LEFT_LOWER_ARM, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(0.35, 1.45, 0.0);
  transform.ori.setFromEuler(Euler(0,0,-HALF_PI, RotationOrder('ZYX')));
  this.addBodyPart(sim, BODYPART_RIGHT_UPPER_ARM, offset*transform);
  transform.setIdentity();
  transform.tr = Vec3(0.7, 1.45, 0.0);
  transform.ori.setFromEuler(Euler(0,0,-HALF_PI, RotationOrder('ZYX')));
  this.addBodyPart(sim, BODYPART_RIGHT_LOWER_ARM, offset*transform);
  // Setup some damping on the this.bodies
  for (Integer i = 0; i < BODYPART_COUNT; ++i)
  {
    this.bodies[i].body.setDamping(0.05, 0.85);
    this.bodies[i].body.setDeactivationTime(0.8);
    this.bodies[i].body.setSleepingThresholds(1.6, 2.5);
  }
  // Now setup the constraints
  this.joints.resize(JOINT_COUNT);
  Xfo localA, localB;
  localA.setIdentity(); localB.setIdentity();
  {
    localA.ori.setFromEuler(Euler(0.0, HALF_PI, 0.0, RotationOrder('ZYX'))); localA.tr = Vec3(0.0, 0.15, 0.0);
    localB.ori.setFromEuler(Euler(0.0, HALF_PI, 0.0, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, -0.15, 0.0);
    BulletHingeConstraint hingeC(this.bodies[BODYPART_PELVIS].body, this.bodies[BODYPART_SPINE].body, localA, localB);//
    hingeC.setLimit(-QUARTER_PI, HALF_PI);
    this.joints[JOINT_PELVIS_SPINE] = hingeC;
    //hingeC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0,0, HALF_PI, RotationOrder('ZYX'))); localA.tr = Vec3(0.0, 0.30, 0.0);
    localB.ori.setFromEuler(Euler(0,0, HALF_PI, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, -0.14, 0.0);
    BulletConeTwistConstraint coneC(this.bodies[BODYPART_SPINE].body, this.bodies[BODYPART_HEAD].body, localA, localB);
    coneC.setLimit(QUARTER_PI, QUARTER_PI, HALF_PI);
    this.joints[JOINT_SPINE_HEAD] = coneC;
    //coneC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0,0,-QUARTER_PI*5, RotationOrder('ZYX'))); localA.tr = Vec3(-0.18, -0.10, 0.0);
    localB.ori.setFromEuler(Euler(0,0,-QUARTER_PI*5, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, 0.225, 0.0);
    BulletConeTwistConstraint coneC(this.bodies[BODYPART_PELVIS].body, this.bodies[BODYPART_LEFT_UPPER_LEG].body, localA, localB);
    coneC.setLimit(QUARTER_PI, QUARTER_PI, 0);
    this.joints[JOINT_LEFT_HIP] = coneC;
    //coneC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0.0, HALF_PI, 0.0, RotationOrder('ZYX'))); localA.tr = Vec3(0.0, -0.225, 0.0);
    localB.ori.setFromEuler(Euler(0.0, HALF_PI, 0.0, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, 0.185, 0.0);
    BulletHingeConstraint hingeC(this.bodies[BODYPART_LEFT_UPPER_LEG].body, this.bodies[BODYPART_LEFT_LOWER_LEG].body, localA, localB);
    hingeC.setLimit(0, HALF_PI);
    this.joints[JOINT_LEFT_KNEE] = hingeC;
    //hingeC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0, 0, QUARTER_PI, RotationOrder('ZYX'))); localA.tr = Vec3(0.18, -0.10, 0.0);
    localB.ori.setFromEuler(Euler(0, 0, QUARTER_PI, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, 0.225, 0.0);
    BulletConeTwistConstraint coneC(this.bodies[BODYPART_PELVIS].body, this.bodies[BODYPART_RIGHT_UPPER_LEG].body, localA, localB);
    coneC.setLimit(QUARTER_PI, QUARTER_PI, 0);
    this.joints[JOINT_RIGHT_HIP] = coneC;
    //coneC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0.0, HALF_PI,0.0, RotationOrder('ZYX'))); localA.tr = Vec3(0.0, -0.225, 0.0);
    localB.ori.setFromEuler(Euler(0.0, HALF_PI,0.0, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, 0.185, 0.0);
    BulletHingeConstraint hingeC = BulletHingeConstraint(this.bodies[BODYPART_RIGHT_UPPER_LEG].body, this.bodies[BODYPART_RIGHT_LOWER_LEG].body, localA, localB);
    hingeC.setLimit(0, HALF_PI);
    this.joints[JOINT_RIGHT_KNEE] = hingeC;
    //hingeC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0,0, PI, RotationOrder('ZYX'))); localA.tr = Vec3(-0.2, 0.15, 0.0);
    localB.ori.setFromEuler(Euler(0,0, HALF_PI, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, -0.18, 0.0);
    BulletConeTwistConstraint coneC(this.bodies[BODYPART_SPINE].body, this.bodies[BODYPART_LEFT_UPPER_ARM].body, localA, localB);
    coneC.setLimit(HALF_PI, HALF_PI, 0);
    this.joints[JOINT_LEFT_SHOULDER] = coneC;
    //coneC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }

  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0.0, HALF_PI,0.0, RotationOrder('ZYX'))); localA.tr = Vec3(0.0, 0.18, 0.0);
    localB.ori.setFromEuler(Euler(0.0, HALF_PI,0.0, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, -0.14, 0.0);
    BulletHingeConstraint hingeC(this.bodies[BODYPART_LEFT_UPPER_ARM].body, this.bodies[BODYPART_LEFT_LOWER_ARM].body, localA, localB);
  //    hingeC.setLimit(HALF_PI, 0));
    hingeC.setLimit(0, HALF_PI);
    this.joints[JOINT_LEFT_ELBOW] = hingeC;
    //hingeC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0,0,0, RotationOrder('ZYX'))); localA.tr = Vec3(0.2, 0.15, 0.0);
    localB.ori.setFromEuler(Euler(0,0, HALF_PI, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, -0.18, 0.0);
    BulletConeTwistConstraint coneC(this.bodies[BODYPART_SPINE].body, this.bodies[BODYPART_RIGHT_UPPER_ARM].body, localA, localB);
    coneC.setLimit(HALF_PI, HALF_PI, 0);
    this.joints[JOINT_RIGHT_SHOULDER] = coneC;
    //coneC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  {
    localA.setIdentity(); localB.setIdentity();
    localA.ori.setFromEuler(Euler(0.0, HALF_PI,0.0, RotationOrder('ZYX'))); localA.tr = Vec3(0.0, 0.18, 0.0);
    localB.ori.setFromEuler(Euler(0.0, HALF_PI,0.0, RotationOrder('ZYX'))); localB.tr = Vec3(0.0, -0.14, 0.0);
    BulletHingeConstraint hingeC(this.bodies[BODYPART_RIGHT_UPPER_ARM].body, this.bodies[BODYPART_RIGHT_LOWER_ARM].body, localA, localB);
  //    hingeC.setLimit(HALF_PI, 0));
    hingeC.setLimit(0, HALF_PI);
    this.joints[JOINT_RIGHT_ELBOW] = hingeC;
    //hingeC.setDbgDrawSize(CONSTRAINT_DEBUG_SIZE);
  }
  for(Integer i=0; i<this.joints.size(); i++){
    sim.dynamicsWorld.addConstraint(this.joints[i], true);
  }
}


dfgEntry {
  if(!sim.initialized){
    sim.initPhysics();
    sim.createGround();
    BulletRagdoll ragDoll = BulletRagdoll();
    ragDoll.create(sim, Xfo(), randomColor(217, 1));
    sim.initialized = true;
  }
  
  if(time <= 1.0){
    sim.resetSimulation();
    sim.dynamicsWorld.setGravity(Vec3(0,-10,0));
  }
  else{
    sim.stepSimulation();
  }
}

"
        }
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-352.987112045,\"y\":94.34279632569999}"
        },
      "name" : "Cache_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "value",
          "nodePortType" : "In"
          }
        ],
      "executable" : "Fabric.Core.Data.Cache",
      "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
      },
    {
      "objectType" : "Inst",
      "metadata" : {
        "uiGraphPos" : "{\"x\":-198.27828598,\"y\":86.85688781739999}"
        },
      "name" : "Copy_2",
      "ports" : [
        {
          "objectType" : "InstPort",
          "name" : "exec",
          "nodePortType" : "IO"
          },
        {
          "objectType" : "InstPort",
          "name" : "value",
          "nodePortType" : "In"
          },
        {
          "objectType" : "InstPort",
          "name" : "result",
          "nodePortType" : "Out"
          }
        ],
      "executable" : "Fabric.Core.Func.Copy",
      "presetGUID" : "C3E84342DB046C048BABD41DF1B5E3ED"
      }
    ],
  "connections" : {
    "timeline" : [
      "ragdoll.time",
      "ragdoll_2.time"
      ],
    "GetAllRigidBodyXfos_2.result" : [
      "DrawPolygonMeshInstances.transforms"
      ],
    "EmptyDrawingHandle.handle" : [
      "DrawPolygonMeshInstances.this"
      ],
    "DrawPolygonMeshInstances.this" : [
      "this"
      ],
    "DrawPolygonMeshInstances.dummyResult" : [
      "dummyResult"
      ],
    "DrawPolygonMeshInstances.instance" : [
      "instance"
      ],
    "GetCube.mesh" : [
      "Transform.mesh"
      ],
    "Transform.result" : [
      "DrawPolygonMeshInstances.mesh"
      ],
    "Xfo_2.result" : [
      "Transform.xfo"
      ],
    "RigidBodySimulation.result" : [
      "Cache_2.value"
      ],
    "ragdoll_2.sim" : [
      "GetAllRigidBodyXfos_2.this"
      ],
    "Cache_2.value" : [
      "Copy_2.value"
      ],
    "Copy_2.result" : [
      "ragdoll_2.sim"
      ]
    },
  "requiredPresets" : {
    "Fabric.Exts.InlineDrawing.DrawingHandle.EmptyDrawingHandle" : {
      "objectType" : "Graph",
      "title" : "EmptyDrawingHandle",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "handle",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "2440020BA6A1CAB1CEB690A198F99C70",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 894, \"y\": 100}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "this",
              "nodePortType" : "IO"
              }
            ],
          "cacheRule" : "never",
          "executable" : "Fabric.Exts.InlineDrawing.DrawingHandle.Clear",
          "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\":567.0,\"y\":56.0}",
            "uiCollapsedState" : "0"
            },
          "name" : "handleVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "name" : "value",
              "nodePortType" : "IO"
              }
            ],
          "dataType" : "DrawingHandle",
          "extDep" : "InlineDrawing:*"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":287.0,\"y\":56.0}"
            },
          "name" : "CreateDrawingHandle",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "handle",
              "nodePortType" : "Out"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "Create DrawingHandle",
            "ports" : [
              {
                "objectType" : "ExecPort",
                "name" : "exec",
                "nodePortType" : "IO",
                "execPortType" : "IO",
                "typeSpec" : "Execute"
                },
              {
                "objectType" : "ExecPort",
                "name" : "handle",
                "nodePortType" : "In",
                "execPortType" : "Out",
                "typeSpec" : "DrawingHandle"
                }
              ],
            "extDeps" : {
              "InlineDrawing" : "*"
              },
            "code" : "dfgEntry {
  handle = DrawingHandle();
}
"
            }
          }
        ],
      "connections" : {
        "Clear.this" : [
          "handle"
          ],
        "handleVar.value" : [
          "Clear.this"
          ],
        "CreateDrawingHandle.handle" : [
          "handleVar.value"
          ]
        }
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.1/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "removes all contents from the DrawingHandle\n\n Supported by DrawingHandle"
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "this",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*"
        },
      "presetGUID" : "39E8D81FA7C7C4A825877F16EFE3564F",
      "code" : "require InlineDrawing;

dfgEntry {
  this.clear();
}
"
      },
    "Fabric.Exts.InlineDrawing.DrawingHandle.DrawPolygonMeshInstances" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.1/HTML/KLExtensionsGuide/InlineDrawing/DrawingHandle.html",
        "uiTooltip" : "helper function to draw a mesh given a color + an array of transforms\n\n Supported by DrawingHandle"
        },
      "title" : "DrawPolygonMeshInstances",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "this",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "DrawingHandle"
          },
        {
          "objectType" : "ExecPort",
          "name" : "name",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
            },
          "name" : "color",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Color" : {
              "r" : 0,
              "g" : 1,
              "b" : 0,
              "a" : 1
              }
            },
          "execPortType" : "In",
          "typeSpec" : "Color"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 0,\n  \"b\" : 0\n  }"
            },
          "name" : "specular",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Color" : {
              "r" : 0.2000000029802322,
              "g" : 0.2000000029802322,
              "b" : 0.2000000029802322,
              "a" : 1
              }
            },
          "execPortType" : "In",
          "typeSpec" : "Color"
          },
        {
          "objectType" : "ExecPort",
          "name" : "specFactor",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 16
            },
          "execPortType" : "In",
          "typeSpec" : "Float32"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "name" : "transforms",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Xfo[]"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "name" : "mesh",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "ExecPort",
          "name" : "wireFrame",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "ExecPort",
          "name" : "doubleSided",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "name" : "dummyResult",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "ExecPort",
          "name" : "instance",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "InlineInstance"
          }
        ],
      "extDeps" : {
        "InlineDrawing" : "*",
        "FabricInterfaces" : "*"
        },
      "presetGUID" : "0C9FCE9D40A851AD390C29C4A14B316D",
      "code" : "require InlineDrawing;

dfgEntry {
  this.drawPolygonMeshInstances(name, color, specular, specFactor, transforms, mesh, wireFrame, doubleSided, dummyResult, instance);
}
"
      },
    "Fabric.Compounds.PolygonMesh.Create.GetCube" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 120,\n  \"g\" : 130,\n  \"b\" : 144\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 88,\n  \"g\" : 92,\n  \"b\" : 110\n  }",
        "uiTooltip" : "Generates a polygon mesh cube."
        },
      "title" : "GetCube",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiRange" : "(0, 5)"
            },
          "name" : "size",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Float32" : 2
            },
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "ExecPort",
          "name" : "mesh",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "0E6A12754DCE2F4F12529B6D80236D75",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 1010.5, \"y\": 384}"
            },
          "name" : "Cache",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "value",
              "nodePortType" : "In"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 761.5, \"y\": 358}"
            },
          "name" : "RecomputePointNormals",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "this",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "hardAngleRadians",
              "nodePortType" : "In",
              "defaultValues" : {
                "Float32" : 0
                }
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.RecomputePointNormals",
          "presetGUID" : "82B0904C5BAB58BDA9ED038FB18E0629"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 412.5, \"y\": 315}"
            },
          "name" : "EmptyPolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "mesh",
              "nodePortType" : "Out"
              },
            {
              "objectType" : "InstPort",
              "name" : "debugName",
              "nodePortType" : "In"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.EmptyPolygonMesh",
          "presetGUID" : "D78522D6442F98D2BA57F676845585E9"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 604, \"y\": 357}"
            },
          "name" : "AddCuboid",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "this",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "xfo",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "x",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "y",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "z",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "setNormals",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "setUVs",
              "nodePortType" : "In"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.AddCuboid",
          "presetGUID" : "158D097D640404E84CB79186BF0DF9DF"
          }
        ],
      "connections" : {
        "size" : [
          "AddCuboid.x",
          "AddCuboid.y",
          "AddCuboid.z"
          ],
        "Cache.value" : [
          "mesh"
          ],
        "RecomputePointNormals.this" : [
          "Cache.value"
          ],
        "EmptyPolygonMesh.mesh" : [
          "AddCuboid.this"
          ],
        "AddCuboid.this" : [
          "RecomputePointNormals.this"
          ]
        }
      },
    "Fabric.Core.Data.Cache" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiAlwaysShowDaisyChainPorts" : "true",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "Cache",
      "cacheRule" : "always",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "value",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "D903AFD981FE9214C69943F542D5FD60",
      "code" : "dfgEntry {
}
"
      },
    "Fabric.Exts.Geometry.PolygonMesh.RecomputePointNormals" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.1/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Recomputes all point normals and introduces normal splits if adjacent polygons' normals differ by more than `hardAngleRadians` radians.\nAll previously stored point normals will be overwritten.\nThe computed normal value is the average of neighbor polygons' :kl-ref:`PolygonMesh.generatePolygonNormal` (or a subset of these if there is a split).\n\n Supported by PolygonMesh"
        },
      "title" : "RecomputePointNormals",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "name" : "this",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "ExecPort",
          "name" : "hardAngleRadians",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "82B0904C5BAB58BDA9ED038FB18E0629",
      "code" : "require Geometry;

dfgEntry {
  this.recomputePointNormals(hardAngleRadians);
}
"
      },
    "Fabric.Exts.Geometry.PolygonMesh.EmptyPolygonMesh" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiGraphPan" : "{\n  \"x\" : 477.0,\n  \"y\" : 61.0\n  }"
        },
      "title" : "EmptyPolygonMesh",
      "cacheRule" : "never",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "mesh",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "ExecPort",
          "name" : "debugName",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "String"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "D78522D6442F98D2BA57F676845585E9",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\":29.0,\"y\":24.0}"
            },
          "name" : "PolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "debugName",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "float64Positions",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "result",
              "nodePortType" : "Out"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.PolygonMesh",
          "presetGUID" : "18F3A38BE7497D6BFC18A148A520B66D"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 951, \"y\": 145}"
            },
          "name" : "Clear",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "this",
              "nodePortType" : "IO"
              }
            ],
          "cacheRule" : "never",
          "executable" : "Fabric.Exts.Geometry.Func.Clear",
          "presetGUID" : "96D1EC86835296FFDC60533717804EE7"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 744, \"y\": 122}"
            },
          "name" : "meshVar",
          "ports" : [
            {
              "objectType" : "VarPort",
              "name" : "value",
              "nodePortType" : "IO"
              }
            ],
          "dataType" : "PolygonMesh",
          "extDep" : "Geometry:*"
          }
        ],
      "connections" : {
        "debugName" : [
          "PolygonMesh.debugName"
          ],
        "PolygonMesh.result" : [
          "meshVar.value"
          ],
        "Clear.this" : [
          "mesh"
          ],
        "meshVar.value" : [
          "Clear.this"
          ]
        }
      },
    "Fabric.Exts.Geometry.PolygonMesh.PolygonMesh" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.1/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Constructor.\n\n Supported by PolygonMesh"
        },
      "title" : "PolygonMesh",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "debugName",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "String"
          },
        {
          "objectType" : "ExecPort",
          "name" : "float64Positions",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "18F3A38BE7497D6BFC18A148A520B66D",
      "code" : "require Geometry;

dfgEntry {
  result = PolygonMesh(debugName, float64Positions);
}
"
      },
    "Fabric.Exts.Geometry.Func.Clear" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.1/HTML/KLExtensionsGuide/Geometry/GeometryAttributes.html",
        "uiTooltip" : "Removes all attributes, and resets attribute value array sizes to 0.\n\n Supported by GeometryAttributes,BaseGeometry,Points,Lines,PolygonMesh"
        },
      "title" : "Clear",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "this",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "96D1EC86835296FFDC60533717804EE7",
      "code" : "require Geometry;

dfgEntry {
  this.clear();
}
"
      },
    "Fabric.Exts.Geometry.PolygonMesh.AddCuboid" : {
      "objectType" : "Func",
      "metadata" : {
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.1/HTML/KLExtensionsGuide/Geometry/PolygonMesh.html",
        "uiTooltip" : "Appends a transformed cuboid (cube with specified size) to this mesh.\nBefore applying the transformation, the cuboid is centered at the origin,\nand has a range of [-x/2 .. x/2, -y/2 .. y/2, -z/2 .. z/2].\n\nSet Points Normals\nFace 0 (+Z)\nFace 1 (-Z)\nFace 2 (+Y)\nFace 3 (-Y)\nFace 4 (+X)\nFace 5 (-X)\nSet Uvs\nFace 0 (+Z)\nFace 1 (-Z)\nFace 2 (+Y)\nFace 3 (-Y)\nFace 4 (+X)\nFace 5 (-X)\n\n Supported by PolygonMesh"
        },
      "title" : "AddCuboid",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 51,\n  \"g\" : 1,\n  \"b\" : 106\n  }"
            },
          "name" : "this",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "name" : "xfo",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "name" : "x",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 2
            },
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "name" : "y",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 2
            },
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiRange" : "(0.0, 8.0)"
            },
          "name" : "z",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Scalar" : 2
            },
          "execPortType" : "In",
          "typeSpec" : "Scalar"
          },
        {
          "objectType" : "ExecPort",
          "name" : "setNormals",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          },
        {
          "objectType" : "ExecPort",
          "name" : "setUVs",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Boolean" : true
            },
          "execPortType" : "In",
          "typeSpec" : "Boolean"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "158D097D640404E84CB79186BF0DF9DF",
      "code" : "require Geometry;

dfgEntry {
  this.addCuboid(xfo, x, y, z, setNormals, setUVs);
}
"
      },
    "Fabric.Compounds.PolygonMesh.Modify.Transform" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 120,\n  \"g\" : 130,\n  \"b\" : 144\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 88,\n  \"g\" : 92,\n  \"b\" : 110\n  }",
        "uiTooltip" : "transforms (= translates/rotates/scales) a polygon mesh."
        },
      "title" : "Transform",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "mesh",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "PolygonMesh"
          },
        {
          "objectType" : "ExecPort",
          "name" : "xfo",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "Xfo"
          },
        {
          "objectType" : "ExecPort",
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {
        "Geometry" : "*"
        },
      "presetGUID" : "4293D289E438FE24AF2B0BA7FF7CDCEA",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 725, \"y\": 131}"
            },
          "name" : "Cache",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "value",
              "nodePortType" : "In"
              }
            ],
          "executable" : "Fabric.Core.Data.Cache",
          "presetGUID" : "D903AFD981FE9214C69943F542D5FD60"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 452.5, \"y\": 130.5}"
            },
          "name" : "applyTransform",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "mesh",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "xfo",
              "nodePortType" : "In"
              }
            ],
          "definition" : {
            "objectType" : "Func",
            "title" : "applyTransform",
            "ports" : [
              {
                "objectType" : "ExecPort",
                "name" : "exec",
                "nodePortType" : "IO",
                "execPortType" : "IO",
                "typeSpec" : "Execute"
                },
              {
                "objectType" : "ExecPort",
                "name" : "mesh",
                "nodePortType" : "IO",
                "execPortType" : "IO",
                "typeSpec" : "PolygonMesh"
                },
              {
                "objectType" : "ExecPort",
                "name" : "xfo",
                "nodePortType" : "Out",
                "execPortType" : "In",
                "typeSpec" : "Xfo"
                }
              ],
            "extDeps" : {},
            "code" : "require Geometry;

dfgEntry
{
  mesh.applyTransform(xfo);
}

"
            }
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 251, \"y\": 39}"
            },
          "name" : "ClonePolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "value",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "result",
              "nodePortType" : "Out"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.ClonePolygonMesh",
          "presetGUID" : "8480EBBD95E54A412E1471D01B474BA2"
          }
        ],
      "connections" : {
        "mesh" : [
          "ClonePolygonMesh.value"
          ],
        "xfo" : [
          "applyTransform.xfo"
          ],
        "Cache.value" : [
          "result"
          ],
        "applyTransform.mesh" : [
          "Cache.value"
          ],
        "ClonePolygonMesh.result" : [
          "applyTransform.mesh"
          ]
        }
      },
    "Fabric.Exts.Geometry.PolygonMesh.ClonePolygonMesh" : {
      "objectType" : "Graph",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "ClonePolygonMesh",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "value",
          "nodePortType" : "Out",
          "execPortType" : "In"
          },
        {
          "objectType" : "ExecPort",
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "PolygonMesh"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "8480EBBD95E54A412E1471D01B474BA2",
      "nodes" : [
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 329, \"y\": 165}"
            },
          "name" : "PolygonMesh",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "debugName",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "float64Positions",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "result",
              "nodePortType" : "Out"
              }
            ],
          "executable" : "Fabric.Exts.Geometry.PolygonMesh.PolygonMesh",
          "presetGUID" : "18F3A38BE7497D6BFC18A148A520B66D"
          },
        {
          "objectType" : "Var",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 476, \"y\": 176}"
            },
          "name" : "mesh",
          "ports" : [
            {
              "objectType" : "VarPort",
              "name" : "value",
              "nodePortType" : "IO"
              }
            ],
          "dataType" : "PolygonMesh",
          "extDep" : "Geometry:*"
          },
        {
          "objectType" : "Inst",
          "metadata" : {
            "uiGraphPos" : "{\"x\": 674, \"y\": 115}"
            },
          "name" : "CloneMembersTo",
          "ports" : [
            {
              "objectType" : "InstPort",
              "name" : "exec",
              "nodePortType" : "IO"
              },
            {
              "objectType" : "InstPort",
              "name" : "value",
              "nodePortType" : "In"
              },
            {
              "objectType" : "InstPort",
              "name" : "clonedValue",
              "nodePortType" : "IO"
              }
            ],
          "executable" : "Fabric.Core.Data.CloneMembersTo",
          "presetGUID" : "5FCEF4F5EFB2D8F917E415A22FFCDF2C"
          }
        ],
      "connections" : {
        "value" : [
          "CloneMembersTo.value"
          ],
        "PolygonMesh.result" : [
          "mesh.value"
          ],
        "mesh.value" : [
          "CloneMembersTo.clonedValue"
          ],
        "CloneMembersTo.clonedValue" : [
          "result"
          ]
        }
      },
    "Fabric.Core.Data.CloneMembersTo" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "CloneMembersTo",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "value",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "clonedValue",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "5FCEF4F5EFB2D8F917E415A22FFCDF2C",
      "code" : "dfgEntry {
  value.cloneMembersTo(clonedValue);
}
"
      },
    "Fabric.Exts.Math.Xfo.ComposeXfo" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 99,\n  \"g\" : 129,\n  \"b\" : 92\n  }",
        "uiDocUrl" : "http://docs.fabric-engine.com/FabricEngine/2.2.1/HTML/KLExtensionsGuide/Math/Xfo.html"
        },
      "title" : "-> Xfo",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 0,\n  \"g\" : 191,\n  \"b\" : 232\n  }"
            },
          "name" : "ori",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Quat" : {
              "v" : {
                "x" : 0,
                "y" : 0,
                "z" : 0
                },
              "w" : 1
              }
            },
          "execPortType" : "In",
          "typeSpec" : "Quat"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "name" : "tr",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3" : {
              "x" : 0,
              "y" : 0,
              "z" : 0
              }
            },
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 255,\n  \"g\" : 242,\n  \"b\" : 0\n  }"
            },
          "name" : "sc",
          "nodePortType" : "Out",
          "defaultValues" : {
            "Vec3" : {
              "x" : 1,
              "y" : 1,
              "z" : 1
              }
            },
          "execPortType" : "In",
          "typeSpec" : "Vec3"
          },
        {
          "objectType" : "ExecPort",
          "metadata" : {
            "uiColor" : "{\n  \"r\" : 249,\n  \"g\" : 157,\n  \"b\" : 28\n  }"
            },
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "Xfo"
          }
        ],
      "extDeps" : {
        "Math" : "*"
        },
      "presetGUID" : "C0E51330BF816566F031E94807D29ED1",
      "code" : "require Math;

dfgEntry {
  result.ori = ori;
  result.tr = tr;
  result.sc = sc;
}
"
      },
    "Fabric.Core.Func.Copy" : {
      "objectType" : "Func",
      "metadata" : {
        "uiNodeColor" : "{\n  \"r\" : 214,\n  \"g\" : 191,\n  \"b\" : 103\n  }",
        "uiHeaderColor" : "{\n  \"r\" : 188,\n  \"g\" : 129,\n  \"b\" : 83\n  }"
        },
      "title" : "Copy",
      "ports" : [
        {
          "objectType" : "ExecPort",
          "name" : "exec",
          "nodePortType" : "IO",
          "execPortType" : "IO",
          "typeSpec" : "Execute"
          },
        {
          "objectType" : "ExecPort",
          "name" : "value",
          "nodePortType" : "Out",
          "execPortType" : "In",
          "typeSpec" : "$TYPE$"
          },
        {
          "objectType" : "ExecPort",
          "name" : "result",
          "nodePortType" : "In",
          "execPortType" : "Out",
          "typeSpec" : "$TYPE$"
          }
        ],
      "extDeps" : {},
      "presetGUID" : "C3E84342DB046C048BABD41DF1B5E3ED",
      "code" : "
dfgEntry {
	result = value;
}
"
      }
    },
  "args" : [
    {
      "type" : "Float32",
      "value" : null
      },
    {
      "type" : "DrawingHandle",
      "value" : null,
      "ext" : "InlineDrawing"
      },
    {
      "type" : "Vec3",
      "value" : null,
      "ext" : "Math"
      },
    {
      "type" : "InlineInstance",
      "value" : null,
      "ext" : "InlineDrawing"
      }
    ]
  }
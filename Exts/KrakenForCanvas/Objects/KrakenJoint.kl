require Kraken;

object KrakenJoint : KrakenObject3D {
  // Temporary until we can reduce dg to actually rely on joints instead of solver output xforms with drive joints
  // Joints have source xfo objects with poseconstraints, other things might rely on these xfos instead of the joints
  // That screws up dg graph stuff if you set the joint values and dirty joint dependencies.
  // For dgraph purposes we treat the sourceObject just like the joint itself
  UInt32 sourceObjectUniqueId;
};

/// \dfgPresetFolder Objects
function KrakenJoint(
  String name,
  String buildName,
  String path,
  String layer,
  String component,
  Xfo xfo,
  Boolean visibility,
  Color color
) {
  this.name = name;
  this.buildName = buildName;
  this.path = path;
  this.layer = layer;
  this.component = component;
  this.local = xfo.toMat44();
  this.visibility = visibility;
  this.color = color;
}

/// \dfgPresetFolder DebugDrawing
function KrakenJoint.drawIntoLinesObject(Xfo xfo, io Lines lines) {
  if(!this.visibility)
    return;
  Size firstIndex = lines.pointCount();
  lines.addSphere(xfo, 0.5, 12);
  KrakenObject3D_DrawIntoLines_VertexColors(this, firstIndex, lines);
}

require Kraken;

object OSS_ReverseSolver : KrakenSolver {
};

function OSS_ReverseSolver()
{
  // NOTE, Kraken can create default values for anything
  // we don't specificy here.  Arrays will be empty, matrices identity, etc.

  Scalar input;
  Scalar result;

  this.defaultValues["input"] = 1.0;
  this.defaultValues["result"] = 0.0;

}

// Return Arguments for Kraken
function KrakenSolverArg[] OSS_ReverseSolver.getArguments(){
  KrakenSolverArg args[] = this.parent.getArguments();

  args.push(KrakenSolverArg('input', 'In', 'Scalar'));
  args.push(KrakenSolverArg('result', 'Out', 'Scalar'));
  return args;
}


// Solve
function OSS_ReverseSolver.solve!
(
  in Boolean drawDebug,
  in Scalar rigScale,
  in Scalar input,
  out Scalar result,
  )
{
  result = 1.0 - input;  // I hear LLVM will optimize / inline this code...
}


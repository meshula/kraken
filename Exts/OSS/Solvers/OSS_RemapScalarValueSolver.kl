require Kraken;

object OSS_RemapScalarValueSolver : KrakenSolver {
};


// Return Arguments for Kraken
function KrakenSolverArg[] OSS_RemapScalarValueSolver.getArguments(){
  KrakenSolverArg args[] = this.parent.getArguments();

  args.push(KrakenSolverArg('inputValues', 'In', 'Scalar[]'));
  // args.push(KrakenSolverArg('scale', 'In', 'Scalar[]'));
  args.push(KrakenSolverArg('resultNeg', 'Out', 'Scalar[]'));
  args.push(KrakenSolverArg('resultPos', 'Out', 'Scalar[]'));
  //args.push(KrakenSolverArg('result', 'Out', 'Scalar[]'));  KL builder can't handle non-connected outputs right now
  return args;
}


// Solve
function OSS_RemapScalarValueSolver.solve!
(
  in Boolean drawDebug,
  in Scalar rigScale,
  in Scalar[] inputValues,
  // in Scalar scale[],
  out Scalar[] resultNeg,
  out Scalar[] resultPos,
  //out Scalar[] result
  )
{
  Scalar scale = 1.0;
  UInt32 size = inputValues.size();
  resultPos.resize(size);
  resultNeg.resize(size);
  //result.resize(size);

  for(UInt32 i=0; i<inputValues.size(); i++){
    resultPos[i] = Scalar(Math_max(0,inputValues[i]))*scale;
    resultNeg[i] = abs(Scalar(Math_min(0,inputValues[i])))*scale;
    //result[i] = resultPos[i] - resultNeg[i];
  }
}


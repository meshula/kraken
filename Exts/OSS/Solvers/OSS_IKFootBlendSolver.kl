require InlineDrawing;
require Geometry;
require Kraken;

object OSS_IKFootBlendSolver : KrakenSolver {
};



// Default Constructor
function OSS_IKFootBlendSolver()
{

}


// Return Arguments for Kraken
function KrakenSolverArg[] OSS_IKFootBlendSolver.getArguments(){
  KrakenSolverArg args[] = this.parent.getArguments();
  args.push(KrakenSolverArg('blend', 'In', 'Scalar'));
  args.push(KrakenSolverArg('ikFoot', 'In', 'Mat44'));
  args.push(KrakenSolverArg('fkFoot', 'In', 'Mat44'));
  args.push(KrakenSolverArg('ikBall', 'In', 'Mat44'));
  args.push(KrakenSolverArg('fkBall', 'In', 'Mat44'));
  args.push(KrakenSolverArg('foot', 'Out', 'Mat44'));
  args.push(KrakenSolverArg('ball', 'Out', 'Mat44'));

  return args;
}


// Solve
function OSS_IKFootBlendSolver.solve!
(
  in Boolean drawDebug,
  in Scalar rigScale,
  in Scalar blend,
  in Mat44 ikFoot,
  in Mat44 fkFoot,
  in Mat44 ikBall,
  in Mat44 fkBall,
  io Mat44 foot,
  io Mat44 ball
  )
{
  // The position of the fk foot is always the position we want the foot to be in
  // because the parent of the fk foot control is a product of the leg IK operator which
  // takes ik blend value into account.

  Xfo ikFootXfo = Xfo(ikFoot);
  Xfo fkFootXfo = Xfo(fkFoot);

  Xfo ikBallXfo = Xfo(ikBall);
  Xfo fkBallXfo = Xfo(fkBall);

  //Foot
  Xfo resultFootXfo = ikFootXfo;
  // Copy the position (fkFoot will always have the right position because the FK controls for the foot
  //  are constrained to the output of the IK solver )
  resultFootXfo.tr = fkFootXfo.tr;
  resultFootXfo.ori = fkFootXfo.ori.sphericalLinearInterpolate(ikFootXfo.ori, Math_clamp(blend, 0.0,1.0));
  foot = resultFootXfo.toMat44();

  //Ball
  Xfo resultBallXfo =  resultFootXfo * ikFootXfo.inverse() * ikBallXfo;
  resultBallXfo.ori = fkBallXfo.ori.sphericalLinearInterpolate(resultBallXfo.ori, Math_clamp(blend, 0.0,1.0));
  ball = resultBallXfo.toMat44();

  // Set debugging visibility.
  this.setDebug(drawDebug);
  if(this.drawDebug){
    if(!this.handle)
      this.handle = DrawingHandle();
    drawXfo(this.handle.rootTransform, "footXfo", resultFootXfo);
    drawXfo(this.handle.rootTransform, "ballXfo", resultBallXfo);
  }

}



require Math;
require Geometry;
require Kraken;
require KrakenForCanvas;
require KrakenAnimation;
require OSS_Kraken;

object KRK_biped_guide : KrakenClipEvaluator {
  Float64 solveTimeMs;
  KrakenClip clip; // the default clip of the rig
  KrakenTransform biped_guide;
  KrakenTransform bipedguide_biped_guide_controls;
  KrakenTransform bipedguide_biped_guide_deformers;
  KrakenComponentGroup controls_Mmain_main_M_main_cmp;
  KrakenHierarchyGroup controls_Mmain_main_M_inputs_hrc;
  KrakenBoolAttribute controls_main_M_inputs_inputs_drawDebug;
  KrakenHierarchyGroup controls_Mmain_main_M_outputs_hrc;
  KrakenScalarAttribute controls_main_M_outputs_outputs_rigScale;
  KrakenTransform controls_Mmain_main_M_master_cmpOutOut;
  KrakenTransform controls_Mmain_main_M_offset_cmpOutOut;
  KrakenTransform controls_Mmain_main_M_cog_cmpOutOut;
  KrakenCtrlSpace controls_Mmain_main_M_master01_spaceSpace;
  KrakenCurve controls_Mmain_M_master_fk;
  KrakenScalarAttribute controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale;
  KrakenCtrlSpace controls_Mmain_main_M_offset01_spaceSpace;
  KrakenCurve controls_Mmain_M_offset_fk;
  KrakenCtrlSpace controls_Mmain_main_M_cog01_spaceSpace;
  KrakenCurve controls_Mmain_M_cog_fk;
  KrakenCurve controls_Mmain_M_vis_an;
  KrakenComponentGroup controls_Mspine_spine_M_spine_cmp;
  KrakenHierarchyGroup controls_Mspine_spine_M_inputs_hrc;
  KrakenBoolAttribute controls_spine_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_spine_M_inputs_inputs_rigScale;
  KrakenTransform controls_Mspine_spine_M_parentSpace_cmpInIn;
  KrakenHierarchyGroup controls_Mspine_spine_M_outputs_hrc;
  KrakenTransform controls_Mspine_spine_M_hips_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_spineBase_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_pelvis_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_spineEnd_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_spine01_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_spine02_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_spine03_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_spine04_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_spine05_cmpOutOut;
  KrakenTransform controls_Mspine_spine_M_spine06_cmpOutOut;
  KrakenCtrlSpace controls_Mspine_spine_M_hips01_spaceSpace;
  KrakenCurve controls_Mspine_M_hips_fk;
  KrakenCtrlSpace controls_Mspine_spine_M_pelvis_spaceSpace;
  KrakenCtrlSpace controls_Mspine_spine_M_torso01_spaceSpace;
  KrakenCurve controls_Mspine_M_torso_fk;
  KrakenCtrlSpace controls_Mspine_spine_M_chest01_spaceSpace;
  KrakenCurve controls_Mspine_M_chest_fk;
  KrakenCtrlSpace controls_Mspine_spine_M_upChest01_spaceSpace;
  KrakenCurve controls_Mspine_M_upChest_fk;
  KrakenCtrlSpace controls_Mspine_spine_M_neck_spaceSpace;
  KrakenComponentGroup deformers_Mspine_spine_M_spine_cmp;
  KrakenJoint deformers_Mspine_spine_M_spine01_def;
  KrakenJoint deformers_Mspine_spine_M_spine02_def;
  KrakenJoint deformers_Mspine_spine_M_spine03_def;
  KrakenJoint deformers_Mspine_spine_M_spine04_def;
  KrakenJoint deformers_Mspine_spine_M_spine05_def;
  KrakenJoint deformers_Mspine_spine_M_spine06_def;
  KrakenComponentGroup controls_Lshoulder_shoulder_L_shoulder_cmp;
  KrakenHierarchyGroup controls_Lshoulder_shoulder_L_inputs_hrc;
  KrakenBoolAttribute controls_shoulder_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_shoulder_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_shoulder_L_inputs_inputs_rightSide;
  KrakenTransform controls_Lshoulder_shoulder_L_parentSpace_cmpInIn;
  KrakenHierarchyGroup controls_Lshoulder_shoulder_L_outputs_hrc;
  KrakenTransform controls_Lshoulder_shoulder_L_shldr_cmpOutOut;
  KrakenTransform controls_Lshoulder_shoulder_L_shldrEnd_cmpOutOut;
  KrakenCtrlSpace controls_Lshoulder_shoulder_L_shldr01_spaceSpace;
  KrakenCurve controls_Lshoulder_L_shldr_fk;
  KrakenCtrlSpace controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace;
  KrakenComponentGroup deformers_Lshoulder_shoulder_L_shoulder_cmp;
  KrakenJoint deformers_Lshoulder_shoulder_L_shldr_def;
  KrakenComponentGroup controls_Rshoulder_shoulder_R_shoulder_cmp;
  KrakenHierarchyGroup controls_Rshoulder_shoulder_R_inputs_hrc;
  KrakenBoolAttribute controls_shoulder_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_shoulder_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_shoulder_R_inputs_inputs_rightSide;
  KrakenTransform controls_Rshoulder_shoulder_R_parentSpace_cmpInIn;
  KrakenHierarchyGroup controls_Rshoulder_shoulder_R_outputs_hrc;
  KrakenTransform controls_Rshoulder_shoulder_R_shldr_cmpOutOut;
  KrakenTransform controls_Rshoulder_shoulder_R_shldrEnd_cmpOutOut;
  KrakenCtrlSpace controls_Rshoulder_shoulder_R_shldr01_spaceSpace;
  KrakenCurve controls_Rshoulder_R_shldr_fk;
  KrakenCtrlSpace controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace;
  KrakenComponentGroup deformers_Rshoulder_shoulder_R_shoulder_cmp;
  KrakenJoint deformers_Rshoulder_shoulder_R_shldr_def;
  KrakenComponentGroup controls_Lleg_leg_L_leg_cmp;
  KrakenHierarchyGroup controls_Lleg_leg_L_inputs_hrc;
  KrakenBoolAttribute controls_leg_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_leg_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_leg_L_inputs_inputs_rightSide;
  KrakenScalarAttribute controls_leg_L_inputs_inputs_ikBlend;
  KrakenScalarAttribute controls_leg_L_inputs_inputs_softDist;
  KrakenScalarAttribute controls_leg_L_inputs_inputs_stretch;
  KrakenTransform controls_Lleg_leg_L_globalSRT_cmpInIn;
  KrakenTransform controls_Lleg_leg_L_parentSpace_cmpInIn;
  KrakenTransform controls_Lleg_leg_L_ikGoalInput_cmpInIn;
  KrakenHierarchyGroup controls_Lleg_leg_L_outputs_hrc;
  KrakenBoolAttribute controls_leg_L_outputs_outputs_drawDebug;
  KrakenTransform controls_Lleg_leg_L_uplimb_cmpOutOut;
  KrakenTransform controls_Lleg_leg_L_lolimb_cmpOutOut;
  KrakenTransform controls_Lleg_leg_L_endlimb_cmpOutOut;
  KrakenCtrlSpace controls_Lleg_leg_L_upLeg01_spaceSpace;
  KrakenCurve controls_Lleg_L_upLeg_fk;
  KrakenCtrlSpace controls_Lleg_leg_L_loLeg01_spaceSpace;
  KrakenCurve controls_Lleg_L_loLeg_fk;
  KrakenCtrlSpace controls_Lleg_leg_L_footIK_spaceSpace;
  KrakenTransform controls_Lleg_L_footIK_xfo;
  KrakenScalarAttribute controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len;
  KrakenScalarAttribute controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len;
  KrakenBoolAttribute controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_drawDebug;
  KrakenCtrlSpace controls_Lleg_leg_L_legUpV01_spaceSpace;
  KrakenCurve controls_Lleg_L_legUpV_an;
  KrakenScalarAttribute controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace;
  KrakenCtrlSpace controls_Lleg_leg_L_legUpVIK_spaceSpace;
  KrakenCtrlSpace controls_Lleg_leg_L_legIKMaster_spaceSpace;
  KrakenComponentGroup deformers_Lleg_leg_L_leg_cmp;
  KrakenJoint deformers_Lleg_leg_L_upLeg_def;
  KrakenJoint deformers_Lleg_leg_L_loLeg_def;
  KrakenJoint deformers_Lleg_leg_L_legend_def;
  KrakenComponentGroup controls_Lfoot_foot_L_foot_cmp;
  KrakenHierarchyGroup controls_Lfoot_foot_L_inputs_hrc;
  KrakenBoolAttribute controls_foot_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_foot_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_foot_L_inputs_inputs_rightSide;
  KrakenTransform controls_Lfoot_foot_L_globalSRT_cmpInIn;
  KrakenTransform controls_Lfoot_foot_L_parentSpace_cmpInIn;
  KrakenHierarchyGroup controls_Lfoot_foot_L_outputs_hrc;
  KrakenBoolAttribute controls_foot_L_outputs_outputs_drawDebug;
  KrakenScalarAttribute controls_foot_L_outputs_outputs_ikBlend;
  KrakenScalarAttribute controls_foot_L_outputs_outputs_limbMocap;
  KrakenScalarAttribute controls_foot_L_outputs_outputs_softDist;
  KrakenScalarAttribute controls_foot_L_outputs_outputs_stretch;
  KrakenTransform controls_Lfoot_foot_L_foot_cmpOutOut;
  KrakenTransform controls_Lfoot_foot_L_ball_cmpOutOut;
  KrakenTransform controls_Lfoot_foot_L_ikgoal_cmpOutOut;
  KrakenTransform controls_Lfoot_L_footRockerFoot_out_xfo;
  KrakenTransform controls_Lfoot_L_footRockerBall_out_xfo;
  KrakenTransform controls_Lfoot_L_IKFootBlendKLOpFoot_out_xfo;
  KrakenTransform controls_Lfoot_L_IKFootBlendKLOpBall_out_xfo;
  KrakenCtrlSpace controls_Lfoot_foot_L_foot01_spaceSpace;
  KrakenCurve controls_Lfoot_L_foot_ik;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch;
  KrakenBoolAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_drawDebug;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap;
  KrakenTransform controls_Lfoot_L_ikGoalRef_xfo;
  KrakenTransform controls_Lfoot_L_ballJoint_xfo;
  KrakenTransform controls_Lfoot_L_footJoint_xfo;
  KrakenTransform controls_Lfoot_L_heelPivot_xfo;
  KrakenTransform controls_Lfoot_L_ballPivot_xfo;
  KrakenTransform controls_Lfoot_L_ballTipPivot_xfo;
  KrakenTransform controls_Lfoot_L_innerPivot_xfo;
  KrakenTransform controls_Lfoot_L_outerPivot_xfo;
  KrakenCtrlSpace controls_Lfoot_foot_L_foot02_spaceSpace;
  KrakenCurve controls_Lfoot_L_foot_fk;
  KrakenCtrlSpace controls_Lfoot_foot_L_ball01_spaceSpace;
  KrakenCurve controls_Lfoot_L_ball_fk;
  KrakenComponentGroup deformers_Lfoot_foot_L_foot_cmp;
  KrakenJoint deformers_Lfoot_foot_L_foot_def;
  KrakenJoint deformers_Lfoot_foot_L_ball_def;
  KrakenComponentGroup controls_Rfoot_foot_R_foot_cmp;
  KrakenHierarchyGroup controls_Rfoot_foot_R_inputs_hrc;
  KrakenBoolAttribute controls_foot_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_foot_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_foot_R_inputs_inputs_rightSide;
  KrakenTransform controls_Rfoot_foot_R_globalSRT_cmpInIn;
  KrakenTransform controls_Rfoot_foot_R_parentSpace_cmpInIn;
  KrakenHierarchyGroup controls_Rfoot_foot_R_outputs_hrc;
  KrakenBoolAttribute controls_foot_R_outputs_outputs_drawDebug;
  KrakenScalarAttribute controls_foot_R_outputs_outputs_ikBlend;
  KrakenScalarAttribute controls_foot_R_outputs_outputs_limbMocap;
  KrakenScalarAttribute controls_foot_R_outputs_outputs_softDist;
  KrakenScalarAttribute controls_foot_R_outputs_outputs_stretch;
  KrakenTransform controls_Rfoot_foot_R_foot_cmpOutOut;
  KrakenTransform controls_Rfoot_foot_R_ball_cmpOutOut;
  KrakenTransform controls_Rfoot_foot_R_ikgoal_cmpOutOut;
  KrakenTransform controls_Rfoot_R_footRockerFoot_out_xfo;
  KrakenTransform controls_Rfoot_R_footRockerBall_out_xfo;
  KrakenTransform controls_Rfoot_R_IKFootBlendKLOpFoot_out_xfo;
  KrakenTransform controls_Rfoot_R_IKFootBlendKLOpBall_out_xfo;
  KrakenCtrlSpace controls_Rfoot_foot_R_foot01_spaceSpace;
  KrakenCurve controls_Rfoot_R_foot_ik;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch;
  KrakenBoolAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_drawDebug;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap;
  KrakenTransform controls_Rfoot_R_ikGoalRef_xfo;
  KrakenTransform controls_Rfoot_R_ballJoint_xfo;
  KrakenTransform controls_Rfoot_R_footJoint_xfo;
  KrakenTransform controls_Rfoot_R_heelPivot_xfo;
  KrakenTransform controls_Rfoot_R_ballPivot_xfo;
  KrakenTransform controls_Rfoot_R_ballTipPivot_xfo;
  KrakenTransform controls_Rfoot_R_innerPivot_xfo;
  KrakenTransform controls_Rfoot_R_outerPivot_xfo;
  KrakenCtrlSpace controls_Rfoot_foot_R_foot02_spaceSpace;
  KrakenCurve controls_Rfoot_R_foot_fk;
  KrakenCtrlSpace controls_Rfoot_foot_R_ball01_spaceSpace;
  KrakenCurve controls_Rfoot_R_ball_fk;
  KrakenComponentGroup deformers_Rfoot_foot_R_foot_cmp;
  KrakenJoint deformers_Rfoot_foot_R_foot_def;
  KrakenJoint deformers_Rfoot_foot_R_ball_def;
  KrakenComponentGroup controls_Rleg_leg_R_leg_cmp;
  KrakenHierarchyGroup controls_Rleg_leg_R_inputs_hrc;
  KrakenBoolAttribute controls_leg_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_leg_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_leg_R_inputs_inputs_rightSide;
  KrakenScalarAttribute controls_leg_R_inputs_inputs_ikBlend;
  KrakenScalarAttribute controls_leg_R_inputs_inputs_softDist;
  KrakenScalarAttribute controls_leg_R_inputs_inputs_stretch;
  KrakenTransform controls_Rleg_leg_R_globalSRT_cmpInIn;
  KrakenTransform controls_Rleg_leg_R_parentSpace_cmpInIn;
  KrakenTransform controls_Rleg_leg_R_ikGoalInput_cmpInIn;
  KrakenHierarchyGroup controls_Rleg_leg_R_outputs_hrc;
  KrakenBoolAttribute controls_leg_R_outputs_outputs_drawDebug;
  KrakenTransform controls_Rleg_leg_R_uplimb_cmpOutOut;
  KrakenTransform controls_Rleg_leg_R_lolimb_cmpOutOut;
  KrakenTransform controls_Rleg_leg_R_endlimb_cmpOutOut;
  KrakenCtrlSpace controls_Rleg_leg_R_upLeg01_spaceSpace;
  KrakenCurve controls_Rleg_R_upLeg_fk;
  KrakenCtrlSpace controls_Rleg_leg_R_loLeg01_spaceSpace;
  KrakenCurve controls_Rleg_R_loLeg_fk;
  KrakenCtrlSpace controls_Rleg_leg_R_footIK_spaceSpace;
  KrakenTransform controls_Rleg_R_footIK_xfo;
  KrakenScalarAttribute controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len;
  KrakenScalarAttribute controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len;
  KrakenBoolAttribute controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_drawDebug;
  KrakenCtrlSpace controls_Rleg_leg_R_legUpV01_spaceSpace;
  KrakenCurve controls_Rleg_R_legUpV_an;
  KrakenScalarAttribute controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace;
  KrakenCtrlSpace controls_Rleg_leg_R_legUpVIK_spaceSpace;
  KrakenCtrlSpace controls_Rleg_leg_R_legIKMaster_spaceSpace;
  KrakenComponentGroup deformers_Rleg_leg_R_leg_cmp;
  KrakenJoint deformers_Rleg_leg_R_upLeg_def;
  KrakenJoint deformers_Rleg_leg_R_loLeg_def;
  KrakenJoint deformers_Rleg_leg_R_legend_def;
  KrakenComponentGroup controls_Rarm_arm_R_arm_cmp;
  KrakenHierarchyGroup controls_Rarm_arm_R_inputs_hrc;
  KrakenBoolAttribute controls_arm_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_arm_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_arm_R_inputs_inputs_rightSide;
  KrakenScalarAttribute controls_arm_R_inputs_inputs_ikBlend;
  KrakenScalarAttribute controls_arm_R_inputs_inputs_softDist;
  KrakenScalarAttribute controls_arm_R_inputs_inputs_stretch;
  KrakenTransform controls_Rarm_arm_R_globalSRT_cmpInIn;
  KrakenTransform controls_Rarm_arm_R_parentSpace_cmpInIn;
  KrakenTransform controls_Rarm_arm_R_ikGoalInput_cmpInIn;
  KrakenHierarchyGroup controls_Rarm_arm_R_outputs_hrc;
  KrakenBoolAttribute controls_arm_R_outputs_outputs_drawDebug;
  KrakenTransform controls_Rarm_arm_R_uplimb_cmpOutOut;
  KrakenTransform controls_Rarm_arm_R_lolimb_cmpOutOut;
  KrakenTransform controls_Rarm_arm_R_endlimb_cmpOutOut;
  KrakenCtrlSpace controls_Rarm_arm_R_upArm01_spaceSpace;
  KrakenCurve controls_Rarm_R_upArm_fk;
  KrakenCtrlSpace controls_Rarm_arm_R_loArm01_spaceSpace;
  KrakenCurve controls_Rarm_R_loArm_fk;
  KrakenCtrlSpace controls_Rarm_arm_R_handIK_spaceSpace;
  KrakenTransform controls_Rarm_R_handIK_xfo;
  KrakenScalarAttribute controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len;
  KrakenScalarAttribute controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len;
  KrakenBoolAttribute controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_drawDebug;
  KrakenCtrlSpace controls_Rarm_arm_R_armUpV01_spaceSpace;
  KrakenCurve controls_Rarm_R_armUpV_an;
  KrakenScalarAttribute controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace;
  KrakenCtrlSpace controls_Rarm_arm_R_armUpVIK_spaceSpace;
  KrakenCtrlSpace controls_Rarm_arm_R_armIKMaster_spaceSpace;
  KrakenComponentGroup deformers_Rarm_arm_R_arm_cmp;
  KrakenJoint deformers_Rarm_arm_R_upArm_def;
  KrakenJoint deformers_Rarm_arm_R_loArm_def;
  KrakenJoint deformers_Rarm_arm_R_armend_def;
  KrakenComponentGroup controls_Larm_arm_L_arm_cmp;
  KrakenHierarchyGroup controls_Larm_arm_L_inputs_hrc;
  KrakenBoolAttribute controls_arm_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_arm_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_arm_L_inputs_inputs_rightSide;
  KrakenScalarAttribute controls_arm_L_inputs_inputs_ikBlend;
  KrakenScalarAttribute controls_arm_L_inputs_inputs_softDist;
  KrakenScalarAttribute controls_arm_L_inputs_inputs_stretch;
  KrakenTransform controls_Larm_arm_L_globalSRT_cmpInIn;
  KrakenTransform controls_Larm_arm_L_parentSpace_cmpInIn;
  KrakenTransform controls_Larm_arm_L_ikGoalInput_cmpInIn;
  KrakenHierarchyGroup controls_Larm_arm_L_outputs_hrc;
  KrakenBoolAttribute controls_arm_L_outputs_outputs_drawDebug;
  KrakenTransform controls_Larm_arm_L_uplimb_cmpOutOut;
  KrakenTransform controls_Larm_arm_L_lolimb_cmpOutOut;
  KrakenTransform controls_Larm_arm_L_endlimb_cmpOutOut;
  KrakenCtrlSpace controls_Larm_arm_L_upArm01_spaceSpace;
  KrakenCurve controls_Larm_L_upArm_fk;
  KrakenCtrlSpace controls_Larm_arm_L_loArm01_spaceSpace;
  KrakenCurve controls_Larm_L_loArm_fk;
  KrakenCtrlSpace controls_Larm_arm_L_handIK_spaceSpace;
  KrakenTransform controls_Larm_L_handIK_xfo;
  KrakenScalarAttribute controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len;
  KrakenScalarAttribute controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len;
  KrakenBoolAttribute controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_drawDebug;
  KrakenCtrlSpace controls_Larm_arm_L_armUpV01_spaceSpace;
  KrakenCurve controls_Larm_L_armUpV_an;
  KrakenScalarAttribute controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace;
  KrakenCtrlSpace controls_Larm_arm_L_armUpVIK_spaceSpace;
  KrakenCtrlSpace controls_Larm_arm_L_armIKMaster_spaceSpace;
  KrakenComponentGroup deformers_Larm_arm_L_arm_cmp;
  KrakenJoint deformers_Larm_arm_L_upArm_def;
  KrakenJoint deformers_Larm_arm_L_loArm_def;
  KrakenJoint deformers_Larm_arm_L_armend_def;
  KrakenComponentGroup controls_Lhand_hand_L_hand_cmp;
  KrakenHierarchyGroup controls_Lhand_hand_L_inputs_hrc;
  KrakenBoolAttribute controls_hand_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_hand_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_hand_L_inputs_inputs_rightSide;
  KrakenTransform controls_Lhand_hand_L_globalSRT_cmpInIn;
  KrakenTransform controls_Lhand_hand_L_parentSpace_cmpInIn;
  KrakenHierarchyGroup controls_Lhand_hand_L_outputs_hrc;
  KrakenBoolAttribute controls_hand_L_outputs_outputs_drawDebug;
  KrakenScalarAttribute controls_hand_L_outputs_outputs_ikBlend;
  KrakenScalarAttribute controls_hand_L_outputs_outputs_limbMocap;
  KrakenScalarAttribute controls_hand_L_outputs_outputs_softDist;
  KrakenScalarAttribute controls_hand_L_outputs_outputs_stretch;
  KrakenTransform controls_Lhand_hand_L_hand_cmpOutOut;
  KrakenTransform controls_Lhand_hand_L_palm_cmpOutOut;
  KrakenCtrlSpace controls_Lhand_hand_L_index_palm01_spaceSpace;
  KrakenCurve controls_Lhand_L_index_palm_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_index_base01_spaceSpace;
  KrakenCurve controls_Lhand_L_index_base_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_index_mid01_spaceSpace;
  KrakenCurve controls_Lhand_L_index_mid_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_index_tip01_spaceSpace;
  KrakenCurve controls_Lhand_L_index_tip_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_middle_palm01_spaceSpace;
  KrakenCurve controls_Lhand_L_middle_palm_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_middle_base01_spaceSpace;
  KrakenCurve controls_Lhand_L_middle_base_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_middle_mid01_spaceSpace;
  KrakenCurve controls_Lhand_L_middle_mid_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_middle_tip01_spaceSpace;
  KrakenCurve controls_Lhand_L_middle_tip_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_ring_palm01_spaceSpace;
  KrakenCurve controls_Lhand_L_ring_palm_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_ring_base01_spaceSpace;
  KrakenCurve controls_Lhand_L_ring_base_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_ring_mid01_spaceSpace;
  KrakenCurve controls_Lhand_L_ring_mid_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_ring_tip01_spaceSpace;
  KrakenCurve controls_Lhand_L_ring_tip_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_pinky_palm01_spaceSpace;
  KrakenCurve controls_Lhand_L_pinky_palm_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_pinky_base01_spaceSpace;
  KrakenCurve controls_Lhand_L_pinky_base_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_pinky_mid01_spaceSpace;
  KrakenCurve controls_Lhand_L_pinky_mid_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_pinky_tip01_spaceSpace;
  KrakenCurve controls_Lhand_L_pinky_tip_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_thumb_palm01_spaceSpace;
  KrakenCurve controls_Lhand_L_thumb_palm_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_thumb_base01_spaceSpace;
  KrakenCurve controls_Lhand_L_thumb_base_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_thumb_tip01_spaceSpace;
  KrakenCurve controls_Lhand_L_thumb_tip_fk;
  KrakenTransform controls_Lhand_hand_L_ikgoal_cmpOutOut;
  KrakenTransform controls_Lhand_L_IKHandBlendKLOpHand_out_xfo;
  KrakenTransform controls_Lhand_L_IKHandBlendKLOpPalm_out_xfo;
  KrakenCtrlSpace controls_Lhand_hand_L_hand01_spaceSpace;
  KrakenCurve controls_Lhand_L_hand_ik;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch;
  KrakenBoolAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_drawDebug;
  KrakenCtrlSpace controls_Lhand_hand_L_handIK_spaceSpace;
  KrakenCtrlSpace controls_Lhand_hand_L_palmIK_spaceSpace;
  KrakenTransform controls_Lhand_L_ikGoalRef_xfo;
  KrakenCtrlSpace controls_Lhand_hand_L_hand02_spaceSpace;
  KrakenCurve controls_Lhand_L_hand_fk;
  KrakenCtrlSpace controls_Lhand_hand_L_palm01_spaceSpace;
  KrakenCurve controls_Lhand_L_palm_fk;
  KrakenTransform controls_Lhand_L_ikHand_xfo;
  KrakenTransform controls_Lhand_L_ikPalm_xfo;
  KrakenComponentGroup deformers_Lhand_hand_L_hand_cmp;
  KrakenJoint deformers_Lhand_hand_L_hand_def;
  KrakenJoint deformers_Lhand_hand_L_palm_def;
  KrakenJoint deformers_Lhand_hand_L_index_palm_def;
  KrakenJoint deformers_Lhand_hand_L_index_base_def;
  KrakenJoint deformers_Lhand_hand_L_index_mid_def;
  KrakenJoint deformers_Lhand_hand_L_index_tip_def;
  KrakenJoint deformers_Lhand_hand_L_middle_palm_def;
  KrakenJoint deformers_Lhand_hand_L_middle_base_def;
  KrakenJoint deformers_Lhand_hand_L_middle_mid_def;
  KrakenJoint deformers_Lhand_hand_L_middle_tip_def;
  KrakenJoint deformers_Lhand_hand_L_ring_palm_def;
  KrakenJoint deformers_Lhand_hand_L_ring_base_def;
  KrakenJoint deformers_Lhand_hand_L_ring_mid_def;
  KrakenJoint deformers_Lhand_hand_L_ring_tip_def;
  KrakenJoint deformers_Lhand_hand_L_pinky_palm_def;
  KrakenJoint deformers_Lhand_hand_L_pinky_base_def;
  KrakenJoint deformers_Lhand_hand_L_pinky_mid_def;
  KrakenJoint deformers_Lhand_hand_L_pinky_tip_def;
  KrakenJoint deformers_Lhand_hand_L_thumb_palm_def;
  KrakenJoint deformers_Lhand_hand_L_thumb_base_def;
  KrakenJoint deformers_Lhand_hand_L_thumb_tip_def;
  KrakenComponentGroup controls_Rhand_hand_R_hand_cmp;
  KrakenHierarchyGroup controls_Rhand_hand_R_inputs_hrc;
  KrakenBoolAttribute controls_hand_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_hand_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_hand_R_inputs_inputs_rightSide;
  KrakenTransform controls_Rhand_hand_R_globalSRT_cmpInIn;
  KrakenTransform controls_Rhand_hand_R_parentSpace_cmpInIn;
  KrakenHierarchyGroup controls_Rhand_hand_R_outputs_hrc;
  KrakenBoolAttribute controls_hand_R_outputs_outputs_drawDebug;
  KrakenScalarAttribute controls_hand_R_outputs_outputs_ikBlend;
  KrakenScalarAttribute controls_hand_R_outputs_outputs_limbMocap;
  KrakenScalarAttribute controls_hand_R_outputs_outputs_softDist;
  KrakenScalarAttribute controls_hand_R_outputs_outputs_stretch;
  KrakenTransform controls_Rhand_hand_R_hand_cmpOutOut;
  KrakenTransform controls_Rhand_hand_R_palm_cmpOutOut;
  KrakenCtrlSpace controls_Rhand_hand_R_index_palm01_spaceSpace;
  KrakenCurve controls_Rhand_R_index_palm_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_index_base01_spaceSpace;
  KrakenCurve controls_Rhand_R_index_base_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_index_mid01_spaceSpace;
  KrakenCurve controls_Rhand_R_index_mid_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_index_tip01_spaceSpace;
  KrakenCurve controls_Rhand_R_index_tip_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_middle_palm01_spaceSpace;
  KrakenCurve controls_Rhand_R_middle_palm_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_middle_base01_spaceSpace;
  KrakenCurve controls_Rhand_R_middle_base_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_middle_mid01_spaceSpace;
  KrakenCurve controls_Rhand_R_middle_mid_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_middle_tip01_spaceSpace;
  KrakenCurve controls_Rhand_R_middle_tip_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_ring_palm01_spaceSpace;
  KrakenCurve controls_Rhand_R_ring_palm_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_ring_base01_spaceSpace;
  KrakenCurve controls_Rhand_R_ring_base_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_ring_mid01_spaceSpace;
  KrakenCurve controls_Rhand_R_ring_mid_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_ring_tip01_spaceSpace;
  KrakenCurve controls_Rhand_R_ring_tip_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_pinky_palm01_spaceSpace;
  KrakenCurve controls_Rhand_R_pinky_palm_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_pinky_base01_spaceSpace;
  KrakenCurve controls_Rhand_R_pinky_base_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_pinky_mid01_spaceSpace;
  KrakenCurve controls_Rhand_R_pinky_mid_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_pinky_tip01_spaceSpace;
  KrakenCurve controls_Rhand_R_pinky_tip_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_thumb_palm01_spaceSpace;
  KrakenCurve controls_Rhand_R_thumb_palm_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_thumb_base01_spaceSpace;
  KrakenCurve controls_Rhand_R_thumb_base_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_thumb_tip01_spaceSpace;
  KrakenCurve controls_Rhand_R_thumb_tip_fk;
  KrakenTransform controls_Rhand_hand_R_ikgoal_cmpOutOut;
  KrakenTransform controls_Rhand_R_IKHandBlendKLOpHand_out_xfo;
  KrakenTransform controls_Rhand_R_IKHandBlendKLOpPalm_out_xfo;
  KrakenCtrlSpace controls_Rhand_hand_R_hand01_spaceSpace;
  KrakenCurve controls_Rhand_R_hand_ik;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch;
  KrakenBoolAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_drawDebug;
  KrakenCtrlSpace controls_Rhand_hand_R_handIK_spaceSpace;
  KrakenCtrlSpace controls_Rhand_hand_R_palmIK_spaceSpace;
  KrakenTransform controls_Rhand_R_ikGoalRef_xfo;
  KrakenCtrlSpace controls_Rhand_hand_R_hand02_spaceSpace;
  KrakenCurve controls_Rhand_R_hand_fk;
  KrakenCtrlSpace controls_Rhand_hand_R_palm01_spaceSpace;
  KrakenCurve controls_Rhand_R_palm_fk;
  KrakenTransform controls_Rhand_R_ikHand_xfo;
  KrakenTransform controls_Rhand_R_ikPalm_xfo;
  KrakenComponentGroup deformers_Rhand_hand_R_hand_cmp;
  KrakenJoint deformers_Rhand_hand_R_hand_def;
  KrakenJoint deformers_Rhand_hand_R_palm_def;
  KrakenJoint deformers_Rhand_hand_R_index_palm_def;
  KrakenJoint deformers_Rhand_hand_R_index_base_def;
  KrakenJoint deformers_Rhand_hand_R_index_mid_def;
  KrakenJoint deformers_Rhand_hand_R_index_tip_def;
  KrakenJoint deformers_Rhand_hand_R_middle_palm_def;
  KrakenJoint deformers_Rhand_hand_R_middle_base_def;
  KrakenJoint deformers_Rhand_hand_R_middle_mid_def;
  KrakenJoint deformers_Rhand_hand_R_middle_tip_def;
  KrakenJoint deformers_Rhand_hand_R_ring_palm_def;
  KrakenJoint deformers_Rhand_hand_R_ring_base_def;
  KrakenJoint deformers_Rhand_hand_R_ring_mid_def;
  KrakenJoint deformers_Rhand_hand_R_ring_tip_def;
  KrakenJoint deformers_Rhand_hand_R_pinky_palm_def;
  KrakenJoint deformers_Rhand_hand_R_pinky_base_def;
  KrakenJoint deformers_Rhand_hand_R_pinky_mid_def;
  KrakenJoint deformers_Rhand_hand_R_pinky_tip_def;
  KrakenJoint deformers_Rhand_hand_R_thumb_palm_def;
  KrakenJoint deformers_Rhand_hand_R_thumb_base_def;
  KrakenJoint deformers_Rhand_hand_R_thumb_tip_def;
  KrakenComponentGroup controls_MheadNeck_headNeck_M_headNeck_cmp;
  KrakenHierarchyGroup controls_MheadNeck_headNeck_M_inputs_hrc;
  KrakenBoolAttribute controls_headNeck_M_inputs_inputs_buildWithCanvasOps;
  KrakenBoolAttribute controls_headNeck_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_headNeck_M_inputs_inputs_rigScale;
  KrakenTransform controls_MheadNeck_headNeck_M_globalSRT_cmpInIn;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_head_spaceSpace;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_headIK_spaceSpace;
  KrakenCurve controls_MheadNeck_M_head_ik;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_headUpV_spaceSpace;
  KrakenCurve controls_MheadNeck_M_headUpV_an;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_headWorld01_spaceSpace;
  KrakenCurve controls_MheadNeck_M_headWorld_ik;
  KrakenTransform controls_MheadNeck_headNeck_M_parentSpace_cmpInIn;
  KrakenHierarchyGroup controls_MheadNeck_headNeck_M_outputs_hrc;
  KrakenTransform controls_MheadNeck_headNeck_M_neckBase_cmpOutOut;
  KrakenTransform controls_MheadNeck_headNeck_M_neckEnd_cmpOutOut;
  KrakenTransform controls_MheadNeck_headNeck_M_neck01_cmpOutOut;
  KrakenTransform controls_MheadNeck_headNeck_M_neck02_cmpOutOut;
  KrakenTransform controls_MheadNeck_headNeck_M_neck03_cmpOutOut;
  KrakenTransform controls_MheadNeck_headNeck_M_neck04_cmpOutOut;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_neck01_spaceSpace;
  KrakenCurve controls_MheadNeck_M_neck_fk;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_head01_spaceSpace;
  KrakenCurve controls_MheadNeck_M_head_fk;
  KrakenScalarAttribute controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK;
  KrakenScalarAttribute controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK;
  KrakenScalarAttribute controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_headAlign_spaceSpace;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_headHandle_spaceSpace;
  KrakenCtrlSpace controls_MheadNeck_headNeck_M_neckHandle_spaceSpace;
  KrakenComponentGroup deformers_MheadNeck_headNeck_M_headNeck_cmp;
  KrakenJoint deformers_MheadNeck_headNeck_M_neck01_def;
  KrakenJoint deformers_MheadNeck_headNeck_M_neck02_def;
  KrakenJoint deformers_MheadNeck_headNeck_M_neck03_def;
  KrakenJoint deformers_MheadNeck_headNeck_M_head_def;
  KrakenComponentGroup controls_LpalmSocket_palmSocket_L_palmSocket_cmp;
  KrakenHierarchyGroup controls_LpalmSocket_palmSocket_L_inputs_hrc;
  KrakenBoolAttribute controls_palmSocket_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_palmSocket_L_inputs_inputs_rigScale;
  KrakenTransform controls_LpalmSocket_palmSocket_L_parentSpace_cmpInIn;
  KrakenTransform controls_LpalmSocket_palmSocket_L_globalSRT_cmpInIn;
  KrakenHierarchyGroup controls_LpalmSocket_palmSocket_L_outputs_hrc;
  KrakenTransform controls_LpalmSocket_palmSocket_L_socket_cmpOutOut;
  KrakenCtrlSpace controls_LpalmSocket_palmSocket_L_palmSocket_offset01_spaceSpace;
  KrakenCurve controls_LpalmSocket_L_palmSocket_offset_an;
  KrakenCurve controls_LpalmSocket_L_palmSocket_an;
  KrakenComponentGroup deformers_LpalmSocket_palmSocket_L_palmSocket_cmp;
  KrakenJoint deformers_LpalmSocket_palmSocket_L_palmSocket_def;
  KrakenComponentGroup controls_RpalmSocket_palmSocket_R_palmSocket_cmp;
  KrakenHierarchyGroup controls_RpalmSocket_palmSocket_R_inputs_hrc;
  KrakenBoolAttribute controls_palmSocket_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_palmSocket_R_inputs_inputs_rigScale;
  KrakenTransform controls_RpalmSocket_palmSocket_R_parentSpace_cmpInIn;
  KrakenTransform controls_RpalmSocket_palmSocket_R_globalSRT_cmpInIn;
  KrakenHierarchyGroup controls_RpalmSocket_palmSocket_R_outputs_hrc;
  KrakenTransform controls_RpalmSocket_palmSocket_R_socket_cmpOutOut;
  KrakenCtrlSpace controls_RpalmSocket_palmSocket_R_palmSocket_offset01_spaceSpace;
  KrakenCurve controls_RpalmSocket_R_palmSocket_offset_an;
  KrakenCurve controls_RpalmSocket_R_palmSocket_an;
  KrakenComponentGroup deformers_RpalmSocket_palmSocket_R_palmSocket_cmp;
  KrakenJoint deformers_RpalmSocket_palmSocket_R_palmSocket_def;
  KrakenComponentGroup controls_MheadSocket_headSocket_M_headSocket_cmp;
  KrakenHierarchyGroup controls_MheadSocket_headSocket_M_inputs_hrc;
  KrakenBoolAttribute controls_headSocket_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_headSocket_M_inputs_inputs_rigScale;
  KrakenTransform controls_MheadSocket_headSocket_M_parentSpace_cmpInIn;
  KrakenTransform controls_MheadSocket_headSocket_M_globalSRT_cmpInIn;
  KrakenHierarchyGroup controls_MheadSocket_headSocket_M_outputs_hrc;
  KrakenTransform controls_MheadSocket_headSocket_M_socket_cmpOutOut;
  KrakenCtrlSpace controls_MheadSocket_headSocket_M_headSocket_offset01_spaceSpace;
  KrakenCurve controls_MheadSocket_M_headSocket_offset_an;
  KrakenCurve controls_MheadSocket_M_headSocket_an;
  KrakenComponentGroup deformers_MheadSocket_headSocket_M_headSocket_cmp;
  KrakenJoint deformers_MheadSocket_headSocket_M_headSocket_def;
  KrakenComponentGroup controls_MsocketA_socketA_M_socketA_cmp;
  KrakenHierarchyGroup controls_MsocketA_socketA_M_inputs_hrc;
  KrakenBoolAttribute controls_socketA_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_socketA_M_inputs_inputs_rigScale;
  KrakenTransform controls_MsocketA_socketA_M_parentSpace_cmpInIn;
  KrakenTransform controls_MsocketA_socketA_M_globalSRT_cmpInIn;
  KrakenHierarchyGroup controls_MsocketA_socketA_M_outputs_hrc;
  KrakenTransform controls_MsocketA_socketA_M_socket_cmpOutOut;
  KrakenCtrlSpace controls_MsocketA_socketA_M_socketA_offset01_spaceSpace;
  KrakenCurve controls_MsocketA_M_socketA_offset_an;
  KrakenCurve controls_MsocketA_M_socketA_an;
  KrakenComponentGroup deformers_MsocketA_socketA_M_socketA_cmp;
  KrakenJoint deformers_MsocketA_socketA_M_socketA_def;
  KrakenComponentGroup controls_MsocketB_socketB_M_socketB_cmp;
  KrakenHierarchyGroup controls_MsocketB_socketB_M_inputs_hrc;
  KrakenBoolAttribute controls_socketB_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_socketB_M_inputs_inputs_rigScale;
  KrakenTransform controls_MsocketB_socketB_M_parentSpace_cmpInIn;
  KrakenTransform controls_MsocketB_socketB_M_globalSRT_cmpInIn;
  KrakenHierarchyGroup controls_MsocketB_socketB_M_outputs_hrc;
  KrakenTransform controls_MsocketB_socketB_M_socket_cmpOutOut;
  KrakenCtrlSpace controls_MsocketB_socketB_M_socketB_offset01_spaceSpace;
  KrakenCurve controls_MsocketB_M_socketB_offset_an;
  KrakenCurve controls_MsocketB_M_socketB_an;
  KrakenComponentGroup deformers_MsocketB_socketB_M_socketB_cmp;
  KrakenJoint deformers_MsocketB_socketB_M_socketB_def;
  KrakenComponentGroup controls_MsocketC_socketC_M_socketC_cmp;
  KrakenHierarchyGroup controls_MsocketC_socketC_M_inputs_hrc;
  KrakenBoolAttribute controls_socketC_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_socketC_M_inputs_inputs_rigScale;
  KrakenTransform controls_MsocketC_socketC_M_parentSpace_cmpInIn;
  KrakenTransform controls_MsocketC_socketC_M_globalSRT_cmpInIn;
  KrakenHierarchyGroup controls_MsocketC_socketC_M_outputs_hrc;
  KrakenTransform controls_MsocketC_socketC_M_socket_cmpOutOut;
  KrakenCtrlSpace controls_MsocketC_socketC_M_socketC_offset01_spaceSpace;
  KrakenCurve controls_MsocketC_M_socketC_offset_an;
  KrakenCurve controls_MsocketC_M_socketC_an;
  KrakenComponentGroup deformers_MsocketC_socketC_M_socketC_cmp;
  KrakenJoint deformers_MsocketC_socketC_M_socketC_def;
  KrakenComponentGroup controls_MchestSocket_chestSocket_M_chestSocket_cmp;
  KrakenHierarchyGroup controls_MchestSocket_chestSocket_M_inputs_hrc;
  KrakenBoolAttribute controls_chestSocket_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_chestSocket_M_inputs_inputs_rigScale;
  KrakenTransform controls_MchestSocket_chestSocket_M_parentSpace_cmpInIn;
  KrakenTransform controls_MchestSocket_chestSocket_M_globalSRT_cmpInIn;
  KrakenHierarchyGroup controls_MchestSocket_chestSocket_M_outputs_hrc;
  KrakenTransform controls_MchestSocket_chestSocket_M_socket_cmpOutOut;
  KrakenCtrlSpace controls_MchestSocket_chestSocket_M_chestSocket_offset01_spaceSpace;
  KrakenCurve controls_MchestSocket_M_chestSocket_offset_an;
  KrakenCurve controls_MchestSocket_M_chestSocket_an;
  KrakenComponentGroup deformers_MchestSocket_chestSocket_M_chestSocket_cmp;
  KrakenJoint deformers_MchestSocket_chestSocket_M_chestSocket_def;
  KrakenComponentGroup controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp;
  KrakenHierarchyGroup controls_MhipsSocket_hipsSocket_M_inputs_hrc;
  KrakenBoolAttribute controls_hipsSocket_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_hipsSocket_M_inputs_inputs_rigScale;
  KrakenTransform controls_MhipsSocket_hipsSocket_M_parentSpace_cmpInIn;
  KrakenTransform controls_MhipsSocket_hipsSocket_M_globalSRT_cmpInIn;
  KrakenHierarchyGroup controls_MhipsSocket_hipsSocket_M_outputs_hrc;
  KrakenTransform controls_MhipsSocket_hipsSocket_M_socket_cmpOutOut;
  KrakenCtrlSpace controls_MhipsSocket_hipsSocket_M_hipsSocket_offset01_spaceSpace;
  KrakenCurve controls_MhipsSocket_M_hipsSocket_offset_an;
  KrakenCurve controls_MhipsSocket_M_hipsSocket_an;
  KrakenComponentGroup deformers_MhipsSocket_hipsSocket_M_hipsSocket_cmp;
  KrakenJoint deformers_MhipsSocket_hipsSocket_M_hipsSocket_def;
  KrakenPoseConstraint controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint;
  KrakenPoseConstraint controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint;
  KrakenPoseConstraint controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint;
  KrakenPoseConstraint controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint;
  KrakenPoseConstraint controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint;
  RigScaleSolver main_M_rigScaleKLOp;
  KrakenPoseConstraint controls_main_M_outputs_master_master_To_master_PoseConstraint;
  KrakenPoseConstraint controls_main_M_outputs_offset_offset_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_main_M_outputs_cog_cog_To_cog_PoseConstraint;
  KrakenPoseConstraint controls_main_M_vis_vis_To_master_PoseConstraint;
  OSS_NURBSSpineKLSolver spine_M_NURBSSpineKLOp;
  MultiPoseConstraintSolver spine_M_spineMultiPoseConstraintKLOp;
  KrakenPoseConstraint controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint;
  PoseConstraintSolver shoulder_L_shldrDeformerKLOp;
  KrakenPoseConstraint controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint;
  PoseConstraintSolver shoulder_R_shldrDeformerKLOp;
  KrakenPoseConstraint controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint;
  OSS_HierBlendSolver leg_L_LlegUpVSpace_HierBlendSolver;
  OSS_TwoBoneIKSolver leg_L_LlegIKFKTwoBoneIKSolver;
  MultiPoseConstraintSolver leg_L_LlegDeformerJointsKLOp;
  KrakenPoseConstraint controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint;
  OSS_FootRockerSystem foot_L_MfootFootRockerKLOp;
  OSS_IKFootBlendSolver foot_L_MfootIKFootBlendKLOp;
  MultiPoseConstraintSolver foot_L_MfootDeformerJointsKLOp;
  KrakenPoseConstraint controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint;
  OSS_FootRockerSystem foot_R_MfootFootRockerKLOp;
  OSS_IKFootBlendSolver foot_R_MfootIKFootBlendKLOp;
  MultiPoseConstraintSolver foot_R_MfootDeformerJointsKLOp;
  KrakenPoseConstraint controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint;
  OSS_HierBlendSolver leg_R_RlegUpVSpace_HierBlendSolver;
  OSS_TwoBoneIKSolver leg_R_RlegIKFKTwoBoneIKSolver;
  MultiPoseConstraintSolver leg_R_RlegDeformerJointsKLOp;
  KrakenPoseConstraint controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint;
  OSS_HierBlendSolver arm_R_RarmUpVSpace_HierBlendSolver;
  OSS_TwoBoneIKSolver arm_R_RarmIKFKTwoBoneIKSolver;
  MultiPoseConstraintSolver arm_R_RarmDeformerJointsKLOp;
  KrakenPoseConstraint controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint;
  OSS_HierBlendSolver arm_L_LarmUpVSpace_HierBlendSolver;
  OSS_TwoBoneIKSolver arm_L_LarmIKFKTwoBoneIKSolver;
  MultiPoseConstraintSolver arm_L_LarmDeformerJointsKLOp;
  KrakenPoseConstraint controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint;
  OSS_IKFootBlendSolver hand_L_MhandIKHandBlendKLOp;
  MultiPoseConstraintSolver hand_L_LhandindexDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandmiddleDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandringDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandpinkyDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandthumbDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandDeformerJointsKLOp;
  KrakenPoseConstraint controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint;
  OSS_IKFootBlendSolver hand_R_MhandIKHandBlendKLOp;
  MultiPoseConstraintSolver hand_R_RhandindexDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandmiddleDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandringDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandpinkyDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandthumbDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandDeformerJointsKLOp;
  KrakenPoseConstraint controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint;
  OSS_NURBSSpineKLSolver headNeck_M_NURBSNeckKLOp;
  MultiPoseConstraintSolver headNeck_M_neckDeformerKLOp;
  KrakenPositionConstraint controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint;
  KrakenPositionConstraint controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint;
  KrakenPoseConstraint controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint;
  KrakenPoseConstraint controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint;
  KrakenPoseConstraint controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint;
  KrakenPoseConstraint controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint;
  KrakenPoseConstraint controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint;
  KrakenPoseConstraint controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint;
  KrakenPoseConstraint controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint;
  KrakenPoseConstraint controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint;
  KrakenPoseConstraint controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint;
  KrakenPoseConstraint controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint;
  KrakenPoseConstraint controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint;
  KrakenPoseConstraint controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint;
  KrakenPoseConstraint controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint;
  KrakenPoseConstraint controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint;
  KrakenPoseConstraint controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint;
};

function KRK_biped_guide() {
  Float32 floatAnimation[String];

  this.resetPose();

  // build constraints
  this.controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint.offset = Xfo();
  this.controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.offset = Xfo();
  this.controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.offset = Xfo();
  this.controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.offset = Xfo();
  this.controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.offset = Xfo();
  this.controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.offset = Xfo();
  this.controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.offset = Xfo();
  this.controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.offset = Xfo();
  this.controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.offset = Xfo();
  this.controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.offset = Xfo();
  this.controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.offset = Xfo();
  this.controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.offset = Xfo();
  this.controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.offset = Xfo();
  this.controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.offset = Xfo();
  this.controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.offset = Xfo();
  this.controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.offset = Xfo();
  this.controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.offset = Xfo();
  this.controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.offset = Xfo();
  this.controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.constrainers.resize(1);
  this.controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint.offset = Xfo();
  this.controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint.constrainers.resize(1);
  this.controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.offset = Xfo();
  this.controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.offset = Xfo();
  this.controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.offset = Xfo();
  this.controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.offset = Xfo();
  this.controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers.resize(1);
  this.controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint.offset = Xfo();
  this.controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint.constrainers.resize(1);
  this.controls_main_M_outputs_master_master_To_master_PoseConstraint.offset = Xfo();
  this.controls_main_M_outputs_master_master_To_master_PoseConstraint.constrainers.resize(1);
  this.controls_main_M_outputs_offset_offset_To_offset_PoseConstraint.offset = Xfo();
  this.controls_main_M_outputs_offset_offset_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_main_M_outputs_cog_cog_To_cog_PoseConstraint.offset = Xfo();
  this.controls_main_M_outputs_cog_cog_To_cog_PoseConstraint.constrainers.resize(1);
  this.controls_main_M_vis_vis_To_master_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 22.3214), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_vis_vis_To_master_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint.offset = Xfo();
  this.controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint.offset = Xfo();
  this.controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint.offset = Xfo();
  this.controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint.offset = Xfo();
  this.controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 7.7393, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 7.7393, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint.offset = Xfo();
  this.controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.offset = Xfo();
  this.controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-1.6134, -0.3563, 0.2526), Quat(0.5531, -0.4408, 0.5533, 0.4401), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint.offset = Xfo();
  this.controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.offset = Xfo();
  this.controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-1.6134, -0.3563, -0.2526), Quat(-0.4362, -0.5567, -0.4354, 0.5569), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(4.3470, 0.0000, 0.0000), Quat(0.0147, -0.0119, -0.7070, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(4.3733, 3.5091, -0.9774), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0259, 3.5091, 1.9246), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(-2.3566, 34.4546, 65.2655), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(1.9908, 34.4546, 62.3636), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.offset = Xfo();
  this.controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.offset = Xfo();
  this.controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0001, -0.0257, 0.0057), Quat(-0.0152, -0.6083, 0.0111, 0.7935), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.offset = Xfo();
  this.controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.offset = Xfo();
  this.controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0000, -0.0004, -0.0004), Quat(-0.0000, -0.6084, -0.0000, 0.7937), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-4.3470, 0.0000, 0.0000), Quat(0.7071, 0.7071, 0.0014, -0.0014), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-4.3470, 3.5091, -0.9726), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0004, 3.5091, 1.9293), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0004, 34.4645, 65.3101), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-4.3470, 34.4645, 62.4082), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(-0.0011, 0.0107, -0.0005, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(19.4926, 0.0000, -43.6960), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0073, 0.0107, -0.0004, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(-19.4926, 0.0000, -43.6960), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.offset = Xfo();
  this.controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.offset = Xfo();
  this.controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.offset = Xfo();
  this.controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0000, 0.0000, 0.0000), Quat(-0.7061, -0.0338, 0.0375, -0.7063), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.offset = Xfo();
  this.controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.offset = Xfo();
  this.controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.offset = Xfo();
  this.controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.7061, 0.0338, -0.0375, 0.7063), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint.offset = Xfo(Vec3(0.0000, -119.2143, -2.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint.constrainers.resize(1);
  this.controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint.constrainers.resize(1);
  this.controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint.offset = Xfo(Vec3(-96.7657, 38.1399, 0.0000), Quat(-0.5815, -0.4022, -0.5815, 0.4022), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint.offset = Xfo(Vec3(-117.1774, 22.0678, 0.0000), Quat(-0.5487, -0.4460, -0.5487, 0.4460), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(2.2768, 0.5331, 0.0000), Quat(-0.4364, -0.5564, -0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint.offset = Xfo();
  this.controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.1701, 0.2506, -2.0361), Quat(0.5009, 0.4991, -0.5009, 0.4991), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint.offset = Xfo();
  this.deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint.offset = Xfo();
  this.controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.1701, -0.2506, 2.0361), Quat(0.4991, -0.5009, 0.4991, 0.5009), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint.offset = Xfo();
  this.deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint.constrainers.resize(1);
  this.controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint.offset = Xfo();
  this.controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint.constrainers.resize(1);
  this.controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0000, 136.5005, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint.offset = Xfo();
  this.deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint.constrainers.resize(1);
  this.controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint.offset = Xfo();
  this.controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint.constrainers.resize(1);
  this.controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint.offset = Xfo();
  this.deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint.constrainers.resize(1);
  this.controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint.offset = Xfo();
  this.controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint.constrainers.resize(1);
  this.controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint.offset = Xfo();
  this.deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint.constrainers.resize(1);
  this.controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint.offset = Xfo();
  this.controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint.constrainers.resize(1);
  this.controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint.offset = Xfo();
  this.deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint.constrainers.resize(1);
  this.controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint.offset = Xfo();
  this.controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint.constrainers.resize(1);
  this.controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-6.8299, 3.6590, 0.0000), Quat(-0.4364, -0.5564, -0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint.offset = Xfo();
  this.deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint.constrainers.resize(1);
  this.controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint.offset = Xfo();
  this.controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint.constrainers.resize(1);
  this.controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0000, -1.7687, 3.6876), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint.offset = Xfo();
  this.deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint.constrainers.resize(1);

  // build kl solvers
  this.main_M_rigScaleKLOp = RigScaleSolver();
  this.spine_M_NURBSSpineKLOp = OSS_NURBSSpineKLSolver();
  this.spine_M_spineMultiPoseConstraintKLOp = MultiPoseConstraintSolver();
  this.shoulder_L_shldrDeformerKLOp = PoseConstraintSolver();
  this.shoulder_R_shldrDeformerKLOp = PoseConstraintSolver();
  this.leg_L_LlegUpVSpace_HierBlendSolver = OSS_HierBlendSolver();
  this.leg_L_LlegIKFKTwoBoneIKSolver = OSS_TwoBoneIKSolver();
  this.leg_L_LlegDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.foot_L_MfootFootRockerKLOp = OSS_FootRockerSystem();
  this.foot_L_MfootIKFootBlendKLOp = OSS_IKFootBlendSolver();
  this.foot_L_MfootDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.foot_R_MfootFootRockerKLOp = OSS_FootRockerSystem();
  this.foot_R_MfootIKFootBlendKLOp = OSS_IKFootBlendSolver();
  this.foot_R_MfootDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.leg_R_RlegUpVSpace_HierBlendSolver = OSS_HierBlendSolver();
  this.leg_R_RlegIKFKTwoBoneIKSolver = OSS_TwoBoneIKSolver();
  this.leg_R_RlegDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.arm_R_RarmUpVSpace_HierBlendSolver = OSS_HierBlendSolver();
  this.arm_R_RarmIKFKTwoBoneIKSolver = OSS_TwoBoneIKSolver();
  this.arm_R_RarmDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.arm_L_LarmUpVSpace_HierBlendSolver = OSS_HierBlendSolver();
  this.arm_L_LarmIKFKTwoBoneIKSolver = OSS_TwoBoneIKSolver();
  this.arm_L_LarmDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_MhandIKHandBlendKLOp = OSS_IKFootBlendSolver();
  this.hand_L_LhandindexDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandmiddleDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandringDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandpinkyDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandthumbDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_MhandIKHandBlendKLOp = OSS_IKFootBlendSolver();
  this.hand_R_RhandindexDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandmiddleDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandringDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandpinkyDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandthumbDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.headNeck_M_NURBSNeckKLOp = OSS_NURBSSpineKLSolver();
  this.headNeck_M_neckDeformerKLOp = MultiPoseConstraintSolver();

  // build kl canvas ops

  // build attributes
  this.controls_main_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_main_M_outputs_outputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale = KrakenScalarAttribute("", "", true, true, 0.1, 100.0, 1.000000, floatAnimation);
  this.controls_spine_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_spine_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_shoulder_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_shoulder_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_shoulder_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_shoulder_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_shoulder_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_shoulder_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_leg_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_inputs_inputs_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_leg_L_inputs_inputs_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_leg_L_inputs_inputs_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_leg_L_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len = KrakenScalarAttribute("", "", true, true, 0.0, 93.8725547791, 31.290852, floatAnimation);
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len = KrakenScalarAttribute("", "", true, true, 0.0, 97.6223373413, 32.540779, floatAnimation);
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.500000, floatAnimation);
  this.controls_foot_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_foot_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_L_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_L_outputs_outputs_ikBlend = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_foot_L_outputs_outputs_limbMocap = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_L_outputs_outputs_softDist = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_L_outputs_outputs_stretch = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker = KrakenScalarAttribute("", "", true, true, -180.0, 180.0, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak = KrakenScalarAttribute("", "", true, true, 0, 90.0, 45.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt = KrakenScalarAttribute("", "", true, true, -180, 180.0, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_foot_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_foot_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, true);
  this.controls_foot_R_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_R_outputs_outputs_ikBlend = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_foot_R_outputs_outputs_limbMocap = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_R_outputs_outputs_softDist = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_R_outputs_outputs_stretch = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker = KrakenScalarAttribute("", "", true, true, -180.0, 180.0, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak = KrakenScalarAttribute("", "", true, true, 0, 90.0, 45.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt = KrakenScalarAttribute("", "", true, true, -180, 180.0, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_leg_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_leg_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, true);
  this.controls_leg_R_inputs_inputs_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_leg_R_inputs_inputs_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_leg_R_inputs_inputs_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_leg_R_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len = KrakenScalarAttribute("", "", true, true, 0.0, 93.8725547791, 31.290852, floatAnimation);
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len = KrakenScalarAttribute("", "", true, true, 0.0, 97.6219482422, 32.540649, floatAnimation);
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.500000, floatAnimation);
  this.controls_arm_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_arm_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, true);
  this.controls_arm_R_inputs_inputs_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_arm_R_inputs_inputs_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_arm_R_inputs_inputs_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_arm_R_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len = KrakenScalarAttribute("", "", true, true, 0.0, 64.8865013123, 21.628834, floatAnimation);
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len = KrakenScalarAttribute("", "", true, true, 0.0, 61.3404922485, 20.446831, floatAnimation);
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.500000, floatAnimation);
  this.controls_arm_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_arm_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_L_inputs_inputs_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_arm_L_inputs_inputs_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_arm_L_inputs_inputs_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_arm_L_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len = KrakenScalarAttribute("", "", true, true, 0.0, 64.8865013123, 21.628834, floatAnimation);
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len = KrakenScalarAttribute("", "", true, true, 0.0, 61.3404922485, 20.446831, floatAnimation);
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.500000, floatAnimation);
  this.controls_hand_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hand_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_L_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_L_outputs_outputs_ikBlend = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hand_L_outputs_outputs_limbMocap = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_L_outputs_outputs_softDist = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_L_outputs_outputs_stretch = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hand_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, true);
  this.controls_hand_R_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_R_outputs_outputs_ikBlend = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hand_R_outputs_outputs_limbMocap = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_R_outputs_outputs_softDist = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_R_outputs_outputs_stretch = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_headNeck_M_inputs_inputs_buildWithCanvasOps = KrakenBoolAttribute("", "", true, true, false);
  this.controls_headNeck_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_headNeck_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_palmSocket_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_palmSocket_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_palmSocket_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_palmSocket_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_headSocket_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_headSocket_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_socketA_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_socketA_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_socketB_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_socketB_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_socketC_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_socketC_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_chestSocket_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_chestSocket_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hipsSocket_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hipsSocket_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);

}

function KRK_biped_guide.solve!() {
  UInt64 timerStart = getCurrentTicks();
  this.controls_main_M_outputs_outputs_rigScale.value = this.controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale.value;
  this.controls_spine_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_shoulder_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_shoulder_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_leg_L_inputs_inputs_drawDebug.value = this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_drawDebug.value;
  this.controls_leg_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_leg_L_inputs_inputs_ikBlend.value = this.controls_foot_L_outputs_outputs_ikBlend.value;
  this.controls_leg_L_inputs_inputs_softDist.value = this.controls_foot_L_outputs_outputs_softDist.value;
  this.controls_leg_L_inputs_inputs_stretch.value = this.controls_foot_L_outputs_outputs_stretch.value;
  this.controls_foot_L_inputs_inputs_drawDebug.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_drawDebug.value;
  this.controls_foot_L_outputs_outputs_ikBlend.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend.value;
  this.controls_foot_L_outputs_outputs_limbMocap.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap.value;
  this.controls_foot_L_outputs_outputs_softDist.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist.value;
  this.controls_foot_L_outputs_outputs_stretch.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch.value;
  this.controls_foot_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_foot_R_inputs_inputs_drawDebug.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_drawDebug.value;
  this.controls_foot_R_outputs_outputs_ikBlend.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend.value;
  this.controls_foot_R_outputs_outputs_limbMocap.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap.value;
  this.controls_foot_R_outputs_outputs_softDist.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist.value;
  this.controls_foot_R_outputs_outputs_stretch.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch.value;
  this.controls_foot_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_leg_R_inputs_inputs_drawDebug.value = this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_drawDebug.value;
  this.controls_leg_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_leg_R_inputs_inputs_ikBlend.value = this.controls_foot_R_outputs_outputs_ikBlend.value;
  this.controls_leg_R_inputs_inputs_softDist.value = this.controls_foot_R_outputs_outputs_softDist.value;
  this.controls_leg_R_inputs_inputs_stretch.value = this.controls_foot_R_outputs_outputs_stretch.value;
  this.controls_arm_R_inputs_inputs_drawDebug.value = this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_drawDebug.value;
  this.controls_arm_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_arm_R_inputs_inputs_ikBlend.value = this.controls_hand_R_outputs_outputs_ikBlend.value;
  this.controls_arm_R_inputs_inputs_softDist.value = this.controls_hand_R_outputs_outputs_softDist.value;
  this.controls_arm_R_inputs_inputs_stretch.value = this.controls_hand_R_outputs_outputs_stretch.value;
  this.controls_arm_L_inputs_inputs_drawDebug.value = this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_drawDebug.value;
  this.controls_arm_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_arm_L_inputs_inputs_ikBlend.value = this.controls_hand_L_outputs_outputs_ikBlend.value;
  this.controls_arm_L_inputs_inputs_softDist.value = this.controls_hand_L_outputs_outputs_softDist.value;
  this.controls_arm_L_inputs_inputs_stretch.value = this.controls_hand_L_outputs_outputs_stretch.value;
  this.controls_hand_L_inputs_inputs_drawDebug.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_drawDebug.value;
  this.controls_hand_L_outputs_outputs_ikBlend.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend.value;
  this.controls_hand_L_outputs_outputs_limbMocap.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap.value;
  this.controls_hand_L_outputs_outputs_softDist.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist.value;
  this.controls_hand_L_outputs_outputs_stretch.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch.value;
  this.controls_hand_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_hand_R_inputs_inputs_drawDebug.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_drawDebug.value;
  this.controls_hand_R_outputs_outputs_ikBlend.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend.value;
  this.controls_hand_R_outputs_outputs_limbMocap.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap.value;
  this.controls_hand_R_outputs_outputs_softDist.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist.value;
  this.controls_hand_R_outputs_outputs_stretch.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch.value;
  this.controls_hand_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_headNeck_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_palmSocket_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_palmSocket_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_headSocket_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_socketA_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_socketB_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_socketC_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;

  // solving global transform biped_guide
  this.biped_guide.globalXfo = this.biped_guide.xfo;

  // solving parent child constraint bipedguide_biped_guide_controls
  this.bipedguide_biped_guide_controls.globalXfo = this.biped_guide.globalXfo * this.bipedguide_biped_guide_controls.xfo;

  // solving parent child constraint bipedguide_biped_guide_deformers
  this.bipedguide_biped_guide_deformers.globalXfo = this.biped_guide.globalXfo * this.bipedguide_biped_guide_deformers.xfo;

  // solving parent child constraint controls_Mmain_main_M_main_cmp
  this.controls_Mmain_main_M_main_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Mmain_main_M_main_cmp.xfo;

  // solving parent child constraint controls_Mmain_main_M_inputs_hrc
  this.controls_Mmain_main_M_inputs_hrc.globalXfo = this.controls_Mmain_main_M_main_cmp.globalXfo * this.controls_Mmain_main_M_inputs_hrc.xfo;

  // solving parent child constraint controls_Mmain_main_M_outputs_hrc
  this.controls_Mmain_main_M_outputs_hrc.globalXfo = this.controls_Mmain_main_M_main_cmp.globalXfo * this.controls_Mmain_main_M_outputs_hrc.xfo;

  // solving KLSolver main_M_rigScaleKLOp
  Boolean main_M_rigScaleKLOp_drawDebug = this.controls_main_M_inputs_inputs_drawDebug.value;
  Scalar main_M_rigScaleKLOp_rigScale = this.controls_main_M_outputs_outputs_rigScale.value;
  Mat44 main_M_rigScaleKLOp_target;
  this.main_M_rigScaleKLOp.solve(
    main_M_rigScaleKLOp_drawDebug,
    main_M_rigScaleKLOp_rigScale,
    main_M_rigScaleKLOp_target
  );

  // retrieving value for controls_Mmain_main_M_master01_spaceSpace from solver main_M_rigScaleKLOp
  this.controls_Mmain_main_M_master01_spaceSpace.globalXfo = main_M_rigScaleKLOp_target;

  // solving parent child constraint controls_Mmain_M_master_fk
  this.controls_Mmain_M_master_fk.globalXfo = this.controls_Mmain_main_M_master01_spaceSpace.globalXfo * this.controls_Mmain_M_master_fk.xfo;

  // solving PoseConstraint constraint controls_main_M_outputs_master_master_To_master_PoseConstraint
  this.controls_main_M_outputs_master_master_To_master_PoseConstraint.constrainers[0] = this.controls_Mmain_M_master_fk.globalXfo;
  this.controls_Mmain_main_M_master_cmpOutOut.globalXfo = this.controls_main_M_outputs_master_master_To_master_PoseConstraint.compute(this.controls_Mmain_main_M_master_cmpOutOut.globalXfo);

  // solving parent child constraint controls_Mmain_main_M_offset01_spaceSpace
  this.controls_Mmain_main_M_offset01_spaceSpace.globalXfo = this.controls_Mmain_M_master_fk.globalXfo * this.controls_Mmain_main_M_offset01_spaceSpace.xfo;

  // solving parent child constraint controls_Mmain_M_offset_fk
  this.controls_Mmain_M_offset_fk.globalXfo = this.controls_Mmain_main_M_offset01_spaceSpace.globalXfo * this.controls_Mmain_M_offset_fk.xfo;

  // solving PoseConstraint constraint controls_main_M_outputs_offset_offset_To_offset_PoseConstraint
  this.controls_main_M_outputs_offset_offset_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_M_offset_fk.globalXfo;
  this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo = this.controls_main_M_outputs_offset_offset_To_offset_PoseConstraint.compute(this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo);

  // solving parent child constraint controls_Mmain_main_M_cog01_spaceSpace
  this.controls_Mmain_main_M_cog01_spaceSpace.globalXfo = this.controls_Mmain_M_offset_fk.globalXfo * this.controls_Mmain_main_M_cog01_spaceSpace.xfo;

  // solving parent child constraint controls_Mmain_M_cog_fk
  this.controls_Mmain_M_cog_fk.globalXfo = this.controls_Mmain_main_M_cog01_spaceSpace.globalXfo * this.controls_Mmain_M_cog_fk.xfo;

  // solving PoseConstraint constraint controls_main_M_outputs_cog_cog_To_cog_PoseConstraint
  this.controls_main_M_outputs_cog_cog_To_cog_PoseConstraint.constrainers[0] = this.controls_Mmain_M_cog_fk.globalXfo;
  this.controls_Mmain_main_M_cog_cmpOutOut.globalXfo = this.controls_main_M_outputs_cog_cog_To_cog_PoseConstraint.compute(this.controls_Mmain_main_M_cog_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_main_M_vis_vis_To_master_PoseConstraint
  this.controls_main_M_vis_vis_To_master_PoseConstraint.constrainers[0] = this.controls_Mmain_M_master_fk.globalXfo;
  this.controls_Mmain_M_vis_an.globalXfo = this.controls_main_M_vis_vis_To_master_PoseConstraint.compute(this.controls_Mmain_M_vis_an.globalXfo);

  // solving parent child constraint controls_Mspine_spine_M_spine_cmp
  this.controls_Mspine_spine_M_spine_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Mspine_spine_M_spine_cmp.xfo;

  // solving parent child constraint controls_Mspine_spine_M_inputs_hrc
  this.controls_Mspine_spine_M_inputs_hrc.globalXfo = this.controls_Mspine_spine_M_spine_cmp.globalXfo * this.controls_Mspine_spine_M_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint
  this.controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_cog_cmpOutOut.globalXfo;
  this.controls_Mspine_spine_M_parentSpace_cmpInIn.globalXfo = this.controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint.compute(this.controls_Mspine_spine_M_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_Mspine_spine_M_outputs_hrc
  this.controls_Mspine_spine_M_outputs_hrc.globalXfo = this.controls_Mspine_spine_M_spine_cmp.globalXfo * this.controls_Mspine_spine_M_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint
  this.controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_parentSpace_cmpInIn.globalXfo;
  this.controls_Mspine_spine_M_hips01_spaceSpace.globalXfo = this.controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint.compute(this.controls_Mspine_spine_M_hips01_spaceSpace.globalXfo);

  // solving parent child constraint controls_Mspine_M_hips_fk
  this.controls_Mspine_M_hips_fk.globalXfo = this.controls_Mspine_spine_M_hips01_spaceSpace.globalXfo * this.controls_Mspine_M_hips_fk.xfo;

  // solving PoseConstraint constraint controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint
  this.controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint.constrainers[0] = this.controls_Mspine_M_hips_fk.globalXfo;
  this.controls_Mspine_spine_M_hips_cmpOutOut.globalXfo = this.controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint.compute(this.controls_Mspine_spine_M_hips_cmpOutOut.globalXfo);

  // solving KLSolver spine_M_NURBSSpineKLOp
  Boolean spine_M_NURBSSpineKLOp_drawDebug = this.controls_spine_M_inputs_inputs_drawDebug.value;
  Scalar spine_M_NURBSSpineKLOp_rigScale = this.controls_spine_M_inputs_inputs_rigScale.value;
  UInt32 spine_M_NURBSSpineKLOp_numDeformers = 6;
  Scalar spine_M_NURBSSpineKLOp_compressionAmt = 0.4;
  Mat44 spine_M_NURBSSpineKLOp_controlsRest[](5);
  spine_M_NURBSSpineKLOp_controlsRest[0] = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  spine_M_NURBSSpineKLOp_controlsRest[1] = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  spine_M_NURBSSpineKLOp_controlsRest[2] = Xfo(Vec3(-0.0000, 84.3915, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  spine_M_NURBSSpineKLOp_controlsRest[3] = Xfo(Vec3(0.0000, 95.4441, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  spine_M_NURBSSpineKLOp_controlsRest[4] = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  Mat44 spine_M_NURBSSpineKLOp_controls[](5);

  // solving parent child constraint controls_Mspine_spine_M_pelvis_spaceSpace
  this.controls_Mspine_spine_M_pelvis_spaceSpace.globalXfo = this.controls_Mspine_M_hips_fk.globalXfo * this.controls_Mspine_spine_M_pelvis_spaceSpace.xfo;
  spine_M_NURBSSpineKLOp_controls[0] = this.controls_Mspine_spine_M_pelvis_spaceSpace.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint
  this.controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_parentSpace_cmpInIn.globalXfo;
  this.controls_Mspine_spine_M_torso01_spaceSpace.globalXfo = this.controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint.compute(this.controls_Mspine_spine_M_torso01_spaceSpace.globalXfo);

  // solving parent child constraint controls_Mspine_M_torso_fk
  this.controls_Mspine_M_torso_fk.globalXfo = this.controls_Mspine_spine_M_torso01_spaceSpace.globalXfo * this.controls_Mspine_M_torso_fk.xfo;
  spine_M_NURBSSpineKLOp_controls[1] = this.controls_Mspine_M_torso_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Mspine_spine_M_chest01_spaceSpace
  this.controls_Mspine_spine_M_chest01_spaceSpace.globalXfo = this.controls_Mspine_M_torso_fk.globalXfo * this.controls_Mspine_spine_M_chest01_spaceSpace.xfo;

  // solving parent child constraint controls_Mspine_M_chest_fk
  this.controls_Mspine_M_chest_fk.globalXfo = this.controls_Mspine_spine_M_chest01_spaceSpace.globalXfo * this.controls_Mspine_M_chest_fk.xfo;
  spine_M_NURBSSpineKLOp_controls[2] = this.controls_Mspine_M_chest_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Mspine_spine_M_upChest01_spaceSpace
  this.controls_Mspine_spine_M_upChest01_spaceSpace.globalXfo = this.controls_Mspine_M_chest_fk.globalXfo * this.controls_Mspine_spine_M_upChest01_spaceSpace.xfo;

  // solving parent child constraint controls_Mspine_M_upChest_fk
  this.controls_Mspine_M_upChest_fk.globalXfo = this.controls_Mspine_spine_M_upChest01_spaceSpace.globalXfo * this.controls_Mspine_M_upChest_fk.xfo;
  spine_M_NURBSSpineKLOp_controls[3] = this.controls_Mspine_M_upChest_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Mspine_spine_M_neck_spaceSpace
  this.controls_Mspine_spine_M_neck_spaceSpace.globalXfo = this.controls_Mspine_M_upChest_fk.globalXfo * this.controls_Mspine_spine_M_neck_spaceSpace.xfo;
  spine_M_NURBSSpineKLOp_controls[4] = this.controls_Mspine_spine_M_neck_spaceSpace.globalXfo.toMat44();
  Mat44 spine_M_NURBSSpineKLOp_outputs[](6);
  this.spine_M_NURBSSpineKLOp.solve(
    spine_M_NURBSSpineKLOp_drawDebug,
    spine_M_NURBSSpineKLOp_rigScale,
    spine_M_NURBSSpineKLOp_numDeformers,
    spine_M_NURBSSpineKLOp_compressionAmt,
    spine_M_NURBSSpineKLOp_controlsRest,
    spine_M_NURBSSpineKLOp_controls,
    spine_M_NURBSSpineKLOp_outputs
  );

  // retrieving value for controls_Mspine_spine_M_spine01_cmpOutOut from solver spine_M_NURBSSpineKLOp
  this.controls_Mspine_spine_M_spine01_cmpOutOut.globalXfo = spine_M_NURBSSpineKLOp_outputs[0];

  // retrieving value for controls_Mspine_spine_M_spine02_cmpOutOut from solver spine_M_NURBSSpineKLOp
  this.controls_Mspine_spine_M_spine02_cmpOutOut.globalXfo = spine_M_NURBSSpineKLOp_outputs[1];

  // retrieving value for controls_Mspine_spine_M_spine03_cmpOutOut from solver spine_M_NURBSSpineKLOp
  this.controls_Mspine_spine_M_spine03_cmpOutOut.globalXfo = spine_M_NURBSSpineKLOp_outputs[2];

  // retrieving value for controls_Mspine_spine_M_spine04_cmpOutOut from solver spine_M_NURBSSpineKLOp
  this.controls_Mspine_spine_M_spine04_cmpOutOut.globalXfo = spine_M_NURBSSpineKLOp_outputs[3];

  // retrieving value for controls_Mspine_spine_M_spine05_cmpOutOut from solver spine_M_NURBSSpineKLOp
  this.controls_Mspine_spine_M_spine05_cmpOutOut.globalXfo = spine_M_NURBSSpineKLOp_outputs[4];

  // retrieving value for controls_Mspine_spine_M_spine06_cmpOutOut from solver spine_M_NURBSSpineKLOp
  this.controls_Mspine_spine_M_spine06_cmpOutOut.globalXfo = spine_M_NURBSSpineKLOp_outputs[5];

  // solving PoseConstraint constraint controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint
  this.controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_spine01_cmpOutOut.globalXfo;
  this.controls_Mspine_spine_M_spineBase_cmpOutOut.globalXfo = this.controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint.compute(this.controls_Mspine_spine_M_spineBase_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint
  this.controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_pelvis_spaceSpace.globalXfo;
  this.controls_Mspine_spine_M_pelvis_cmpOutOut.globalXfo = this.controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint.compute(this.controls_Mspine_spine_M_pelvis_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint
  this.controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_spine06_cmpOutOut.globalXfo;
  this.controls_Mspine_spine_M_spineEnd_cmpOutOut.globalXfo = this.controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint.compute(this.controls_Mspine_spine_M_spineEnd_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_Mspine_spine_M_spine_cmp
  this.deformers_Mspine_spine_M_spine_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Mspine_spine_M_spine_cmp.xfo;

  // solving KLSolver spine_M_spineMultiPoseConstraintKLOp
  Boolean spine_M_spineMultiPoseConstraintKLOp_drawDebug = this.controls_spine_M_inputs_inputs_drawDebug.value;
  Scalar spine_M_spineMultiPoseConstraintKLOp_rigScale = this.controls_spine_M_inputs_inputs_rigScale.value;
  Mat44 spine_M_spineMultiPoseConstraintKLOp_constrainers[](6);
  spine_M_spineMultiPoseConstraintKLOp_constrainers[0] = this.controls_Mspine_spine_M_spine01_cmpOutOut.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[1] = this.controls_Mspine_spine_M_spine02_cmpOutOut.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[2] = this.controls_Mspine_spine_M_spine03_cmpOutOut.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[3] = this.controls_Mspine_spine_M_spine04_cmpOutOut.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[4] = this.controls_Mspine_spine_M_spine05_cmpOutOut.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[5] = this.controls_Mspine_spine_M_spine06_cmpOutOut.globalXfo.toMat44();
  Mat44 spine_M_spineMultiPoseConstraintKLOp_constrainees[](6);
  this.spine_M_spineMultiPoseConstraintKLOp.solve(
    spine_M_spineMultiPoseConstraintKLOp_drawDebug,
    spine_M_spineMultiPoseConstraintKLOp_rigScale,
    spine_M_spineMultiPoseConstraintKLOp_constrainers,
    spine_M_spineMultiPoseConstraintKLOp_constrainees
  );

  // retrieving value for deformers_Mspine_spine_M_spine01_def from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_Mspine_spine_M_spine01_def.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[0];

  // retrieving value for deformers_Mspine_spine_M_spine02_def from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_Mspine_spine_M_spine02_def.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[1];

  // retrieving value for deformers_Mspine_spine_M_spine03_def from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_Mspine_spine_M_spine03_def.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[2];

  // retrieving value for deformers_Mspine_spine_M_spine04_def from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_Mspine_spine_M_spine04_def.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[3];

  // retrieving value for deformers_Mspine_spine_M_spine05_def from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_Mspine_spine_M_spine05_def.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[4];

  // retrieving value for deformers_Mspine_spine_M_spine06_def from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_Mspine_spine_M_spine06_def.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[5];

  // solving parent child constraint controls_Lshoulder_shoulder_L_shoulder_cmp
  this.controls_Lshoulder_shoulder_L_shoulder_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Lshoulder_shoulder_L_shoulder_cmp.xfo;

  // solving parent child constraint controls_Lshoulder_shoulder_L_inputs_hrc
  this.controls_Lshoulder_shoulder_L_inputs_hrc.globalXfo = this.controls_Lshoulder_shoulder_L_shoulder_cmp.globalXfo * this.controls_Lshoulder_shoulder_L_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint
  this.controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_spineEnd_cmpOutOut.globalXfo;
  this.controls_Lshoulder_shoulder_L_parentSpace_cmpInIn.globalXfo = this.controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.compute(this.controls_Lshoulder_shoulder_L_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_Lshoulder_shoulder_L_outputs_hrc
  this.controls_Lshoulder_shoulder_L_outputs_hrc.globalXfo = this.controls_Lshoulder_shoulder_L_shoulder_cmp.globalXfo * this.controls_Lshoulder_shoulder_L_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint
  this.controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Lshoulder_shoulder_L_parentSpace_cmpInIn.globalXfo;
  this.controls_Lshoulder_shoulder_L_shldr01_spaceSpace.globalXfo = this.controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint.compute(this.controls_Lshoulder_shoulder_L_shldr01_spaceSpace.globalXfo);

  // solving parent child constraint controls_Lshoulder_L_shldr_fk
  this.controls_Lshoulder_L_shldr_fk.globalXfo = this.controls_Lshoulder_shoulder_L_shldr01_spaceSpace.globalXfo * this.controls_Lshoulder_L_shldr_fk.xfo;

  // solving PoseConstraint constraint controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint
  this.controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint.constrainers[0] = this.controls_Lshoulder_L_shldr_fk.globalXfo;
  this.controls_Lshoulder_shoulder_L_shldr_cmpOutOut.globalXfo = this.controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint.compute(this.controls_Lshoulder_shoulder_L_shldr_cmpOutOut.globalXfo);

  // solving parent child constraint controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace
  this.controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace.globalXfo = this.controls_Lshoulder_L_shldr_fk.globalXfo * this.controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace.xfo;

  // solving PoseConstraint constraint controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint
  this.controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.constrainers[0] = this.controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace.globalXfo;
  this.controls_Lshoulder_shoulder_L_shldrEnd_cmpOutOut.globalXfo = this.controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.compute(this.controls_Lshoulder_shoulder_L_shldrEnd_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_Lshoulder_shoulder_L_shoulder_cmp
  this.deformers_Lshoulder_shoulder_L_shoulder_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Lshoulder_shoulder_L_shoulder_cmp.xfo;

  // solving KLSolver shoulder_L_shldrDeformerKLOp
  Boolean shoulder_L_shldrDeformerKLOp_drawDebug = this.controls_shoulder_L_inputs_inputs_drawDebug.value;
  Scalar shoulder_L_shldrDeformerKLOp_rigScale = this.controls_shoulder_L_inputs_inputs_rigScale.value;
  Mat44 shoulder_L_shldrDeformerKLOp_constrainer = this.controls_Lshoulder_shoulder_L_shldr_cmpOutOut.globalXfo.toMat44();
  Mat44 shoulder_L_shldrDeformerKLOp_constrainee;
  this.shoulder_L_shldrDeformerKLOp.solve(
    shoulder_L_shldrDeformerKLOp_drawDebug,
    shoulder_L_shldrDeformerKLOp_rigScale,
    shoulder_L_shldrDeformerKLOp_constrainer,
    shoulder_L_shldrDeformerKLOp_constrainee
  );

  // retrieving value for deformers_Lshoulder_shoulder_L_shldr_def from solver shoulder_L_shldrDeformerKLOp
  this.deformers_Lshoulder_shoulder_L_shldr_def.globalXfo = shoulder_L_shldrDeformerKLOp_constrainee;

  // solving parent child constraint controls_Rshoulder_shoulder_R_shoulder_cmp
  this.controls_Rshoulder_shoulder_R_shoulder_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Rshoulder_shoulder_R_shoulder_cmp.xfo;

  // solving parent child constraint controls_Rshoulder_shoulder_R_inputs_hrc
  this.controls_Rshoulder_shoulder_R_inputs_hrc.globalXfo = this.controls_Rshoulder_shoulder_R_shoulder_cmp.globalXfo * this.controls_Rshoulder_shoulder_R_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint
  this.controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_spineEnd_cmpOutOut.globalXfo;
  this.controls_Rshoulder_shoulder_R_parentSpace_cmpInIn.globalXfo = this.controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.compute(this.controls_Rshoulder_shoulder_R_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_Rshoulder_shoulder_R_outputs_hrc
  this.controls_Rshoulder_shoulder_R_outputs_hrc.globalXfo = this.controls_Rshoulder_shoulder_R_shoulder_cmp.globalXfo * this.controls_Rshoulder_shoulder_R_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint
  this.controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Rshoulder_shoulder_R_parentSpace_cmpInIn.globalXfo;
  this.controls_Rshoulder_shoulder_R_shldr01_spaceSpace.globalXfo = this.controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint.compute(this.controls_Rshoulder_shoulder_R_shldr01_spaceSpace.globalXfo);

  // solving parent child constraint controls_Rshoulder_R_shldr_fk
  this.controls_Rshoulder_R_shldr_fk.globalXfo = this.controls_Rshoulder_shoulder_R_shldr01_spaceSpace.globalXfo * this.controls_Rshoulder_R_shldr_fk.xfo;

  // solving PoseConstraint constraint controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint
  this.controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint.constrainers[0] = this.controls_Rshoulder_R_shldr_fk.globalXfo;
  this.controls_Rshoulder_shoulder_R_shldr_cmpOutOut.globalXfo = this.controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint.compute(this.controls_Rshoulder_shoulder_R_shldr_cmpOutOut.globalXfo);

  // solving parent child constraint controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace
  this.controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace.globalXfo = this.controls_Rshoulder_R_shldr_fk.globalXfo * this.controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace.xfo;

  // solving PoseConstraint constraint controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint
  this.controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.constrainers[0] = this.controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace.globalXfo;
  this.controls_Rshoulder_shoulder_R_shldrEnd_cmpOutOut.globalXfo = this.controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.compute(this.controls_Rshoulder_shoulder_R_shldrEnd_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_Rshoulder_shoulder_R_shoulder_cmp
  this.deformers_Rshoulder_shoulder_R_shoulder_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Rshoulder_shoulder_R_shoulder_cmp.xfo;

  // solving KLSolver shoulder_R_shldrDeformerKLOp
  Boolean shoulder_R_shldrDeformerKLOp_drawDebug = this.controls_shoulder_R_inputs_inputs_drawDebug.value;
  Scalar shoulder_R_shldrDeformerKLOp_rigScale = this.controls_shoulder_R_inputs_inputs_rigScale.value;
  Mat44 shoulder_R_shldrDeformerKLOp_constrainer = this.controls_Rshoulder_shoulder_R_shldr_cmpOutOut.globalXfo.toMat44();
  Mat44 shoulder_R_shldrDeformerKLOp_constrainee;
  this.shoulder_R_shldrDeformerKLOp.solve(
    shoulder_R_shldrDeformerKLOp_drawDebug,
    shoulder_R_shldrDeformerKLOp_rigScale,
    shoulder_R_shldrDeformerKLOp_constrainer,
    shoulder_R_shldrDeformerKLOp_constrainee
  );

  // retrieving value for deformers_Rshoulder_shoulder_R_shldr_def from solver shoulder_R_shldrDeformerKLOp
  this.deformers_Rshoulder_shoulder_R_shldr_def.globalXfo = shoulder_R_shldrDeformerKLOp_constrainee;

  // solving parent child constraint controls_Lleg_leg_L_leg_cmp
  this.controls_Lleg_leg_L_leg_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Lleg_leg_L_leg_cmp.xfo;

  // solving parent child constraint controls_Lleg_leg_L_inputs_hrc
  this.controls_Lleg_leg_L_inputs_hrc.globalXfo = this.controls_Lleg_leg_L_leg_cmp.globalXfo * this.controls_Lleg_leg_L_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_Lleg_leg_L_globalSRT_cmpInIn.globalXfo = this.controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_Lleg_leg_L_globalSRT_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint
  this.controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_pelvis_cmpOutOut.globalXfo;
  this.controls_Lleg_leg_L_parentSpace_cmpInIn.globalXfo = this.controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.compute(this.controls_Lleg_leg_L_parentSpace_cmpInIn.globalXfo);

  // solving KLSolver foot_L_MfootFootRockerKLOp
  Boolean foot_L_MfootFootRockerKLOp_drawDebug = this.controls_foot_L_inputs_inputs_drawDebug.value;
  Scalar foot_L_MfootFootRockerKLOp_rigScale = this.controls_foot_L_inputs_inputs_rigScale.value;
  Boolean foot_L_MfootFootRockerKLOp_rightSide = this.controls_foot_L_inputs_inputs_rightSide.value;
  Scalar foot_L_MfootFootRockerKLOp_footRocker = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker.value;
  Scalar foot_L_MfootFootRockerKLOp_ballBreak = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak.value;
  Scalar foot_L_MfootFootRockerKLOp_footTilt = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt.value;

  // solving PoseConstraint constraint controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_Lfoot_foot_L_globalSRT_cmpInIn.globalXfo = this.controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_Lfoot_foot_L_globalSRT_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint
  this.controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Lfoot_foot_L_globalSRT_cmpInIn.globalXfo;
  this.controls_Lfoot_foot_L_foot01_spaceSpace.globalXfo = this.controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint.compute(this.controls_Lfoot_foot_L_foot01_spaceSpace.globalXfo);

  // solving parent child constraint controls_Lfoot_L_foot_ik
  this.controls_Lfoot_L_foot_ik.globalXfo = this.controls_Lfoot_foot_L_foot01_spaceSpace.globalXfo * this.controls_Lfoot_L_foot_ik.xfo;

  // solving parent child constraint controls_Lfoot_L_ikGoalRef_xfo
  this.controls_Lfoot_L_ikGoalRef_xfo.globalXfo = this.controls_Lfoot_L_foot_ik.globalXfo * this.controls_Lfoot_L_ikGoalRef_xfo.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_ikCtrl = this.controls_Lfoot_L_ikGoalRef_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Lfoot_L_heelPivot_xfo
  this.controls_Lfoot_L_heelPivot_xfo.globalXfo = this.controls_Lfoot_L_foot_ik.globalXfo * this.controls_Lfoot_L_heelPivot_xfo.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_heelPivot = this.controls_Lfoot_L_heelPivot_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Lfoot_L_ballPivot_xfo
  this.controls_Lfoot_L_ballPivot_xfo.globalXfo = this.controls_Lfoot_L_foot_ik.globalXfo * this.controls_Lfoot_L_ballPivot_xfo.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_ballPivot = this.controls_Lfoot_L_ballPivot_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Lfoot_L_ballTipPivot_xfo
  this.controls_Lfoot_L_ballTipPivot_xfo.globalXfo = this.controls_Lfoot_L_foot_ik.globalXfo * this.controls_Lfoot_L_ballTipPivot_xfo.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_toePivot = this.controls_Lfoot_L_ballTipPivot_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Lfoot_L_footJoint_xfo
  this.controls_Lfoot_L_footJoint_xfo.globalXfo = this.controls_Lfoot_L_foot_ik.globalXfo * this.controls_Lfoot_L_footJoint_xfo.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_footJointLoc = this.controls_Lfoot_L_footJoint_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Lfoot_L_ballJoint_xfo
  this.controls_Lfoot_L_ballJoint_xfo.globalXfo = this.controls_Lfoot_L_foot_ik.globalXfo * this.controls_Lfoot_L_ballJoint_xfo.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_ballJointLoc = this.controls_Lfoot_L_ballJoint_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Lfoot_L_innerPivot_xfo
  this.controls_Lfoot_L_innerPivot_xfo.globalXfo = this.controls_Lfoot_L_foot_ik.globalXfo * this.controls_Lfoot_L_innerPivot_xfo.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_innerPivotLoc = this.controls_Lfoot_L_innerPivot_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Lfoot_L_outerPivot_xfo
  this.controls_Lfoot_L_outerPivot_xfo.globalXfo = this.controls_Lfoot_L_foot_ik.globalXfo * this.controls_Lfoot_L_outerPivot_xfo.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_outerPivotLoc = this.controls_Lfoot_L_outerPivot_xfo.globalXfo.toMat44();
  Mat44 foot_L_MfootFootRockerKLOp_footJoint;
  Mat44 foot_L_MfootFootRockerKLOp_ballJoint;
  Mat44 foot_L_MfootFootRockerKLOp_ikGoal;
  this.foot_L_MfootFootRockerKLOp.solve(
    foot_L_MfootFootRockerKLOp_drawDebug,
    foot_L_MfootFootRockerKLOp_rigScale,
    foot_L_MfootFootRockerKLOp_rightSide,
    foot_L_MfootFootRockerKLOp_footRocker,
    foot_L_MfootFootRockerKLOp_ballBreak,
    foot_L_MfootFootRockerKLOp_footTilt,
    foot_L_MfootFootRockerKLOp_ikCtrl,
    foot_L_MfootFootRockerKLOp_heelPivot,
    foot_L_MfootFootRockerKLOp_ballPivot,
    foot_L_MfootFootRockerKLOp_toePivot,
    foot_L_MfootFootRockerKLOp_footJointLoc,
    foot_L_MfootFootRockerKLOp_ballJointLoc,
    foot_L_MfootFootRockerKLOp_innerPivotLoc,
    foot_L_MfootFootRockerKLOp_outerPivotLoc,
    foot_L_MfootFootRockerKLOp_footJoint,
    foot_L_MfootFootRockerKLOp_ballJoint,
    foot_L_MfootFootRockerKLOp_ikGoal
  );

  // retrieving value for controls_Lfoot_L_footRockerFoot_out_xfo from solver foot_L_MfootFootRockerKLOp
  this.controls_Lfoot_L_footRockerFoot_out_xfo.globalXfo = foot_L_MfootFootRockerKLOp_footJoint;

  // retrieving value for controls_Lfoot_L_footRockerBall_out_xfo from solver foot_L_MfootFootRockerKLOp
  this.controls_Lfoot_L_footRockerBall_out_xfo.globalXfo = foot_L_MfootFootRockerKLOp_ballJoint;

  // retrieving value for controls_Lfoot_foot_L_ikgoal_cmpOutOut from solver foot_L_MfootFootRockerKLOp
  this.controls_Lfoot_foot_L_ikgoal_cmpOutOut.globalXfo = foot_L_MfootFootRockerKLOp_ikGoal;

  // solving PoseConstraint constraint controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint
  this.controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers[0] = this.controls_Lfoot_foot_L_ikgoal_cmpOutOut.globalXfo;
  this.controls_Lleg_leg_L_ikGoalInput_cmpInIn.globalXfo = this.controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.compute(this.controls_Lleg_leg_L_ikGoalInput_cmpInIn.globalXfo);

  // solving parent child constraint controls_Lleg_leg_L_outputs_hrc
  this.controls_Lleg_leg_L_outputs_hrc.globalXfo = this.controls_Lleg_leg_L_leg_cmp.globalXfo * this.controls_Lleg_leg_L_outputs_hrc.xfo;

  // solving KLSolver leg_L_LlegIKFKTwoBoneIKSolver
  Boolean leg_L_LlegIKFKTwoBoneIKSolver_drawDebug = this.controls_leg_L_inputs_inputs_drawDebug.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_rigScale = this.controls_leg_L_inputs_inputs_rigScale.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_ikBlend = this.controls_leg_L_inputs_inputs_ikBlend.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_softDist = this.controls_leg_L_inputs_inputs_softDist.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_stretch = this.controls_leg_L_inputs_inputs_stretch.value;

  // solving PoseConstraint constraint controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint
  this.controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Lleg_leg_L_parentSpace_cmpInIn.globalXfo;
  this.controls_Lleg_leg_L_upLeg01_spaceSpace.globalXfo = this.controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint.compute(this.controls_Lleg_leg_L_upLeg01_spaceSpace.globalXfo);
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_root = this.controls_Lleg_leg_L_upLeg01_spaceSpace.globalXfo.toMat44();

  // solving parent child constraint controls_Lleg_L_upLeg_fk
  this.controls_Lleg_L_upLeg_fk.globalXfo = this.controls_Lleg_leg_L_upLeg01_spaceSpace.globalXfo * this.controls_Lleg_L_upLeg_fk.xfo;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone0FK = this.controls_Lleg_L_upLeg_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Lleg_leg_L_loLeg01_spaceSpace
  this.controls_Lleg_leg_L_loLeg01_spaceSpace.globalXfo = this.controls_Lleg_L_upLeg_fk.globalXfo * this.controls_Lleg_leg_L_loLeg01_spaceSpace.xfo;

  // solving parent child constraint controls_Lleg_L_loLeg_fk
  this.controls_Lleg_L_loLeg_fk.globalXfo = this.controls_Lleg_leg_L_loLeg01_spaceSpace.globalXfo * this.controls_Lleg_L_loLeg_fk.xfo;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone1FK = this.controls_Lleg_L_loLeg_fk.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint
  this.controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_Lleg_leg_L_ikGoalInput_cmpInIn.globalXfo;
  this.controls_Lleg_L_footIK_xfo.globalXfo = this.controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.compute(this.controls_Lleg_L_footIK_xfo.globalXfo);
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_ikHandle = this.controls_Lleg_L_footIK_xfo.globalXfo.toMat44();

  // solving KLSolver leg_L_LlegUpVSpace_HierBlendSolver
  Boolean leg_L_LlegUpVSpace_HierBlendSolver_drawDebug = this.controls_leg_L_inputs_inputs_drawDebug.value;
  Scalar leg_L_LlegUpVSpace_HierBlendSolver_rigScale = this.controls_leg_L_inputs_inputs_rigScale.value;
  Mat44 leg_L_LlegUpVSpace_HierBlendSolver_hierA[](1);

  // solving PoseConstraint constraint controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint
  this.controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Lleg_leg_L_globalSRT_cmpInIn.globalXfo;
  this.controls_Lleg_leg_L_legIKMaster_spaceSpace.globalXfo = this.controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.compute(this.controls_Lleg_leg_L_legIKMaster_spaceSpace.globalXfo);
  leg_L_LlegUpVSpace_HierBlendSolver_hierA[0] = this.controls_Lleg_leg_L_legIKMaster_spaceSpace.globalXfo.toMat44();
  Mat44 leg_L_LlegUpVSpace_HierBlendSolver_hierB[](1);

  // solving PoseConstraint constraint controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint
  this.controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_Lleg_leg_L_ikGoalInput_cmpInIn.globalXfo;
  this.controls_Lleg_leg_L_legUpVIK_spaceSpace.globalXfo = this.controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.compute(this.controls_Lleg_leg_L_legUpVIK_spaceSpace.globalXfo);
  leg_L_LlegUpVSpace_HierBlendSolver_hierB[0] = this.controls_Lleg_leg_L_legUpVIK_spaceSpace.globalXfo.toMat44();
  Integer leg_L_LlegUpVSpace_HierBlendSolver_parentIndexes[](1);
  leg_L_LlegUpVSpace_HierBlendSolver_parentIndexes[0] = -1;
  Scalar leg_L_LlegUpVSpace_HierBlendSolver_blend = this.controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace.value;
  Mat44 leg_L_LlegUpVSpace_HierBlendSolver_hierOut[](1);
  this.leg_L_LlegUpVSpace_HierBlendSolver.solve(
    leg_L_LlegUpVSpace_HierBlendSolver_drawDebug,
    leg_L_LlegUpVSpace_HierBlendSolver_rigScale,
    leg_L_LlegUpVSpace_HierBlendSolver_hierA,
    leg_L_LlegUpVSpace_HierBlendSolver_hierB,
    leg_L_LlegUpVSpace_HierBlendSolver_parentIndexes,
    leg_L_LlegUpVSpace_HierBlendSolver_blend,
    leg_L_LlegUpVSpace_HierBlendSolver_hierOut
  );

  // retrieving value for controls_Lleg_leg_L_legUpV01_spaceSpace from solver leg_L_LlegUpVSpace_HierBlendSolver
  this.controls_Lleg_leg_L_legUpV01_spaceSpace.globalXfo = leg_L_LlegUpVSpace_HierBlendSolver_hierOut[0];

  // solving parent child constraint controls_Lleg_L_legUpV_an
  this.controls_Lleg_L_legUpV_an.globalXfo = this.controls_Lleg_leg_L_legUpV01_spaceSpace.globalXfo * this.controls_Lleg_L_legUpV_an.xfo;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_upV = this.controls_Lleg_L_legUpV_an.globalXfo.toMat44();
  UInt32 leg_L_LlegIKFKTwoBoneIKSolver_boneAxis = 0;
  UInt32 leg_L_LlegIKFKTwoBoneIKSolver_upAxis = 2;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_bone0Len = this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_bone1Len = this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone0Out;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone1Out;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone2Out;
  this.leg_L_LlegIKFKTwoBoneIKSolver.solve(
    leg_L_LlegIKFKTwoBoneIKSolver_drawDebug,
    leg_L_LlegIKFKTwoBoneIKSolver_rigScale,
    leg_L_LlegIKFKTwoBoneIKSolver_ikBlend,
    leg_L_LlegIKFKTwoBoneIKSolver_softDist,
    leg_L_LlegIKFKTwoBoneIKSolver_stretch,
    leg_L_LlegIKFKTwoBoneIKSolver_root,
    leg_L_LlegIKFKTwoBoneIKSolver_bone0FK,
    leg_L_LlegIKFKTwoBoneIKSolver_bone1FK,
    leg_L_LlegIKFKTwoBoneIKSolver_ikHandle,
    leg_L_LlegIKFKTwoBoneIKSolver_upV,
    leg_L_LlegIKFKTwoBoneIKSolver_boneAxis,
    leg_L_LlegIKFKTwoBoneIKSolver_upAxis,
    leg_L_LlegIKFKTwoBoneIKSolver_bone0Len,
    leg_L_LlegIKFKTwoBoneIKSolver_bone1Len,
    leg_L_LlegIKFKTwoBoneIKSolver_bone0Out,
    leg_L_LlegIKFKTwoBoneIKSolver_bone1Out,
    leg_L_LlegIKFKTwoBoneIKSolver_bone2Out
  );

  // retrieving value for controls_Lleg_leg_L_uplimb_cmpOutOut from solver leg_L_LlegIKFKTwoBoneIKSolver
  this.controls_Lleg_leg_L_uplimb_cmpOutOut.globalXfo = leg_L_LlegIKFKTwoBoneIKSolver_bone0Out;

  // retrieving value for controls_Lleg_leg_L_lolimb_cmpOutOut from solver leg_L_LlegIKFKTwoBoneIKSolver
  this.controls_Lleg_leg_L_lolimb_cmpOutOut.globalXfo = leg_L_LlegIKFKTwoBoneIKSolver_bone1Out;

  // retrieving value for controls_Lleg_leg_L_endlimb_cmpOutOut from solver leg_L_LlegIKFKTwoBoneIKSolver
  this.controls_Lleg_leg_L_endlimb_cmpOutOut.globalXfo = leg_L_LlegIKFKTwoBoneIKSolver_bone2Out;

  // solving PoseConstraint constraint controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint
  this.controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Lleg_leg_L_globalSRT_cmpInIn.globalXfo;
  this.controls_Lleg_leg_L_footIK_spaceSpace.globalXfo = this.controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint.compute(this.controls_Lleg_leg_L_footIK_spaceSpace.globalXfo);

  // solving parent child constraint deformers_Lleg_leg_L_leg_cmp
  this.deformers_Lleg_leg_L_leg_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Lleg_leg_L_leg_cmp.xfo;

  // solving KLSolver leg_L_LlegDeformerJointsKLOp
  Boolean leg_L_LlegDeformerJointsKLOp_drawDebug = this.controls_leg_L_inputs_inputs_drawDebug.value;
  Scalar leg_L_LlegDeformerJointsKLOp_rigScale = this.controls_leg_L_inputs_inputs_rigScale.value;
  Mat44 leg_L_LlegDeformerJointsKLOp_constrainers[](3);
  leg_L_LlegDeformerJointsKLOp_constrainers[0] = this.controls_Lleg_leg_L_uplimb_cmpOutOut.globalXfo.toMat44();
  leg_L_LlegDeformerJointsKLOp_constrainers[1] = this.controls_Lleg_leg_L_lolimb_cmpOutOut.globalXfo.toMat44();
  leg_L_LlegDeformerJointsKLOp_constrainers[2] = this.controls_Lleg_leg_L_endlimb_cmpOutOut.globalXfo.toMat44();
  Mat44 leg_L_LlegDeformerJointsKLOp_constrainees[](3);
  this.leg_L_LlegDeformerJointsKLOp.solve(
    leg_L_LlegDeformerJointsKLOp_drawDebug,
    leg_L_LlegDeformerJointsKLOp_rigScale,
    leg_L_LlegDeformerJointsKLOp_constrainers,
    leg_L_LlegDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Lleg_leg_L_upLeg_def from solver leg_L_LlegDeformerJointsKLOp
  this.deformers_Lleg_leg_L_upLeg_def.globalXfo = leg_L_LlegDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Lleg_leg_L_loLeg_def from solver leg_L_LlegDeformerJointsKLOp
  this.deformers_Lleg_leg_L_loLeg_def.globalXfo = leg_L_LlegDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Lleg_leg_L_legend_def from solver leg_L_LlegDeformerJointsKLOp
  this.deformers_Lleg_leg_L_legend_def.globalXfo = leg_L_LlegDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_Lfoot_foot_L_foot_cmp
  this.controls_Lfoot_foot_L_foot_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Lfoot_foot_L_foot_cmp.xfo;

  // solving parent child constraint controls_Lfoot_foot_L_inputs_hrc
  this.controls_Lfoot_foot_L_inputs_hrc.globalXfo = this.controls_Lfoot_foot_L_foot_cmp.globalXfo * this.controls_Lfoot_foot_L_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint
  this.controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers[0] = this.controls_Lleg_leg_L_endlimb_cmpOutOut.globalXfo;
  this.controls_Lfoot_foot_L_parentSpace_cmpInIn.globalXfo = this.controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.compute(this.controls_Lfoot_foot_L_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_Lfoot_foot_L_outputs_hrc
  this.controls_Lfoot_foot_L_outputs_hrc.globalXfo = this.controls_Lfoot_foot_L_foot_cmp.globalXfo * this.controls_Lfoot_foot_L_outputs_hrc.xfo;

  // solving KLSolver foot_L_MfootIKFootBlendKLOp
  Boolean foot_L_MfootIKFootBlendKLOp_drawDebug = this.controls_foot_L_inputs_inputs_drawDebug.value;
  Scalar foot_L_MfootIKFootBlendKLOp_rigScale = this.controls_foot_L_inputs_inputs_rigScale.value;
  Scalar foot_L_MfootIKFootBlendKLOp_blend = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK.value;
  Mat44 foot_L_MfootIKFootBlendKLOp_ikFoot = this.controls_Lfoot_L_footRockerFoot_out_xfo.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint
  this.controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Lfoot_foot_L_parentSpace_cmpInIn.globalXfo;
  this.controls_Lfoot_foot_L_foot02_spaceSpace.globalXfo = this.controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint.compute(this.controls_Lfoot_foot_L_foot02_spaceSpace.globalXfo);

  // solving parent child constraint controls_Lfoot_L_foot_fk
  this.controls_Lfoot_L_foot_fk.globalXfo = this.controls_Lfoot_foot_L_foot02_spaceSpace.globalXfo * this.controls_Lfoot_L_foot_fk.xfo;
  Mat44 foot_L_MfootIKFootBlendKLOp_fkFoot = this.controls_Lfoot_L_foot_fk.globalXfo.toMat44();
  Mat44 foot_L_MfootIKFootBlendKLOp_ikBall = this.controls_Lfoot_L_footRockerBall_out_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Lfoot_foot_L_ball01_spaceSpace
  this.controls_Lfoot_foot_L_ball01_spaceSpace.globalXfo = this.controls_Lfoot_L_foot_fk.globalXfo * this.controls_Lfoot_foot_L_ball01_spaceSpace.xfo;

  // solving parent child constraint controls_Lfoot_L_ball_fk
  this.controls_Lfoot_L_ball_fk.globalXfo = this.controls_Lfoot_foot_L_ball01_spaceSpace.globalXfo * this.controls_Lfoot_L_ball_fk.xfo;
  Mat44 foot_L_MfootIKFootBlendKLOp_fkBall = this.controls_Lfoot_L_ball_fk.globalXfo.toMat44();
  Mat44 foot_L_MfootIKFootBlendKLOp_foot;
  Mat44 foot_L_MfootIKFootBlendKLOp_ball;
  this.foot_L_MfootIKFootBlendKLOp.solve(
    foot_L_MfootIKFootBlendKLOp_drawDebug,
    foot_L_MfootIKFootBlendKLOp_rigScale,
    foot_L_MfootIKFootBlendKLOp_blend,
    foot_L_MfootIKFootBlendKLOp_ikFoot,
    foot_L_MfootIKFootBlendKLOp_fkFoot,
    foot_L_MfootIKFootBlendKLOp_ikBall,
    foot_L_MfootIKFootBlendKLOp_fkBall,
    foot_L_MfootIKFootBlendKLOp_foot,
    foot_L_MfootIKFootBlendKLOp_ball
  );

  // retrieving value for controls_Lfoot_L_IKFootBlendKLOpFoot_out_xfo from solver foot_L_MfootIKFootBlendKLOp
  this.controls_Lfoot_L_IKFootBlendKLOpFoot_out_xfo.globalXfo = foot_L_MfootIKFootBlendKLOp_foot;

  // retrieving value for controls_Lfoot_L_IKFootBlendKLOpBall_out_xfo from solver foot_L_MfootIKFootBlendKLOp
  this.controls_Lfoot_L_IKFootBlendKLOpBall_out_xfo.globalXfo = foot_L_MfootIKFootBlendKLOp_ball;

  // solving PoseConstraint constraint controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint
  this.controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.constrainers[0] = this.controls_Lfoot_L_IKFootBlendKLOpFoot_out_xfo.globalXfo;
  this.controls_Lfoot_foot_L_foot_cmpOutOut.globalXfo = this.controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.compute(this.controls_Lfoot_foot_L_foot_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint
  this.controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.constrainers[0] = this.controls_Lfoot_L_IKFootBlendKLOpBall_out_xfo.globalXfo;
  this.controls_Lfoot_foot_L_ball_cmpOutOut.globalXfo = this.controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.compute(this.controls_Lfoot_foot_L_ball_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_Lfoot_foot_L_foot_cmp
  this.deformers_Lfoot_foot_L_foot_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Lfoot_foot_L_foot_cmp.xfo;

  // solving KLSolver foot_L_MfootDeformerJointsKLOp
  Boolean foot_L_MfootDeformerJointsKLOp_drawDebug = this.controls_foot_L_inputs_inputs_drawDebug.value;
  Scalar foot_L_MfootDeformerJointsKLOp_rigScale = this.controls_foot_L_inputs_inputs_rigScale.value;
  Mat44 foot_L_MfootDeformerJointsKLOp_constrainers[](2);
  foot_L_MfootDeformerJointsKLOp_constrainers[0] = this.controls_Lfoot_foot_L_foot_cmpOutOut.globalXfo.toMat44();
  foot_L_MfootDeformerJointsKLOp_constrainers[1] = this.controls_Lfoot_foot_L_ball_cmpOutOut.globalXfo.toMat44();
  Mat44 foot_L_MfootDeformerJointsKLOp_constrainees[](2);
  this.foot_L_MfootDeformerJointsKLOp.solve(
    foot_L_MfootDeformerJointsKLOp_drawDebug,
    foot_L_MfootDeformerJointsKLOp_rigScale,
    foot_L_MfootDeformerJointsKLOp_constrainers,
    foot_L_MfootDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Lfoot_foot_L_foot_def from solver foot_L_MfootDeformerJointsKLOp
  this.deformers_Lfoot_foot_L_foot_def.globalXfo = foot_L_MfootDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Lfoot_foot_L_ball_def from solver foot_L_MfootDeformerJointsKLOp
  this.deformers_Lfoot_foot_L_ball_def.globalXfo = foot_L_MfootDeformerJointsKLOp_constrainees[1];

  // solving parent child constraint controls_Rfoot_foot_R_foot_cmp
  this.controls_Rfoot_foot_R_foot_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Rfoot_foot_R_foot_cmp.xfo;

  // solving parent child constraint controls_Rfoot_foot_R_inputs_hrc
  this.controls_Rfoot_foot_R_inputs_hrc.globalXfo = this.controls_Rfoot_foot_R_foot_cmp.globalXfo * this.controls_Rfoot_foot_R_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_Rfoot_foot_R_globalSRT_cmpInIn.globalXfo = this.controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_Rfoot_foot_R_globalSRT_cmpInIn.globalXfo);

  // solving KLSolver leg_R_RlegIKFKTwoBoneIKSolver
  Boolean leg_R_RlegIKFKTwoBoneIKSolver_drawDebug = this.controls_leg_R_inputs_inputs_drawDebug.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_rigScale = this.controls_leg_R_inputs_inputs_rigScale.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_ikBlend = this.controls_leg_R_inputs_inputs_ikBlend.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_softDist = this.controls_leg_R_inputs_inputs_softDist.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_stretch = this.controls_leg_R_inputs_inputs_stretch.value;

  // solving PoseConstraint constraint controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint
  this.controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_pelvis_cmpOutOut.globalXfo;
  this.controls_Rleg_leg_R_parentSpace_cmpInIn.globalXfo = this.controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.compute(this.controls_Rleg_leg_R_parentSpace_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint
  this.controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Rleg_leg_R_parentSpace_cmpInIn.globalXfo;
  this.controls_Rleg_leg_R_upLeg01_spaceSpace.globalXfo = this.controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint.compute(this.controls_Rleg_leg_R_upLeg01_spaceSpace.globalXfo);
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_root = this.controls_Rleg_leg_R_upLeg01_spaceSpace.globalXfo.toMat44();

  // solving parent child constraint controls_Rleg_R_upLeg_fk
  this.controls_Rleg_R_upLeg_fk.globalXfo = this.controls_Rleg_leg_R_upLeg01_spaceSpace.globalXfo * this.controls_Rleg_R_upLeg_fk.xfo;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone0FK = this.controls_Rleg_R_upLeg_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Rleg_leg_R_loLeg01_spaceSpace
  this.controls_Rleg_leg_R_loLeg01_spaceSpace.globalXfo = this.controls_Rleg_R_upLeg_fk.globalXfo * this.controls_Rleg_leg_R_loLeg01_spaceSpace.xfo;

  // solving parent child constraint controls_Rleg_R_loLeg_fk
  this.controls_Rleg_R_loLeg_fk.globalXfo = this.controls_Rleg_leg_R_loLeg01_spaceSpace.globalXfo * this.controls_Rleg_R_loLeg_fk.xfo;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone1FK = this.controls_Rleg_R_loLeg_fk.globalXfo.toMat44();

  // solving KLSolver foot_R_MfootFootRockerKLOp
  Boolean foot_R_MfootFootRockerKLOp_drawDebug = this.controls_foot_R_inputs_inputs_drawDebug.value;
  Scalar foot_R_MfootFootRockerKLOp_rigScale = this.controls_foot_R_inputs_inputs_rigScale.value;
  Boolean foot_R_MfootFootRockerKLOp_rightSide = this.controls_foot_R_inputs_inputs_rightSide.value;
  Scalar foot_R_MfootFootRockerKLOp_footRocker = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker.value;
  Scalar foot_R_MfootFootRockerKLOp_ballBreak = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak.value;
  Scalar foot_R_MfootFootRockerKLOp_footTilt = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt.value;

  // solving PoseConstraint constraint controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint
  this.controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Rfoot_foot_R_globalSRT_cmpInIn.globalXfo;
  this.controls_Rfoot_foot_R_foot01_spaceSpace.globalXfo = this.controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint.compute(this.controls_Rfoot_foot_R_foot01_spaceSpace.globalXfo);

  // solving parent child constraint controls_Rfoot_R_foot_ik
  this.controls_Rfoot_R_foot_ik.globalXfo = this.controls_Rfoot_foot_R_foot01_spaceSpace.globalXfo * this.controls_Rfoot_R_foot_ik.xfo;

  // solving parent child constraint controls_Rfoot_R_ikGoalRef_xfo
  this.controls_Rfoot_R_ikGoalRef_xfo.globalXfo = this.controls_Rfoot_R_foot_ik.globalXfo * this.controls_Rfoot_R_ikGoalRef_xfo.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_ikCtrl = this.controls_Rfoot_R_ikGoalRef_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Rfoot_R_heelPivot_xfo
  this.controls_Rfoot_R_heelPivot_xfo.globalXfo = this.controls_Rfoot_R_foot_ik.globalXfo * this.controls_Rfoot_R_heelPivot_xfo.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_heelPivot = this.controls_Rfoot_R_heelPivot_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Rfoot_R_ballPivot_xfo
  this.controls_Rfoot_R_ballPivot_xfo.globalXfo = this.controls_Rfoot_R_foot_ik.globalXfo * this.controls_Rfoot_R_ballPivot_xfo.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_ballPivot = this.controls_Rfoot_R_ballPivot_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Rfoot_R_ballTipPivot_xfo
  this.controls_Rfoot_R_ballTipPivot_xfo.globalXfo = this.controls_Rfoot_R_foot_ik.globalXfo * this.controls_Rfoot_R_ballTipPivot_xfo.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_toePivot = this.controls_Rfoot_R_ballTipPivot_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Rfoot_R_footJoint_xfo
  this.controls_Rfoot_R_footJoint_xfo.globalXfo = this.controls_Rfoot_R_foot_ik.globalXfo * this.controls_Rfoot_R_footJoint_xfo.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_footJointLoc = this.controls_Rfoot_R_footJoint_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Rfoot_R_ballJoint_xfo
  this.controls_Rfoot_R_ballJoint_xfo.globalXfo = this.controls_Rfoot_R_foot_ik.globalXfo * this.controls_Rfoot_R_ballJoint_xfo.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_ballJointLoc = this.controls_Rfoot_R_ballJoint_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Rfoot_R_innerPivot_xfo
  this.controls_Rfoot_R_innerPivot_xfo.globalXfo = this.controls_Rfoot_R_foot_ik.globalXfo * this.controls_Rfoot_R_innerPivot_xfo.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_innerPivotLoc = this.controls_Rfoot_R_innerPivot_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Rfoot_R_outerPivot_xfo
  this.controls_Rfoot_R_outerPivot_xfo.globalXfo = this.controls_Rfoot_R_foot_ik.globalXfo * this.controls_Rfoot_R_outerPivot_xfo.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_outerPivotLoc = this.controls_Rfoot_R_outerPivot_xfo.globalXfo.toMat44();
  Mat44 foot_R_MfootFootRockerKLOp_footJoint;
  Mat44 foot_R_MfootFootRockerKLOp_ballJoint;
  Mat44 foot_R_MfootFootRockerKLOp_ikGoal;
  this.foot_R_MfootFootRockerKLOp.solve(
    foot_R_MfootFootRockerKLOp_drawDebug,
    foot_R_MfootFootRockerKLOp_rigScale,
    foot_R_MfootFootRockerKLOp_rightSide,
    foot_R_MfootFootRockerKLOp_footRocker,
    foot_R_MfootFootRockerKLOp_ballBreak,
    foot_R_MfootFootRockerKLOp_footTilt,
    foot_R_MfootFootRockerKLOp_ikCtrl,
    foot_R_MfootFootRockerKLOp_heelPivot,
    foot_R_MfootFootRockerKLOp_ballPivot,
    foot_R_MfootFootRockerKLOp_toePivot,
    foot_R_MfootFootRockerKLOp_footJointLoc,
    foot_R_MfootFootRockerKLOp_ballJointLoc,
    foot_R_MfootFootRockerKLOp_innerPivotLoc,
    foot_R_MfootFootRockerKLOp_outerPivotLoc,
    foot_R_MfootFootRockerKLOp_footJoint,
    foot_R_MfootFootRockerKLOp_ballJoint,
    foot_R_MfootFootRockerKLOp_ikGoal
  );

  // retrieving value for controls_Rfoot_R_footRockerFoot_out_xfo from solver foot_R_MfootFootRockerKLOp
  this.controls_Rfoot_R_footRockerFoot_out_xfo.globalXfo = foot_R_MfootFootRockerKLOp_footJoint;

  // retrieving value for controls_Rfoot_R_footRockerBall_out_xfo from solver foot_R_MfootFootRockerKLOp
  this.controls_Rfoot_R_footRockerBall_out_xfo.globalXfo = foot_R_MfootFootRockerKLOp_ballJoint;

  // retrieving value for controls_Rfoot_foot_R_ikgoal_cmpOutOut from solver foot_R_MfootFootRockerKLOp
  this.controls_Rfoot_foot_R_ikgoal_cmpOutOut.globalXfo = foot_R_MfootFootRockerKLOp_ikGoal;

  // solving PoseConstraint constraint controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint
  this.controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers[0] = this.controls_Rfoot_foot_R_ikgoal_cmpOutOut.globalXfo;
  this.controls_Rleg_leg_R_ikGoalInput_cmpInIn.globalXfo = this.controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.compute(this.controls_Rleg_leg_R_ikGoalInput_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint
  this.controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_Rleg_leg_R_ikGoalInput_cmpInIn.globalXfo;
  this.controls_Rleg_R_footIK_xfo.globalXfo = this.controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.compute(this.controls_Rleg_R_footIK_xfo.globalXfo);
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_ikHandle = this.controls_Rleg_R_footIK_xfo.globalXfo.toMat44();

  // solving KLSolver leg_R_RlegUpVSpace_HierBlendSolver
  Boolean leg_R_RlegUpVSpace_HierBlendSolver_drawDebug = this.controls_leg_R_inputs_inputs_drawDebug.value;
  Scalar leg_R_RlegUpVSpace_HierBlendSolver_rigScale = this.controls_leg_R_inputs_inputs_rigScale.value;
  Mat44 leg_R_RlegUpVSpace_HierBlendSolver_hierA[](1);

  // solving PoseConstraint constraint controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_Rleg_leg_R_globalSRT_cmpInIn.globalXfo = this.controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_Rleg_leg_R_globalSRT_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint
  this.controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Rleg_leg_R_globalSRT_cmpInIn.globalXfo;
  this.controls_Rleg_leg_R_legIKMaster_spaceSpace.globalXfo = this.controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.compute(this.controls_Rleg_leg_R_legIKMaster_spaceSpace.globalXfo);
  leg_R_RlegUpVSpace_HierBlendSolver_hierA[0] = this.controls_Rleg_leg_R_legIKMaster_spaceSpace.globalXfo.toMat44();
  Mat44 leg_R_RlegUpVSpace_HierBlendSolver_hierB[](1);

  // solving PoseConstraint constraint controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint
  this.controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_Rleg_leg_R_ikGoalInput_cmpInIn.globalXfo;
  this.controls_Rleg_leg_R_legUpVIK_spaceSpace.globalXfo = this.controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.compute(this.controls_Rleg_leg_R_legUpVIK_spaceSpace.globalXfo);
  leg_R_RlegUpVSpace_HierBlendSolver_hierB[0] = this.controls_Rleg_leg_R_legUpVIK_spaceSpace.globalXfo.toMat44();
  Integer leg_R_RlegUpVSpace_HierBlendSolver_parentIndexes[](1);
  leg_R_RlegUpVSpace_HierBlendSolver_parentIndexes[0] = -1;
  Scalar leg_R_RlegUpVSpace_HierBlendSolver_blend = this.controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace.value;
  Mat44 leg_R_RlegUpVSpace_HierBlendSolver_hierOut[](1);
  this.leg_R_RlegUpVSpace_HierBlendSolver.solve(
    leg_R_RlegUpVSpace_HierBlendSolver_drawDebug,
    leg_R_RlegUpVSpace_HierBlendSolver_rigScale,
    leg_R_RlegUpVSpace_HierBlendSolver_hierA,
    leg_R_RlegUpVSpace_HierBlendSolver_hierB,
    leg_R_RlegUpVSpace_HierBlendSolver_parentIndexes,
    leg_R_RlegUpVSpace_HierBlendSolver_blend,
    leg_R_RlegUpVSpace_HierBlendSolver_hierOut
  );

  // retrieving value for controls_Rleg_leg_R_legUpV01_spaceSpace from solver leg_R_RlegUpVSpace_HierBlendSolver
  this.controls_Rleg_leg_R_legUpV01_spaceSpace.globalXfo = leg_R_RlegUpVSpace_HierBlendSolver_hierOut[0];

  // solving parent child constraint controls_Rleg_R_legUpV_an
  this.controls_Rleg_R_legUpV_an.globalXfo = this.controls_Rleg_leg_R_legUpV01_spaceSpace.globalXfo * this.controls_Rleg_R_legUpV_an.xfo;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_upV = this.controls_Rleg_R_legUpV_an.globalXfo.toMat44();
  UInt32 leg_R_RlegIKFKTwoBoneIKSolver_boneAxis = 3;
  UInt32 leg_R_RlegIKFKTwoBoneIKSolver_upAxis = 5;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_bone0Len = this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_bone1Len = this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone0Out;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone1Out;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone2Out;
  this.leg_R_RlegIKFKTwoBoneIKSolver.solve(
    leg_R_RlegIKFKTwoBoneIKSolver_drawDebug,
    leg_R_RlegIKFKTwoBoneIKSolver_rigScale,
    leg_R_RlegIKFKTwoBoneIKSolver_ikBlend,
    leg_R_RlegIKFKTwoBoneIKSolver_softDist,
    leg_R_RlegIKFKTwoBoneIKSolver_stretch,
    leg_R_RlegIKFKTwoBoneIKSolver_root,
    leg_R_RlegIKFKTwoBoneIKSolver_bone0FK,
    leg_R_RlegIKFKTwoBoneIKSolver_bone1FK,
    leg_R_RlegIKFKTwoBoneIKSolver_ikHandle,
    leg_R_RlegIKFKTwoBoneIKSolver_upV,
    leg_R_RlegIKFKTwoBoneIKSolver_boneAxis,
    leg_R_RlegIKFKTwoBoneIKSolver_upAxis,
    leg_R_RlegIKFKTwoBoneIKSolver_bone0Len,
    leg_R_RlegIKFKTwoBoneIKSolver_bone1Len,
    leg_R_RlegIKFKTwoBoneIKSolver_bone0Out,
    leg_R_RlegIKFKTwoBoneIKSolver_bone1Out,
    leg_R_RlegIKFKTwoBoneIKSolver_bone2Out
  );

  // retrieving value for controls_Rleg_leg_R_uplimb_cmpOutOut from solver leg_R_RlegIKFKTwoBoneIKSolver
  this.controls_Rleg_leg_R_uplimb_cmpOutOut.globalXfo = leg_R_RlegIKFKTwoBoneIKSolver_bone0Out;

  // retrieving value for controls_Rleg_leg_R_lolimb_cmpOutOut from solver leg_R_RlegIKFKTwoBoneIKSolver
  this.controls_Rleg_leg_R_lolimb_cmpOutOut.globalXfo = leg_R_RlegIKFKTwoBoneIKSolver_bone1Out;

  // retrieving value for controls_Rleg_leg_R_endlimb_cmpOutOut from solver leg_R_RlegIKFKTwoBoneIKSolver
  this.controls_Rleg_leg_R_endlimb_cmpOutOut.globalXfo = leg_R_RlegIKFKTwoBoneIKSolver_bone2Out;

  // solving PoseConstraint constraint controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint
  this.controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers[0] = this.controls_Rleg_leg_R_endlimb_cmpOutOut.globalXfo;
  this.controls_Rfoot_foot_R_parentSpace_cmpInIn.globalXfo = this.controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.compute(this.controls_Rfoot_foot_R_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_Rfoot_foot_R_outputs_hrc
  this.controls_Rfoot_foot_R_outputs_hrc.globalXfo = this.controls_Rfoot_foot_R_foot_cmp.globalXfo * this.controls_Rfoot_foot_R_outputs_hrc.xfo;

  // solving KLSolver foot_R_MfootIKFootBlendKLOp
  Boolean foot_R_MfootIKFootBlendKLOp_drawDebug = this.controls_foot_R_inputs_inputs_drawDebug.value;
  Scalar foot_R_MfootIKFootBlendKLOp_rigScale = this.controls_foot_R_inputs_inputs_rigScale.value;
  Scalar foot_R_MfootIKFootBlendKLOp_blend = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK.value;
  Mat44 foot_R_MfootIKFootBlendKLOp_ikFoot = this.controls_Rfoot_R_footRockerFoot_out_xfo.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint
  this.controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Rfoot_foot_R_parentSpace_cmpInIn.globalXfo;
  this.controls_Rfoot_foot_R_foot02_spaceSpace.globalXfo = this.controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint.compute(this.controls_Rfoot_foot_R_foot02_spaceSpace.globalXfo);

  // solving parent child constraint controls_Rfoot_R_foot_fk
  this.controls_Rfoot_R_foot_fk.globalXfo = this.controls_Rfoot_foot_R_foot02_spaceSpace.globalXfo * this.controls_Rfoot_R_foot_fk.xfo;
  Mat44 foot_R_MfootIKFootBlendKLOp_fkFoot = this.controls_Rfoot_R_foot_fk.globalXfo.toMat44();
  Mat44 foot_R_MfootIKFootBlendKLOp_ikBall = this.controls_Rfoot_R_footRockerBall_out_xfo.globalXfo.toMat44();

  // solving parent child constraint controls_Rfoot_foot_R_ball01_spaceSpace
  this.controls_Rfoot_foot_R_ball01_spaceSpace.globalXfo = this.controls_Rfoot_R_foot_fk.globalXfo * this.controls_Rfoot_foot_R_ball01_spaceSpace.xfo;

  // solving parent child constraint controls_Rfoot_R_ball_fk
  this.controls_Rfoot_R_ball_fk.globalXfo = this.controls_Rfoot_foot_R_ball01_spaceSpace.globalXfo * this.controls_Rfoot_R_ball_fk.xfo;
  Mat44 foot_R_MfootIKFootBlendKLOp_fkBall = this.controls_Rfoot_R_ball_fk.globalXfo.toMat44();
  Mat44 foot_R_MfootIKFootBlendKLOp_foot;
  Mat44 foot_R_MfootIKFootBlendKLOp_ball;
  this.foot_R_MfootIKFootBlendKLOp.solve(
    foot_R_MfootIKFootBlendKLOp_drawDebug,
    foot_R_MfootIKFootBlendKLOp_rigScale,
    foot_R_MfootIKFootBlendKLOp_blend,
    foot_R_MfootIKFootBlendKLOp_ikFoot,
    foot_R_MfootIKFootBlendKLOp_fkFoot,
    foot_R_MfootIKFootBlendKLOp_ikBall,
    foot_R_MfootIKFootBlendKLOp_fkBall,
    foot_R_MfootIKFootBlendKLOp_foot,
    foot_R_MfootIKFootBlendKLOp_ball
  );

  // retrieving value for controls_Rfoot_R_IKFootBlendKLOpFoot_out_xfo from solver foot_R_MfootIKFootBlendKLOp
  this.controls_Rfoot_R_IKFootBlendKLOpFoot_out_xfo.globalXfo = foot_R_MfootIKFootBlendKLOp_foot;

  // retrieving value for controls_Rfoot_R_IKFootBlendKLOpBall_out_xfo from solver foot_R_MfootIKFootBlendKLOp
  this.controls_Rfoot_R_IKFootBlendKLOpBall_out_xfo.globalXfo = foot_R_MfootIKFootBlendKLOp_ball;

  // solving PoseConstraint constraint controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint
  this.controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.constrainers[0] = this.controls_Rfoot_R_IKFootBlendKLOpFoot_out_xfo.globalXfo;
  this.controls_Rfoot_foot_R_foot_cmpOutOut.globalXfo = this.controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.compute(this.controls_Rfoot_foot_R_foot_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint
  this.controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.constrainers[0] = this.controls_Rfoot_R_IKFootBlendKLOpBall_out_xfo.globalXfo;
  this.controls_Rfoot_foot_R_ball_cmpOutOut.globalXfo = this.controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.compute(this.controls_Rfoot_foot_R_ball_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_Rfoot_foot_R_foot_cmp
  this.deformers_Rfoot_foot_R_foot_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Rfoot_foot_R_foot_cmp.xfo;

  // solving KLSolver foot_R_MfootDeformerJointsKLOp
  Boolean foot_R_MfootDeformerJointsKLOp_drawDebug = this.controls_foot_R_inputs_inputs_drawDebug.value;
  Scalar foot_R_MfootDeformerJointsKLOp_rigScale = this.controls_foot_R_inputs_inputs_rigScale.value;
  Mat44 foot_R_MfootDeformerJointsKLOp_constrainers[](2);
  foot_R_MfootDeformerJointsKLOp_constrainers[0] = this.controls_Rfoot_foot_R_foot_cmpOutOut.globalXfo.toMat44();
  foot_R_MfootDeformerJointsKLOp_constrainers[1] = this.controls_Rfoot_foot_R_ball_cmpOutOut.globalXfo.toMat44();
  Mat44 foot_R_MfootDeformerJointsKLOp_constrainees[](2);
  this.foot_R_MfootDeformerJointsKLOp.solve(
    foot_R_MfootDeformerJointsKLOp_drawDebug,
    foot_R_MfootDeformerJointsKLOp_rigScale,
    foot_R_MfootDeformerJointsKLOp_constrainers,
    foot_R_MfootDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rfoot_foot_R_foot_def from solver foot_R_MfootDeformerJointsKLOp
  this.deformers_Rfoot_foot_R_foot_def.globalXfo = foot_R_MfootDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rfoot_foot_R_ball_def from solver foot_R_MfootDeformerJointsKLOp
  this.deformers_Rfoot_foot_R_ball_def.globalXfo = foot_R_MfootDeformerJointsKLOp_constrainees[1];

  // solving parent child constraint controls_Rleg_leg_R_leg_cmp
  this.controls_Rleg_leg_R_leg_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Rleg_leg_R_leg_cmp.xfo;

  // solving parent child constraint controls_Rleg_leg_R_inputs_hrc
  this.controls_Rleg_leg_R_inputs_hrc.globalXfo = this.controls_Rleg_leg_R_leg_cmp.globalXfo * this.controls_Rleg_leg_R_inputs_hrc.xfo;

  // solving parent child constraint controls_Rleg_leg_R_outputs_hrc
  this.controls_Rleg_leg_R_outputs_hrc.globalXfo = this.controls_Rleg_leg_R_leg_cmp.globalXfo * this.controls_Rleg_leg_R_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint
  this.controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Rleg_leg_R_globalSRT_cmpInIn.globalXfo;
  this.controls_Rleg_leg_R_footIK_spaceSpace.globalXfo = this.controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint.compute(this.controls_Rleg_leg_R_footIK_spaceSpace.globalXfo);

  // solving parent child constraint deformers_Rleg_leg_R_leg_cmp
  this.deformers_Rleg_leg_R_leg_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Rleg_leg_R_leg_cmp.xfo;

  // solving KLSolver leg_R_RlegDeformerJointsKLOp
  Boolean leg_R_RlegDeformerJointsKLOp_drawDebug = this.controls_leg_R_inputs_inputs_drawDebug.value;
  Scalar leg_R_RlegDeformerJointsKLOp_rigScale = this.controls_leg_R_inputs_inputs_rigScale.value;
  Mat44 leg_R_RlegDeformerJointsKLOp_constrainers[](3);
  leg_R_RlegDeformerJointsKLOp_constrainers[0] = this.controls_Rleg_leg_R_uplimb_cmpOutOut.globalXfo.toMat44();
  leg_R_RlegDeformerJointsKLOp_constrainers[1] = this.controls_Rleg_leg_R_lolimb_cmpOutOut.globalXfo.toMat44();
  leg_R_RlegDeformerJointsKLOp_constrainers[2] = this.controls_Rleg_leg_R_endlimb_cmpOutOut.globalXfo.toMat44();
  Mat44 leg_R_RlegDeformerJointsKLOp_constrainees[](3);
  this.leg_R_RlegDeformerJointsKLOp.solve(
    leg_R_RlegDeformerJointsKLOp_drawDebug,
    leg_R_RlegDeformerJointsKLOp_rigScale,
    leg_R_RlegDeformerJointsKLOp_constrainers,
    leg_R_RlegDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rleg_leg_R_upLeg_def from solver leg_R_RlegDeformerJointsKLOp
  this.deformers_Rleg_leg_R_upLeg_def.globalXfo = leg_R_RlegDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rleg_leg_R_loLeg_def from solver leg_R_RlegDeformerJointsKLOp
  this.deformers_Rleg_leg_R_loLeg_def.globalXfo = leg_R_RlegDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Rleg_leg_R_legend_def from solver leg_R_RlegDeformerJointsKLOp
  this.deformers_Rleg_leg_R_legend_def.globalXfo = leg_R_RlegDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_Rarm_arm_R_arm_cmp
  this.controls_Rarm_arm_R_arm_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Rarm_arm_R_arm_cmp.xfo;

  // solving parent child constraint controls_Rarm_arm_R_inputs_hrc
  this.controls_Rarm_arm_R_inputs_hrc.globalXfo = this.controls_Rarm_arm_R_arm_cmp.globalXfo * this.controls_Rarm_arm_R_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_Rarm_arm_R_globalSRT_cmpInIn.globalXfo = this.controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_Rarm_arm_R_globalSRT_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint
  this.controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.constrainers[0] = this.controls_Rshoulder_shoulder_R_shldrEnd_cmpOutOut.globalXfo;
  this.controls_Rarm_arm_R_parentSpace_cmpInIn.globalXfo = this.controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.compute(this.controls_Rarm_arm_R_parentSpace_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_Rhand_hand_R_globalSRT_cmpInIn.globalXfo = this.controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_Rhand_hand_R_globalSRT_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint
  this.controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Rhand_hand_R_globalSRT_cmpInIn.globalXfo;
  this.controls_Rhand_hand_R_hand01_spaceSpace.globalXfo = this.controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint.compute(this.controls_Rhand_hand_R_hand01_spaceSpace.globalXfo);

  // solving parent child constraint controls_Rhand_R_hand_ik
  this.controls_Rhand_R_hand_ik.globalXfo = this.controls_Rhand_hand_R_hand01_spaceSpace.globalXfo * this.controls_Rhand_R_hand_ik.xfo;

  // solving PoseConstraint constraint controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint
  this.controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.constrainers[0] = this.controls_Rhand_R_hand_ik.globalXfo;
  this.controls_Rhand_hand_R_ikgoal_cmpOutOut.globalXfo = this.controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.compute(this.controls_Rhand_hand_R_ikgoal_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint
  this.controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers[0] = this.controls_Rhand_hand_R_ikgoal_cmpOutOut.globalXfo;
  this.controls_Rarm_arm_R_ikGoalInput_cmpInIn.globalXfo = this.controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.compute(this.controls_Rarm_arm_R_ikGoalInput_cmpInIn.globalXfo);

  // solving parent child constraint controls_Rarm_arm_R_outputs_hrc
  this.controls_Rarm_arm_R_outputs_hrc.globalXfo = this.controls_Rarm_arm_R_arm_cmp.globalXfo * this.controls_Rarm_arm_R_outputs_hrc.xfo;

  // solving KLSolver arm_R_RarmIKFKTwoBoneIKSolver
  Boolean arm_R_RarmIKFKTwoBoneIKSolver_drawDebug = this.controls_arm_R_inputs_inputs_drawDebug.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_rigScale = this.controls_arm_R_inputs_inputs_rigScale.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_ikBlend = this.controls_arm_R_inputs_inputs_ikBlend.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_softDist = this.controls_arm_R_inputs_inputs_softDist.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_stretch = this.controls_arm_R_inputs_inputs_stretch.value;

  // solving PoseConstraint constraint controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint
  this.controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Rarm_arm_R_parentSpace_cmpInIn.globalXfo;
  this.controls_Rarm_arm_R_upArm01_spaceSpace.globalXfo = this.controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint.compute(this.controls_Rarm_arm_R_upArm01_spaceSpace.globalXfo);
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_root = this.controls_Rarm_arm_R_upArm01_spaceSpace.globalXfo.toMat44();

  // solving parent child constraint controls_Rarm_R_upArm_fk
  this.controls_Rarm_R_upArm_fk.globalXfo = this.controls_Rarm_arm_R_upArm01_spaceSpace.globalXfo * this.controls_Rarm_R_upArm_fk.xfo;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone0FK = this.controls_Rarm_R_upArm_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Rarm_arm_R_loArm01_spaceSpace
  this.controls_Rarm_arm_R_loArm01_spaceSpace.globalXfo = this.controls_Rarm_R_upArm_fk.globalXfo * this.controls_Rarm_arm_R_loArm01_spaceSpace.xfo;

  // solving parent child constraint controls_Rarm_R_loArm_fk
  this.controls_Rarm_R_loArm_fk.globalXfo = this.controls_Rarm_arm_R_loArm01_spaceSpace.globalXfo * this.controls_Rarm_R_loArm_fk.xfo;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone1FK = this.controls_Rarm_R_loArm_fk.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint
  this.controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_Rarm_arm_R_ikGoalInput_cmpInIn.globalXfo;
  this.controls_Rarm_R_handIK_xfo.globalXfo = this.controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.compute(this.controls_Rarm_R_handIK_xfo.globalXfo);
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_ikHandle = this.controls_Rarm_R_handIK_xfo.globalXfo.toMat44();

  // solving KLSolver arm_R_RarmUpVSpace_HierBlendSolver
  Boolean arm_R_RarmUpVSpace_HierBlendSolver_drawDebug = this.controls_arm_R_inputs_inputs_drawDebug.value;
  Scalar arm_R_RarmUpVSpace_HierBlendSolver_rigScale = this.controls_arm_R_inputs_inputs_rigScale.value;
  Mat44 arm_R_RarmUpVSpace_HierBlendSolver_hierA[](1);

  // solving PoseConstraint constraint controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint
  this.controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Rarm_arm_R_globalSRT_cmpInIn.globalXfo;
  this.controls_Rarm_arm_R_armIKMaster_spaceSpace.globalXfo = this.controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.compute(this.controls_Rarm_arm_R_armIKMaster_spaceSpace.globalXfo);
  arm_R_RarmUpVSpace_HierBlendSolver_hierA[0] = this.controls_Rarm_arm_R_armIKMaster_spaceSpace.globalXfo.toMat44();
  Mat44 arm_R_RarmUpVSpace_HierBlendSolver_hierB[](1);

  // solving PoseConstraint constraint controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint
  this.controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_Rarm_arm_R_ikGoalInput_cmpInIn.globalXfo;
  this.controls_Rarm_arm_R_armUpVIK_spaceSpace.globalXfo = this.controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.compute(this.controls_Rarm_arm_R_armUpVIK_spaceSpace.globalXfo);
  arm_R_RarmUpVSpace_HierBlendSolver_hierB[0] = this.controls_Rarm_arm_R_armUpVIK_spaceSpace.globalXfo.toMat44();
  Integer arm_R_RarmUpVSpace_HierBlendSolver_parentIndexes[](1);
  arm_R_RarmUpVSpace_HierBlendSolver_parentIndexes[0] = -1;
  Scalar arm_R_RarmUpVSpace_HierBlendSolver_blend = this.controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace.value;
  Mat44 arm_R_RarmUpVSpace_HierBlendSolver_hierOut[](1);
  this.arm_R_RarmUpVSpace_HierBlendSolver.solve(
    arm_R_RarmUpVSpace_HierBlendSolver_drawDebug,
    arm_R_RarmUpVSpace_HierBlendSolver_rigScale,
    arm_R_RarmUpVSpace_HierBlendSolver_hierA,
    arm_R_RarmUpVSpace_HierBlendSolver_hierB,
    arm_R_RarmUpVSpace_HierBlendSolver_parentIndexes,
    arm_R_RarmUpVSpace_HierBlendSolver_blend,
    arm_R_RarmUpVSpace_HierBlendSolver_hierOut
  );

  // retrieving value for controls_Rarm_arm_R_armUpV01_spaceSpace from solver arm_R_RarmUpVSpace_HierBlendSolver
  this.controls_Rarm_arm_R_armUpV01_spaceSpace.globalXfo = arm_R_RarmUpVSpace_HierBlendSolver_hierOut[0];

  // solving parent child constraint controls_Rarm_R_armUpV_an
  this.controls_Rarm_R_armUpV_an.globalXfo = this.controls_Rarm_arm_R_armUpV01_spaceSpace.globalXfo * this.controls_Rarm_R_armUpV_an.xfo;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_upV = this.controls_Rarm_R_armUpV_an.globalXfo.toMat44();
  UInt32 arm_R_RarmIKFKTwoBoneIKSolver_boneAxis = 3;
  UInt32 arm_R_RarmIKFKTwoBoneIKSolver_upAxis = 5;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_bone0Len = this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_bone1Len = this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone0Out;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone1Out;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone2Out;
  this.arm_R_RarmIKFKTwoBoneIKSolver.solve(
    arm_R_RarmIKFKTwoBoneIKSolver_drawDebug,
    arm_R_RarmIKFKTwoBoneIKSolver_rigScale,
    arm_R_RarmIKFKTwoBoneIKSolver_ikBlend,
    arm_R_RarmIKFKTwoBoneIKSolver_softDist,
    arm_R_RarmIKFKTwoBoneIKSolver_stretch,
    arm_R_RarmIKFKTwoBoneIKSolver_root,
    arm_R_RarmIKFKTwoBoneIKSolver_bone0FK,
    arm_R_RarmIKFKTwoBoneIKSolver_bone1FK,
    arm_R_RarmIKFKTwoBoneIKSolver_ikHandle,
    arm_R_RarmIKFKTwoBoneIKSolver_upV,
    arm_R_RarmIKFKTwoBoneIKSolver_boneAxis,
    arm_R_RarmIKFKTwoBoneIKSolver_upAxis,
    arm_R_RarmIKFKTwoBoneIKSolver_bone0Len,
    arm_R_RarmIKFKTwoBoneIKSolver_bone1Len,
    arm_R_RarmIKFKTwoBoneIKSolver_bone0Out,
    arm_R_RarmIKFKTwoBoneIKSolver_bone1Out,
    arm_R_RarmIKFKTwoBoneIKSolver_bone2Out
  );

  // retrieving value for controls_Rarm_arm_R_uplimb_cmpOutOut from solver arm_R_RarmIKFKTwoBoneIKSolver
  this.controls_Rarm_arm_R_uplimb_cmpOutOut.globalXfo = arm_R_RarmIKFKTwoBoneIKSolver_bone0Out;

  // retrieving value for controls_Rarm_arm_R_lolimb_cmpOutOut from solver arm_R_RarmIKFKTwoBoneIKSolver
  this.controls_Rarm_arm_R_lolimb_cmpOutOut.globalXfo = arm_R_RarmIKFKTwoBoneIKSolver_bone1Out;

  // retrieving value for controls_Rarm_arm_R_endlimb_cmpOutOut from solver arm_R_RarmIKFKTwoBoneIKSolver
  this.controls_Rarm_arm_R_endlimb_cmpOutOut.globalXfo = arm_R_RarmIKFKTwoBoneIKSolver_bone2Out;

  // solving PoseConstraint constraint controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint
  this.controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Rarm_arm_R_globalSRT_cmpInIn.globalXfo;
  this.controls_Rarm_arm_R_handIK_spaceSpace.globalXfo = this.controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint.compute(this.controls_Rarm_arm_R_handIK_spaceSpace.globalXfo);

  // solving parent child constraint deformers_Rarm_arm_R_arm_cmp
  this.deformers_Rarm_arm_R_arm_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Rarm_arm_R_arm_cmp.xfo;

  // solving KLSolver arm_R_RarmDeformerJointsKLOp
  Boolean arm_R_RarmDeformerJointsKLOp_drawDebug = this.controls_arm_R_inputs_inputs_drawDebug.value;
  Scalar arm_R_RarmDeformerJointsKLOp_rigScale = this.controls_arm_R_inputs_inputs_rigScale.value;
  Mat44 arm_R_RarmDeformerJointsKLOp_constrainers[](3);
  arm_R_RarmDeformerJointsKLOp_constrainers[0] = this.controls_Rarm_arm_R_uplimb_cmpOutOut.globalXfo.toMat44();
  arm_R_RarmDeformerJointsKLOp_constrainers[1] = this.controls_Rarm_arm_R_lolimb_cmpOutOut.globalXfo.toMat44();
  arm_R_RarmDeformerJointsKLOp_constrainers[2] = this.controls_Rarm_arm_R_endlimb_cmpOutOut.globalXfo.toMat44();
  Mat44 arm_R_RarmDeformerJointsKLOp_constrainees[](3);
  this.arm_R_RarmDeformerJointsKLOp.solve(
    arm_R_RarmDeformerJointsKLOp_drawDebug,
    arm_R_RarmDeformerJointsKLOp_rigScale,
    arm_R_RarmDeformerJointsKLOp_constrainers,
    arm_R_RarmDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rarm_arm_R_upArm_def from solver arm_R_RarmDeformerJointsKLOp
  this.deformers_Rarm_arm_R_upArm_def.globalXfo = arm_R_RarmDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rarm_arm_R_loArm_def from solver arm_R_RarmDeformerJointsKLOp
  this.deformers_Rarm_arm_R_loArm_def.globalXfo = arm_R_RarmDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Rarm_arm_R_armend_def from solver arm_R_RarmDeformerJointsKLOp
  this.deformers_Rarm_arm_R_armend_def.globalXfo = arm_R_RarmDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_Larm_arm_L_arm_cmp
  this.controls_Larm_arm_L_arm_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Larm_arm_L_arm_cmp.xfo;

  // solving parent child constraint controls_Larm_arm_L_inputs_hrc
  this.controls_Larm_arm_L_inputs_hrc.globalXfo = this.controls_Larm_arm_L_arm_cmp.globalXfo * this.controls_Larm_arm_L_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_Larm_arm_L_globalSRT_cmpInIn.globalXfo = this.controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_Larm_arm_L_globalSRT_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint
  this.controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.constrainers[0] = this.controls_Lshoulder_shoulder_L_shldrEnd_cmpOutOut.globalXfo;
  this.controls_Larm_arm_L_parentSpace_cmpInIn.globalXfo = this.controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.compute(this.controls_Larm_arm_L_parentSpace_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_Lhand_hand_L_globalSRT_cmpInIn.globalXfo = this.controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_Lhand_hand_L_globalSRT_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint
  this.controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Lhand_hand_L_globalSRT_cmpInIn.globalXfo;
  this.controls_Lhand_hand_L_hand01_spaceSpace.globalXfo = this.controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint.compute(this.controls_Lhand_hand_L_hand01_spaceSpace.globalXfo);

  // solving parent child constraint controls_Lhand_L_hand_ik
  this.controls_Lhand_L_hand_ik.globalXfo = this.controls_Lhand_hand_L_hand01_spaceSpace.globalXfo * this.controls_Lhand_L_hand_ik.xfo;

  // solving PoseConstraint constraint controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint
  this.controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.constrainers[0] = this.controls_Lhand_L_hand_ik.globalXfo;
  this.controls_Lhand_hand_L_ikgoal_cmpOutOut.globalXfo = this.controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.compute(this.controls_Lhand_hand_L_ikgoal_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint
  this.controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers[0] = this.controls_Lhand_hand_L_ikgoal_cmpOutOut.globalXfo;
  this.controls_Larm_arm_L_ikGoalInput_cmpInIn.globalXfo = this.controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.compute(this.controls_Larm_arm_L_ikGoalInput_cmpInIn.globalXfo);

  // solving parent child constraint controls_Larm_arm_L_outputs_hrc
  this.controls_Larm_arm_L_outputs_hrc.globalXfo = this.controls_Larm_arm_L_arm_cmp.globalXfo * this.controls_Larm_arm_L_outputs_hrc.xfo;

  // solving KLSolver arm_L_LarmIKFKTwoBoneIKSolver
  Boolean arm_L_LarmIKFKTwoBoneIKSolver_drawDebug = this.controls_arm_L_inputs_inputs_drawDebug.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_rigScale = this.controls_arm_L_inputs_inputs_rigScale.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_ikBlend = this.controls_arm_L_inputs_inputs_ikBlend.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_softDist = this.controls_arm_L_inputs_inputs_softDist.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_stretch = this.controls_arm_L_inputs_inputs_stretch.value;

  // solving PoseConstraint constraint controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint
  this.controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Larm_arm_L_parentSpace_cmpInIn.globalXfo;
  this.controls_Larm_arm_L_upArm01_spaceSpace.globalXfo = this.controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint.compute(this.controls_Larm_arm_L_upArm01_spaceSpace.globalXfo);
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_root = this.controls_Larm_arm_L_upArm01_spaceSpace.globalXfo.toMat44();

  // solving parent child constraint controls_Larm_L_upArm_fk
  this.controls_Larm_L_upArm_fk.globalXfo = this.controls_Larm_arm_L_upArm01_spaceSpace.globalXfo * this.controls_Larm_L_upArm_fk.xfo;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone0FK = this.controls_Larm_L_upArm_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Larm_arm_L_loArm01_spaceSpace
  this.controls_Larm_arm_L_loArm01_spaceSpace.globalXfo = this.controls_Larm_L_upArm_fk.globalXfo * this.controls_Larm_arm_L_loArm01_spaceSpace.xfo;

  // solving parent child constraint controls_Larm_L_loArm_fk
  this.controls_Larm_L_loArm_fk.globalXfo = this.controls_Larm_arm_L_loArm01_spaceSpace.globalXfo * this.controls_Larm_L_loArm_fk.xfo;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone1FK = this.controls_Larm_L_loArm_fk.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint
  this.controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_Larm_arm_L_ikGoalInput_cmpInIn.globalXfo;
  this.controls_Larm_L_handIK_xfo.globalXfo = this.controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.compute(this.controls_Larm_L_handIK_xfo.globalXfo);
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_ikHandle = this.controls_Larm_L_handIK_xfo.globalXfo.toMat44();

  // solving KLSolver arm_L_LarmUpVSpace_HierBlendSolver
  Boolean arm_L_LarmUpVSpace_HierBlendSolver_drawDebug = this.controls_arm_L_inputs_inputs_drawDebug.value;
  Scalar arm_L_LarmUpVSpace_HierBlendSolver_rigScale = this.controls_arm_L_inputs_inputs_rigScale.value;
  Mat44 arm_L_LarmUpVSpace_HierBlendSolver_hierA[](1);

  // solving PoseConstraint constraint controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint
  this.controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Larm_arm_L_globalSRT_cmpInIn.globalXfo;
  this.controls_Larm_arm_L_armIKMaster_spaceSpace.globalXfo = this.controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.compute(this.controls_Larm_arm_L_armIKMaster_spaceSpace.globalXfo);
  arm_L_LarmUpVSpace_HierBlendSolver_hierA[0] = this.controls_Larm_arm_L_armIKMaster_spaceSpace.globalXfo.toMat44();
  Mat44 arm_L_LarmUpVSpace_HierBlendSolver_hierB[](1);

  // solving PoseConstraint constraint controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint
  this.controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_Larm_arm_L_ikGoalInput_cmpInIn.globalXfo;
  this.controls_Larm_arm_L_armUpVIK_spaceSpace.globalXfo = this.controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.compute(this.controls_Larm_arm_L_armUpVIK_spaceSpace.globalXfo);
  arm_L_LarmUpVSpace_HierBlendSolver_hierB[0] = this.controls_Larm_arm_L_armUpVIK_spaceSpace.globalXfo.toMat44();
  Integer arm_L_LarmUpVSpace_HierBlendSolver_parentIndexes[](1);
  arm_L_LarmUpVSpace_HierBlendSolver_parentIndexes[0] = -1;
  Scalar arm_L_LarmUpVSpace_HierBlendSolver_blend = this.controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace.value;
  Mat44 arm_L_LarmUpVSpace_HierBlendSolver_hierOut[](1);
  this.arm_L_LarmUpVSpace_HierBlendSolver.solve(
    arm_L_LarmUpVSpace_HierBlendSolver_drawDebug,
    arm_L_LarmUpVSpace_HierBlendSolver_rigScale,
    arm_L_LarmUpVSpace_HierBlendSolver_hierA,
    arm_L_LarmUpVSpace_HierBlendSolver_hierB,
    arm_L_LarmUpVSpace_HierBlendSolver_parentIndexes,
    arm_L_LarmUpVSpace_HierBlendSolver_blend,
    arm_L_LarmUpVSpace_HierBlendSolver_hierOut
  );

  // retrieving value for controls_Larm_arm_L_armUpV01_spaceSpace from solver arm_L_LarmUpVSpace_HierBlendSolver
  this.controls_Larm_arm_L_armUpV01_spaceSpace.globalXfo = arm_L_LarmUpVSpace_HierBlendSolver_hierOut[0];

  // solving parent child constraint controls_Larm_L_armUpV_an
  this.controls_Larm_L_armUpV_an.globalXfo = this.controls_Larm_arm_L_armUpV01_spaceSpace.globalXfo * this.controls_Larm_L_armUpV_an.xfo;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_upV = this.controls_Larm_L_armUpV_an.globalXfo.toMat44();
  UInt32 arm_L_LarmIKFKTwoBoneIKSolver_boneAxis = 0;
  UInt32 arm_L_LarmIKFKTwoBoneIKSolver_upAxis = 2;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_bone0Len = this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_bone1Len = this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone0Out;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone1Out;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone2Out;
  this.arm_L_LarmIKFKTwoBoneIKSolver.solve(
    arm_L_LarmIKFKTwoBoneIKSolver_drawDebug,
    arm_L_LarmIKFKTwoBoneIKSolver_rigScale,
    arm_L_LarmIKFKTwoBoneIKSolver_ikBlend,
    arm_L_LarmIKFKTwoBoneIKSolver_softDist,
    arm_L_LarmIKFKTwoBoneIKSolver_stretch,
    arm_L_LarmIKFKTwoBoneIKSolver_root,
    arm_L_LarmIKFKTwoBoneIKSolver_bone0FK,
    arm_L_LarmIKFKTwoBoneIKSolver_bone1FK,
    arm_L_LarmIKFKTwoBoneIKSolver_ikHandle,
    arm_L_LarmIKFKTwoBoneIKSolver_upV,
    arm_L_LarmIKFKTwoBoneIKSolver_boneAxis,
    arm_L_LarmIKFKTwoBoneIKSolver_upAxis,
    arm_L_LarmIKFKTwoBoneIKSolver_bone0Len,
    arm_L_LarmIKFKTwoBoneIKSolver_bone1Len,
    arm_L_LarmIKFKTwoBoneIKSolver_bone0Out,
    arm_L_LarmIKFKTwoBoneIKSolver_bone1Out,
    arm_L_LarmIKFKTwoBoneIKSolver_bone2Out
  );

  // retrieving value for controls_Larm_arm_L_uplimb_cmpOutOut from solver arm_L_LarmIKFKTwoBoneIKSolver
  this.controls_Larm_arm_L_uplimb_cmpOutOut.globalXfo = arm_L_LarmIKFKTwoBoneIKSolver_bone0Out;

  // retrieving value for controls_Larm_arm_L_lolimb_cmpOutOut from solver arm_L_LarmIKFKTwoBoneIKSolver
  this.controls_Larm_arm_L_lolimb_cmpOutOut.globalXfo = arm_L_LarmIKFKTwoBoneIKSolver_bone1Out;

  // retrieving value for controls_Larm_arm_L_endlimb_cmpOutOut from solver arm_L_LarmIKFKTwoBoneIKSolver
  this.controls_Larm_arm_L_endlimb_cmpOutOut.globalXfo = arm_L_LarmIKFKTwoBoneIKSolver_bone2Out;

  // solving PoseConstraint constraint controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint
  this.controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_Larm_arm_L_globalSRT_cmpInIn.globalXfo;
  this.controls_Larm_arm_L_handIK_spaceSpace.globalXfo = this.controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint.compute(this.controls_Larm_arm_L_handIK_spaceSpace.globalXfo);

  // solving parent child constraint deformers_Larm_arm_L_arm_cmp
  this.deformers_Larm_arm_L_arm_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Larm_arm_L_arm_cmp.xfo;

  // solving KLSolver arm_L_LarmDeformerJointsKLOp
  Boolean arm_L_LarmDeformerJointsKLOp_drawDebug = this.controls_arm_L_inputs_inputs_drawDebug.value;
  Scalar arm_L_LarmDeformerJointsKLOp_rigScale = this.controls_arm_L_inputs_inputs_rigScale.value;
  Mat44 arm_L_LarmDeformerJointsKLOp_constrainers[](3);
  arm_L_LarmDeformerJointsKLOp_constrainers[0] = this.controls_Larm_arm_L_uplimb_cmpOutOut.globalXfo.toMat44();
  arm_L_LarmDeformerJointsKLOp_constrainers[1] = this.controls_Larm_arm_L_lolimb_cmpOutOut.globalXfo.toMat44();
  arm_L_LarmDeformerJointsKLOp_constrainers[2] = this.controls_Larm_arm_L_endlimb_cmpOutOut.globalXfo.toMat44();
  Mat44 arm_L_LarmDeformerJointsKLOp_constrainees[](3);
  this.arm_L_LarmDeformerJointsKLOp.solve(
    arm_L_LarmDeformerJointsKLOp_drawDebug,
    arm_L_LarmDeformerJointsKLOp_rigScale,
    arm_L_LarmDeformerJointsKLOp_constrainers,
    arm_L_LarmDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Larm_arm_L_upArm_def from solver arm_L_LarmDeformerJointsKLOp
  this.deformers_Larm_arm_L_upArm_def.globalXfo = arm_L_LarmDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Larm_arm_L_loArm_def from solver arm_L_LarmDeformerJointsKLOp
  this.deformers_Larm_arm_L_loArm_def.globalXfo = arm_L_LarmDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Larm_arm_L_armend_def from solver arm_L_LarmDeformerJointsKLOp
  this.deformers_Larm_arm_L_armend_def.globalXfo = arm_L_LarmDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_Lhand_hand_L_hand_cmp
  this.controls_Lhand_hand_L_hand_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Lhand_hand_L_hand_cmp.xfo;

  // solving parent child constraint controls_Lhand_hand_L_inputs_hrc
  this.controls_Lhand_hand_L_inputs_hrc.globalXfo = this.controls_Lhand_hand_L_hand_cmp.globalXfo * this.controls_Lhand_hand_L_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint
  this.controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers[0] = this.controls_Larm_arm_L_endlimb_cmpOutOut.globalXfo;
  this.controls_Lhand_hand_L_parentSpace_cmpInIn.globalXfo = this.controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.compute(this.controls_Lhand_hand_L_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_Lhand_hand_L_outputs_hrc
  this.controls_Lhand_hand_L_outputs_hrc.globalXfo = this.controls_Lhand_hand_L_hand_cmp.globalXfo * this.controls_Lhand_hand_L_outputs_hrc.xfo;

  // solving KLSolver hand_L_MhandIKHandBlendKLOp
  Boolean hand_L_MhandIKHandBlendKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_MhandIKHandBlendKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Scalar hand_L_MhandIKHandBlendKLOp_blend = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK.value;

  // solving parent child constraint controls_Lhand_hand_L_handIK_spaceSpace
  this.controls_Lhand_hand_L_handIK_spaceSpace.globalXfo = this.controls_Lhand_L_hand_ik.globalXfo * this.controls_Lhand_hand_L_handIK_spaceSpace.xfo;
  Mat44 hand_L_MhandIKHandBlendKLOp_ikFoot = this.controls_Lhand_hand_L_handIK_spaceSpace.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint
  this.controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Lhand_hand_L_parentSpace_cmpInIn.globalXfo;
  this.controls_Lhand_hand_L_hand02_spaceSpace.globalXfo = this.controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint.compute(this.controls_Lhand_hand_L_hand02_spaceSpace.globalXfo);

  // solving parent child constraint controls_Lhand_L_hand_fk
  this.controls_Lhand_L_hand_fk.globalXfo = this.controls_Lhand_hand_L_hand02_spaceSpace.globalXfo * this.controls_Lhand_L_hand_fk.xfo;
  Mat44 hand_L_MhandIKHandBlendKLOp_fkFoot = this.controls_Lhand_L_hand_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Lhand_hand_L_palmIK_spaceSpace
  this.controls_Lhand_hand_L_palmIK_spaceSpace.globalXfo = this.controls_Lhand_hand_L_handIK_spaceSpace.globalXfo * this.controls_Lhand_hand_L_palmIK_spaceSpace.xfo;
  Mat44 hand_L_MhandIKHandBlendKLOp_ikBall = this.controls_Lhand_hand_L_palmIK_spaceSpace.globalXfo.toMat44();

  // solving parent child constraint controls_Lhand_hand_L_palm01_spaceSpace
  this.controls_Lhand_hand_L_palm01_spaceSpace.globalXfo = this.controls_Lhand_L_hand_fk.globalXfo * this.controls_Lhand_hand_L_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_palm_fk
  this.controls_Lhand_L_palm_fk.globalXfo = this.controls_Lhand_hand_L_palm01_spaceSpace.globalXfo * this.controls_Lhand_L_palm_fk.xfo;
  Mat44 hand_L_MhandIKHandBlendKLOp_fkBall = this.controls_Lhand_L_palm_fk.globalXfo.toMat44();
  Mat44 hand_L_MhandIKHandBlendKLOp_foot;
  Mat44 hand_L_MhandIKHandBlendKLOp_ball;
  this.hand_L_MhandIKHandBlendKLOp.solve(
    hand_L_MhandIKHandBlendKLOp_drawDebug,
    hand_L_MhandIKHandBlendKLOp_rigScale,
    hand_L_MhandIKHandBlendKLOp_blend,
    hand_L_MhandIKHandBlendKLOp_ikFoot,
    hand_L_MhandIKHandBlendKLOp_fkFoot,
    hand_L_MhandIKHandBlendKLOp_ikBall,
    hand_L_MhandIKHandBlendKLOp_fkBall,
    hand_L_MhandIKHandBlendKLOp_foot,
    hand_L_MhandIKHandBlendKLOp_ball
  );

  // retrieving value for controls_Lhand_L_IKHandBlendKLOpHand_out_xfo from solver hand_L_MhandIKHandBlendKLOp
  this.controls_Lhand_L_IKHandBlendKLOpHand_out_xfo.globalXfo = hand_L_MhandIKHandBlendKLOp_foot;

  // retrieving value for controls_Lhand_L_IKHandBlendKLOpPalm_out_xfo from solver hand_L_MhandIKHandBlendKLOp
  this.controls_Lhand_L_IKHandBlendKLOpPalm_out_xfo.globalXfo = hand_L_MhandIKHandBlendKLOp_ball;

  // solving PoseConstraint constraint controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint
  this.controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.constrainers[0] = this.controls_Lhand_L_IKHandBlendKLOpHand_out_xfo.globalXfo;
  this.controls_Lhand_hand_L_hand_cmpOutOut.globalXfo = this.controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.compute(this.controls_Lhand_hand_L_hand_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint
  this.controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.constrainers[0] = this.controls_Lhand_L_IKHandBlendKLOpPalm_out_xfo.globalXfo;
  this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo = this.controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.compute(this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo);

  // solving parent child constraint controls_Lhand_hand_L_index_palm01_spaceSpace
  this.controls_Lhand_hand_L_index_palm01_spaceSpace.globalXfo = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo * this.controls_Lhand_hand_L_index_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_index_palm_fk
  this.controls_Lhand_L_index_palm_fk.globalXfo = this.controls_Lhand_hand_L_index_palm01_spaceSpace.globalXfo * this.controls_Lhand_L_index_palm_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_index_base01_spaceSpace
  this.controls_Lhand_hand_L_index_base01_spaceSpace.globalXfo = this.controls_Lhand_L_index_palm_fk.globalXfo * this.controls_Lhand_hand_L_index_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_index_base_fk
  this.controls_Lhand_L_index_base_fk.globalXfo = this.controls_Lhand_hand_L_index_base01_spaceSpace.globalXfo * this.controls_Lhand_L_index_base_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_index_mid01_spaceSpace
  this.controls_Lhand_hand_L_index_mid01_spaceSpace.globalXfo = this.controls_Lhand_L_index_base_fk.globalXfo * this.controls_Lhand_hand_L_index_mid01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_index_mid_fk
  this.controls_Lhand_L_index_mid_fk.globalXfo = this.controls_Lhand_hand_L_index_mid01_spaceSpace.globalXfo * this.controls_Lhand_L_index_mid_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_index_tip01_spaceSpace
  this.controls_Lhand_hand_L_index_tip01_spaceSpace.globalXfo = this.controls_Lhand_L_index_mid_fk.globalXfo * this.controls_Lhand_hand_L_index_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_index_tip_fk
  this.controls_Lhand_L_index_tip_fk.globalXfo = this.controls_Lhand_hand_L_index_tip01_spaceSpace.globalXfo * this.controls_Lhand_L_index_tip_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_middle_palm01_spaceSpace
  this.controls_Lhand_hand_L_middle_palm01_spaceSpace.globalXfo = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo * this.controls_Lhand_hand_L_middle_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_middle_palm_fk
  this.controls_Lhand_L_middle_palm_fk.globalXfo = this.controls_Lhand_hand_L_middle_palm01_spaceSpace.globalXfo * this.controls_Lhand_L_middle_palm_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_middle_base01_spaceSpace
  this.controls_Lhand_hand_L_middle_base01_spaceSpace.globalXfo = this.controls_Lhand_L_middle_palm_fk.globalXfo * this.controls_Lhand_hand_L_middle_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_middle_base_fk
  this.controls_Lhand_L_middle_base_fk.globalXfo = this.controls_Lhand_hand_L_middle_base01_spaceSpace.globalXfo * this.controls_Lhand_L_middle_base_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_middle_mid01_spaceSpace
  this.controls_Lhand_hand_L_middle_mid01_spaceSpace.globalXfo = this.controls_Lhand_L_middle_base_fk.globalXfo * this.controls_Lhand_hand_L_middle_mid01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_middle_mid_fk
  this.controls_Lhand_L_middle_mid_fk.globalXfo = this.controls_Lhand_hand_L_middle_mid01_spaceSpace.globalXfo * this.controls_Lhand_L_middle_mid_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_middle_tip01_spaceSpace
  this.controls_Lhand_hand_L_middle_tip01_spaceSpace.globalXfo = this.controls_Lhand_L_middle_mid_fk.globalXfo * this.controls_Lhand_hand_L_middle_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_middle_tip_fk
  this.controls_Lhand_L_middle_tip_fk.globalXfo = this.controls_Lhand_hand_L_middle_tip01_spaceSpace.globalXfo * this.controls_Lhand_L_middle_tip_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_ring_palm01_spaceSpace
  this.controls_Lhand_hand_L_ring_palm01_spaceSpace.globalXfo = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo * this.controls_Lhand_hand_L_ring_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_ring_palm_fk
  this.controls_Lhand_L_ring_palm_fk.globalXfo = this.controls_Lhand_hand_L_ring_palm01_spaceSpace.globalXfo * this.controls_Lhand_L_ring_palm_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_ring_base01_spaceSpace
  this.controls_Lhand_hand_L_ring_base01_spaceSpace.globalXfo = this.controls_Lhand_L_ring_palm_fk.globalXfo * this.controls_Lhand_hand_L_ring_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_ring_base_fk
  this.controls_Lhand_L_ring_base_fk.globalXfo = this.controls_Lhand_hand_L_ring_base01_spaceSpace.globalXfo * this.controls_Lhand_L_ring_base_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_ring_mid01_spaceSpace
  this.controls_Lhand_hand_L_ring_mid01_spaceSpace.globalXfo = this.controls_Lhand_L_ring_base_fk.globalXfo * this.controls_Lhand_hand_L_ring_mid01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_ring_mid_fk
  this.controls_Lhand_L_ring_mid_fk.globalXfo = this.controls_Lhand_hand_L_ring_mid01_spaceSpace.globalXfo * this.controls_Lhand_L_ring_mid_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_ring_tip01_spaceSpace
  this.controls_Lhand_hand_L_ring_tip01_spaceSpace.globalXfo = this.controls_Lhand_L_ring_mid_fk.globalXfo * this.controls_Lhand_hand_L_ring_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_ring_tip_fk
  this.controls_Lhand_L_ring_tip_fk.globalXfo = this.controls_Lhand_hand_L_ring_tip01_spaceSpace.globalXfo * this.controls_Lhand_L_ring_tip_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_pinky_palm01_spaceSpace
  this.controls_Lhand_hand_L_pinky_palm01_spaceSpace.globalXfo = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo * this.controls_Lhand_hand_L_pinky_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_pinky_palm_fk
  this.controls_Lhand_L_pinky_palm_fk.globalXfo = this.controls_Lhand_hand_L_pinky_palm01_spaceSpace.globalXfo * this.controls_Lhand_L_pinky_palm_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_pinky_base01_spaceSpace
  this.controls_Lhand_hand_L_pinky_base01_spaceSpace.globalXfo = this.controls_Lhand_L_pinky_palm_fk.globalXfo * this.controls_Lhand_hand_L_pinky_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_pinky_base_fk
  this.controls_Lhand_L_pinky_base_fk.globalXfo = this.controls_Lhand_hand_L_pinky_base01_spaceSpace.globalXfo * this.controls_Lhand_L_pinky_base_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_pinky_mid01_spaceSpace
  this.controls_Lhand_hand_L_pinky_mid01_spaceSpace.globalXfo = this.controls_Lhand_L_pinky_base_fk.globalXfo * this.controls_Lhand_hand_L_pinky_mid01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_pinky_mid_fk
  this.controls_Lhand_L_pinky_mid_fk.globalXfo = this.controls_Lhand_hand_L_pinky_mid01_spaceSpace.globalXfo * this.controls_Lhand_L_pinky_mid_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_pinky_tip01_spaceSpace
  this.controls_Lhand_hand_L_pinky_tip01_spaceSpace.globalXfo = this.controls_Lhand_L_pinky_mid_fk.globalXfo * this.controls_Lhand_hand_L_pinky_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_pinky_tip_fk
  this.controls_Lhand_L_pinky_tip_fk.globalXfo = this.controls_Lhand_hand_L_pinky_tip01_spaceSpace.globalXfo * this.controls_Lhand_L_pinky_tip_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_thumb_palm01_spaceSpace
  this.controls_Lhand_hand_L_thumb_palm01_spaceSpace.globalXfo = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo * this.controls_Lhand_hand_L_thumb_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_thumb_palm_fk
  this.controls_Lhand_L_thumb_palm_fk.globalXfo = this.controls_Lhand_hand_L_thumb_palm01_spaceSpace.globalXfo * this.controls_Lhand_L_thumb_palm_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_thumb_base01_spaceSpace
  this.controls_Lhand_hand_L_thumb_base01_spaceSpace.globalXfo = this.controls_Lhand_L_thumb_palm_fk.globalXfo * this.controls_Lhand_hand_L_thumb_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_thumb_base_fk
  this.controls_Lhand_L_thumb_base_fk.globalXfo = this.controls_Lhand_hand_L_thumb_base01_spaceSpace.globalXfo * this.controls_Lhand_L_thumb_base_fk.xfo;

  // solving parent child constraint controls_Lhand_hand_L_thumb_tip01_spaceSpace
  this.controls_Lhand_hand_L_thumb_tip01_spaceSpace.globalXfo = this.controls_Lhand_L_thumb_base_fk.globalXfo * this.controls_Lhand_hand_L_thumb_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Lhand_L_thumb_tip_fk
  this.controls_Lhand_L_thumb_tip_fk.globalXfo = this.controls_Lhand_hand_L_thumb_tip01_spaceSpace.globalXfo * this.controls_Lhand_L_thumb_tip_fk.xfo;

  // solving parent child constraint controls_Lhand_L_ikGoalRef_xfo
  this.controls_Lhand_L_ikGoalRef_xfo.globalXfo = this.controls_Lhand_L_hand_ik.globalXfo * this.controls_Lhand_L_ikGoalRef_xfo.xfo;

  // solving parent child constraint controls_Lhand_L_ikHand_xfo
  this.controls_Lhand_L_ikHand_xfo.globalXfo = this.controls_Lhand_hand_L_hand02_spaceSpace.globalXfo * this.controls_Lhand_L_ikHand_xfo.xfo;

  // solving parent child constraint controls_Lhand_L_ikPalm_xfo
  this.controls_Lhand_L_ikPalm_xfo.globalXfo = this.controls_Lhand_L_ikHand_xfo.globalXfo * this.controls_Lhand_L_ikPalm_xfo.xfo;

  // solving parent child constraint deformers_Lhand_hand_L_hand_cmp
  this.deformers_Lhand_hand_L_hand_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Lhand_hand_L_hand_cmp.xfo;

  // solving KLSolver hand_L_LhandDeformerJointsKLOp
  Boolean hand_L_LhandDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandDeformerJointsKLOp_constrainers[](2);
  hand_L_LhandDeformerJointsKLOp_constrainers[0] = this.controls_Lhand_hand_L_hand_cmpOutOut.globalXfo.toMat44();
  hand_L_LhandDeformerJointsKLOp_constrainers[1] = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo.toMat44();
  Mat44 hand_L_LhandDeformerJointsKLOp_constrainees[](2);
  this.hand_L_LhandDeformerJointsKLOp.solve(
    hand_L_LhandDeformerJointsKLOp_drawDebug,
    hand_L_LhandDeformerJointsKLOp_rigScale,
    hand_L_LhandDeformerJointsKLOp_constrainers,
    hand_L_LhandDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Lhand_hand_L_hand_def from solver hand_L_LhandDeformerJointsKLOp
  this.deformers_Lhand_hand_L_hand_def.globalXfo = hand_L_LhandDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Lhand_hand_L_palm_def from solver hand_L_LhandDeformerJointsKLOp
  this.deformers_Lhand_hand_L_palm_def.globalXfo = hand_L_LhandDeformerJointsKLOp_constrainees[1];

  // solving KLSolver hand_L_LhandindexDeformerJointsKLOp
  Boolean hand_L_LhandindexDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandindexDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandindexDeformerJointsKLOp_constrainers[](4);
  hand_L_LhandindexDeformerJointsKLOp_constrainers[0] = this.controls_Lhand_L_index_palm_fk.globalXfo.toMat44();
  hand_L_LhandindexDeformerJointsKLOp_constrainers[1] = this.controls_Lhand_L_index_base_fk.globalXfo.toMat44();
  hand_L_LhandindexDeformerJointsKLOp_constrainers[2] = this.controls_Lhand_L_index_mid_fk.globalXfo.toMat44();
  hand_L_LhandindexDeformerJointsKLOp_constrainers[3] = this.controls_Lhand_L_index_tip_fk.globalXfo.toMat44();
  Mat44 hand_L_LhandindexDeformerJointsKLOp_constrainees[](4);
  this.hand_L_LhandindexDeformerJointsKLOp.solve(
    hand_L_LhandindexDeformerJointsKLOp_drawDebug,
    hand_L_LhandindexDeformerJointsKLOp_rigScale,
    hand_L_LhandindexDeformerJointsKLOp_constrainers,
    hand_L_LhandindexDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Lhand_hand_L_index_palm_def from solver hand_L_LhandindexDeformerJointsKLOp
  this.deformers_Lhand_hand_L_index_palm_def.globalXfo = hand_L_LhandindexDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Lhand_hand_L_index_base_def from solver hand_L_LhandindexDeformerJointsKLOp
  this.deformers_Lhand_hand_L_index_base_def.globalXfo = hand_L_LhandindexDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Lhand_hand_L_index_mid_def from solver hand_L_LhandindexDeformerJointsKLOp
  this.deformers_Lhand_hand_L_index_mid_def.globalXfo = hand_L_LhandindexDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_Lhand_hand_L_index_tip_def from solver hand_L_LhandindexDeformerJointsKLOp
  this.deformers_Lhand_hand_L_index_tip_def.globalXfo = hand_L_LhandindexDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_L_LhandmiddleDeformerJointsKLOp
  Boolean hand_L_LhandmiddleDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandmiddleDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandmiddleDeformerJointsKLOp_constrainers[](4);
  hand_L_LhandmiddleDeformerJointsKLOp_constrainers[0] = this.controls_Lhand_L_middle_palm_fk.globalXfo.toMat44();
  hand_L_LhandmiddleDeformerJointsKLOp_constrainers[1] = this.controls_Lhand_L_middle_base_fk.globalXfo.toMat44();
  hand_L_LhandmiddleDeformerJointsKLOp_constrainers[2] = this.controls_Lhand_L_middle_mid_fk.globalXfo.toMat44();
  hand_L_LhandmiddleDeformerJointsKLOp_constrainers[3] = this.controls_Lhand_L_middle_tip_fk.globalXfo.toMat44();
  Mat44 hand_L_LhandmiddleDeformerJointsKLOp_constrainees[](4);
  this.hand_L_LhandmiddleDeformerJointsKLOp.solve(
    hand_L_LhandmiddleDeformerJointsKLOp_drawDebug,
    hand_L_LhandmiddleDeformerJointsKLOp_rigScale,
    hand_L_LhandmiddleDeformerJointsKLOp_constrainers,
    hand_L_LhandmiddleDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Lhand_hand_L_middle_palm_def from solver hand_L_LhandmiddleDeformerJointsKLOp
  this.deformers_Lhand_hand_L_middle_palm_def.globalXfo = hand_L_LhandmiddleDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Lhand_hand_L_middle_base_def from solver hand_L_LhandmiddleDeformerJointsKLOp
  this.deformers_Lhand_hand_L_middle_base_def.globalXfo = hand_L_LhandmiddleDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Lhand_hand_L_middle_mid_def from solver hand_L_LhandmiddleDeformerJointsKLOp
  this.deformers_Lhand_hand_L_middle_mid_def.globalXfo = hand_L_LhandmiddleDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_Lhand_hand_L_middle_tip_def from solver hand_L_LhandmiddleDeformerJointsKLOp
  this.deformers_Lhand_hand_L_middle_tip_def.globalXfo = hand_L_LhandmiddleDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_L_LhandringDeformerJointsKLOp
  Boolean hand_L_LhandringDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandringDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandringDeformerJointsKLOp_constrainers[](4);
  hand_L_LhandringDeformerJointsKLOp_constrainers[0] = this.controls_Lhand_L_ring_palm_fk.globalXfo.toMat44();
  hand_L_LhandringDeformerJointsKLOp_constrainers[1] = this.controls_Lhand_L_ring_base_fk.globalXfo.toMat44();
  hand_L_LhandringDeformerJointsKLOp_constrainers[2] = this.controls_Lhand_L_ring_mid_fk.globalXfo.toMat44();
  hand_L_LhandringDeformerJointsKLOp_constrainers[3] = this.controls_Lhand_L_ring_tip_fk.globalXfo.toMat44();
  Mat44 hand_L_LhandringDeformerJointsKLOp_constrainees[](4);
  this.hand_L_LhandringDeformerJointsKLOp.solve(
    hand_L_LhandringDeformerJointsKLOp_drawDebug,
    hand_L_LhandringDeformerJointsKLOp_rigScale,
    hand_L_LhandringDeformerJointsKLOp_constrainers,
    hand_L_LhandringDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Lhand_hand_L_ring_palm_def from solver hand_L_LhandringDeformerJointsKLOp
  this.deformers_Lhand_hand_L_ring_palm_def.globalXfo = hand_L_LhandringDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Lhand_hand_L_ring_base_def from solver hand_L_LhandringDeformerJointsKLOp
  this.deformers_Lhand_hand_L_ring_base_def.globalXfo = hand_L_LhandringDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Lhand_hand_L_ring_mid_def from solver hand_L_LhandringDeformerJointsKLOp
  this.deformers_Lhand_hand_L_ring_mid_def.globalXfo = hand_L_LhandringDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_Lhand_hand_L_ring_tip_def from solver hand_L_LhandringDeformerJointsKLOp
  this.deformers_Lhand_hand_L_ring_tip_def.globalXfo = hand_L_LhandringDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_L_LhandpinkyDeformerJointsKLOp
  Boolean hand_L_LhandpinkyDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandpinkyDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandpinkyDeformerJointsKLOp_constrainers[](4);
  hand_L_LhandpinkyDeformerJointsKLOp_constrainers[0] = this.controls_Lhand_L_pinky_palm_fk.globalXfo.toMat44();
  hand_L_LhandpinkyDeformerJointsKLOp_constrainers[1] = this.controls_Lhand_L_pinky_base_fk.globalXfo.toMat44();
  hand_L_LhandpinkyDeformerJointsKLOp_constrainers[2] = this.controls_Lhand_L_pinky_mid_fk.globalXfo.toMat44();
  hand_L_LhandpinkyDeformerJointsKLOp_constrainers[3] = this.controls_Lhand_L_pinky_tip_fk.globalXfo.toMat44();
  Mat44 hand_L_LhandpinkyDeformerJointsKLOp_constrainees[](4);
  this.hand_L_LhandpinkyDeformerJointsKLOp.solve(
    hand_L_LhandpinkyDeformerJointsKLOp_drawDebug,
    hand_L_LhandpinkyDeformerJointsKLOp_rigScale,
    hand_L_LhandpinkyDeformerJointsKLOp_constrainers,
    hand_L_LhandpinkyDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Lhand_hand_L_pinky_palm_def from solver hand_L_LhandpinkyDeformerJointsKLOp
  this.deformers_Lhand_hand_L_pinky_palm_def.globalXfo = hand_L_LhandpinkyDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Lhand_hand_L_pinky_base_def from solver hand_L_LhandpinkyDeformerJointsKLOp
  this.deformers_Lhand_hand_L_pinky_base_def.globalXfo = hand_L_LhandpinkyDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Lhand_hand_L_pinky_mid_def from solver hand_L_LhandpinkyDeformerJointsKLOp
  this.deformers_Lhand_hand_L_pinky_mid_def.globalXfo = hand_L_LhandpinkyDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_Lhand_hand_L_pinky_tip_def from solver hand_L_LhandpinkyDeformerJointsKLOp
  this.deformers_Lhand_hand_L_pinky_tip_def.globalXfo = hand_L_LhandpinkyDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_L_LhandthumbDeformerJointsKLOp
  Boolean hand_L_LhandthumbDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandthumbDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandthumbDeformerJointsKLOp_constrainers[](3);
  hand_L_LhandthumbDeformerJointsKLOp_constrainers[0] = this.controls_Lhand_L_thumb_palm_fk.globalXfo.toMat44();
  hand_L_LhandthumbDeformerJointsKLOp_constrainers[1] = this.controls_Lhand_L_thumb_base_fk.globalXfo.toMat44();
  hand_L_LhandthumbDeformerJointsKLOp_constrainers[2] = this.controls_Lhand_L_thumb_tip_fk.globalXfo.toMat44();
  Mat44 hand_L_LhandthumbDeformerJointsKLOp_constrainees[](3);
  this.hand_L_LhandthumbDeformerJointsKLOp.solve(
    hand_L_LhandthumbDeformerJointsKLOp_drawDebug,
    hand_L_LhandthumbDeformerJointsKLOp_rigScale,
    hand_L_LhandthumbDeformerJointsKLOp_constrainers,
    hand_L_LhandthumbDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Lhand_hand_L_thumb_palm_def from solver hand_L_LhandthumbDeformerJointsKLOp
  this.deformers_Lhand_hand_L_thumb_palm_def.globalXfo = hand_L_LhandthumbDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Lhand_hand_L_thumb_base_def from solver hand_L_LhandthumbDeformerJointsKLOp
  this.deformers_Lhand_hand_L_thumb_base_def.globalXfo = hand_L_LhandthumbDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Lhand_hand_L_thumb_tip_def from solver hand_L_LhandthumbDeformerJointsKLOp
  this.deformers_Lhand_hand_L_thumb_tip_def.globalXfo = hand_L_LhandthumbDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_Rhand_hand_R_hand_cmp
  this.controls_Rhand_hand_R_hand_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_Rhand_hand_R_hand_cmp.xfo;

  // solving parent child constraint controls_Rhand_hand_R_inputs_hrc
  this.controls_Rhand_hand_R_inputs_hrc.globalXfo = this.controls_Rhand_hand_R_hand_cmp.globalXfo * this.controls_Rhand_hand_R_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint
  this.controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers[0] = this.controls_Rarm_arm_R_endlimb_cmpOutOut.globalXfo;
  this.controls_Rhand_hand_R_parentSpace_cmpInIn.globalXfo = this.controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.compute(this.controls_Rhand_hand_R_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_Rhand_hand_R_outputs_hrc
  this.controls_Rhand_hand_R_outputs_hrc.globalXfo = this.controls_Rhand_hand_R_hand_cmp.globalXfo * this.controls_Rhand_hand_R_outputs_hrc.xfo;

  // solving KLSolver hand_R_MhandIKHandBlendKLOp
  Boolean hand_R_MhandIKHandBlendKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_MhandIKHandBlendKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Scalar hand_R_MhandIKHandBlendKLOp_blend = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK.value;

  // solving parent child constraint controls_Rhand_hand_R_handIK_spaceSpace
  this.controls_Rhand_hand_R_handIK_spaceSpace.globalXfo = this.controls_Rhand_R_hand_ik.globalXfo * this.controls_Rhand_hand_R_handIK_spaceSpace.xfo;
  Mat44 hand_R_MhandIKHandBlendKLOp_ikFoot = this.controls_Rhand_hand_R_handIK_spaceSpace.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint
  this.controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_Rhand_hand_R_parentSpace_cmpInIn.globalXfo;
  this.controls_Rhand_hand_R_hand02_spaceSpace.globalXfo = this.controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint.compute(this.controls_Rhand_hand_R_hand02_spaceSpace.globalXfo);

  // solving parent child constraint controls_Rhand_R_hand_fk
  this.controls_Rhand_R_hand_fk.globalXfo = this.controls_Rhand_hand_R_hand02_spaceSpace.globalXfo * this.controls_Rhand_R_hand_fk.xfo;
  Mat44 hand_R_MhandIKHandBlendKLOp_fkFoot = this.controls_Rhand_R_hand_fk.globalXfo.toMat44();

  // solving parent child constraint controls_Rhand_hand_R_palmIK_spaceSpace
  this.controls_Rhand_hand_R_palmIK_spaceSpace.globalXfo = this.controls_Rhand_hand_R_handIK_spaceSpace.globalXfo * this.controls_Rhand_hand_R_palmIK_spaceSpace.xfo;
  Mat44 hand_R_MhandIKHandBlendKLOp_ikBall = this.controls_Rhand_hand_R_palmIK_spaceSpace.globalXfo.toMat44();

  // solving parent child constraint controls_Rhand_hand_R_palm01_spaceSpace
  this.controls_Rhand_hand_R_palm01_spaceSpace.globalXfo = this.controls_Rhand_R_hand_fk.globalXfo * this.controls_Rhand_hand_R_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_palm_fk
  this.controls_Rhand_R_palm_fk.globalXfo = this.controls_Rhand_hand_R_palm01_spaceSpace.globalXfo * this.controls_Rhand_R_palm_fk.xfo;
  Mat44 hand_R_MhandIKHandBlendKLOp_fkBall = this.controls_Rhand_R_palm_fk.globalXfo.toMat44();
  Mat44 hand_R_MhandIKHandBlendKLOp_foot;
  Mat44 hand_R_MhandIKHandBlendKLOp_ball;
  this.hand_R_MhandIKHandBlendKLOp.solve(
    hand_R_MhandIKHandBlendKLOp_drawDebug,
    hand_R_MhandIKHandBlendKLOp_rigScale,
    hand_R_MhandIKHandBlendKLOp_blend,
    hand_R_MhandIKHandBlendKLOp_ikFoot,
    hand_R_MhandIKHandBlendKLOp_fkFoot,
    hand_R_MhandIKHandBlendKLOp_ikBall,
    hand_R_MhandIKHandBlendKLOp_fkBall,
    hand_R_MhandIKHandBlendKLOp_foot,
    hand_R_MhandIKHandBlendKLOp_ball
  );

  // retrieving value for controls_Rhand_R_IKHandBlendKLOpHand_out_xfo from solver hand_R_MhandIKHandBlendKLOp
  this.controls_Rhand_R_IKHandBlendKLOpHand_out_xfo.globalXfo = hand_R_MhandIKHandBlendKLOp_foot;

  // retrieving value for controls_Rhand_R_IKHandBlendKLOpPalm_out_xfo from solver hand_R_MhandIKHandBlendKLOp
  this.controls_Rhand_R_IKHandBlendKLOpPalm_out_xfo.globalXfo = hand_R_MhandIKHandBlendKLOp_ball;

  // solving PoseConstraint constraint controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint
  this.controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.constrainers[0] = this.controls_Rhand_R_IKHandBlendKLOpHand_out_xfo.globalXfo;
  this.controls_Rhand_hand_R_hand_cmpOutOut.globalXfo = this.controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.compute(this.controls_Rhand_hand_R_hand_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint
  this.controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.constrainers[0] = this.controls_Rhand_R_IKHandBlendKLOpPalm_out_xfo.globalXfo;
  this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo = this.controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.compute(this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo);

  // solving parent child constraint controls_Rhand_hand_R_index_palm01_spaceSpace
  this.controls_Rhand_hand_R_index_palm01_spaceSpace.globalXfo = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo * this.controls_Rhand_hand_R_index_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_index_palm_fk
  this.controls_Rhand_R_index_palm_fk.globalXfo = this.controls_Rhand_hand_R_index_palm01_spaceSpace.globalXfo * this.controls_Rhand_R_index_palm_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_index_base01_spaceSpace
  this.controls_Rhand_hand_R_index_base01_spaceSpace.globalXfo = this.controls_Rhand_R_index_palm_fk.globalXfo * this.controls_Rhand_hand_R_index_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_index_base_fk
  this.controls_Rhand_R_index_base_fk.globalXfo = this.controls_Rhand_hand_R_index_base01_spaceSpace.globalXfo * this.controls_Rhand_R_index_base_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_index_mid01_spaceSpace
  this.controls_Rhand_hand_R_index_mid01_spaceSpace.globalXfo = this.controls_Rhand_R_index_base_fk.globalXfo * this.controls_Rhand_hand_R_index_mid01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_index_mid_fk
  this.controls_Rhand_R_index_mid_fk.globalXfo = this.controls_Rhand_hand_R_index_mid01_spaceSpace.globalXfo * this.controls_Rhand_R_index_mid_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_index_tip01_spaceSpace
  this.controls_Rhand_hand_R_index_tip01_spaceSpace.globalXfo = this.controls_Rhand_R_index_mid_fk.globalXfo * this.controls_Rhand_hand_R_index_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_index_tip_fk
  this.controls_Rhand_R_index_tip_fk.globalXfo = this.controls_Rhand_hand_R_index_tip01_spaceSpace.globalXfo * this.controls_Rhand_R_index_tip_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_middle_palm01_spaceSpace
  this.controls_Rhand_hand_R_middle_palm01_spaceSpace.globalXfo = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo * this.controls_Rhand_hand_R_middle_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_middle_palm_fk
  this.controls_Rhand_R_middle_palm_fk.globalXfo = this.controls_Rhand_hand_R_middle_palm01_spaceSpace.globalXfo * this.controls_Rhand_R_middle_palm_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_middle_base01_spaceSpace
  this.controls_Rhand_hand_R_middle_base01_spaceSpace.globalXfo = this.controls_Rhand_R_middle_palm_fk.globalXfo * this.controls_Rhand_hand_R_middle_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_middle_base_fk
  this.controls_Rhand_R_middle_base_fk.globalXfo = this.controls_Rhand_hand_R_middle_base01_spaceSpace.globalXfo * this.controls_Rhand_R_middle_base_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_middle_mid01_spaceSpace
  this.controls_Rhand_hand_R_middle_mid01_spaceSpace.globalXfo = this.controls_Rhand_R_middle_base_fk.globalXfo * this.controls_Rhand_hand_R_middle_mid01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_middle_mid_fk
  this.controls_Rhand_R_middle_mid_fk.globalXfo = this.controls_Rhand_hand_R_middle_mid01_spaceSpace.globalXfo * this.controls_Rhand_R_middle_mid_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_middle_tip01_spaceSpace
  this.controls_Rhand_hand_R_middle_tip01_spaceSpace.globalXfo = this.controls_Rhand_R_middle_mid_fk.globalXfo * this.controls_Rhand_hand_R_middle_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_middle_tip_fk
  this.controls_Rhand_R_middle_tip_fk.globalXfo = this.controls_Rhand_hand_R_middle_tip01_spaceSpace.globalXfo * this.controls_Rhand_R_middle_tip_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_ring_palm01_spaceSpace
  this.controls_Rhand_hand_R_ring_palm01_spaceSpace.globalXfo = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo * this.controls_Rhand_hand_R_ring_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_ring_palm_fk
  this.controls_Rhand_R_ring_palm_fk.globalXfo = this.controls_Rhand_hand_R_ring_palm01_spaceSpace.globalXfo * this.controls_Rhand_R_ring_palm_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_ring_base01_spaceSpace
  this.controls_Rhand_hand_R_ring_base01_spaceSpace.globalXfo = this.controls_Rhand_R_ring_palm_fk.globalXfo * this.controls_Rhand_hand_R_ring_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_ring_base_fk
  this.controls_Rhand_R_ring_base_fk.globalXfo = this.controls_Rhand_hand_R_ring_base01_spaceSpace.globalXfo * this.controls_Rhand_R_ring_base_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_ring_mid01_spaceSpace
  this.controls_Rhand_hand_R_ring_mid01_spaceSpace.globalXfo = this.controls_Rhand_R_ring_base_fk.globalXfo * this.controls_Rhand_hand_R_ring_mid01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_ring_mid_fk
  this.controls_Rhand_R_ring_mid_fk.globalXfo = this.controls_Rhand_hand_R_ring_mid01_spaceSpace.globalXfo * this.controls_Rhand_R_ring_mid_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_ring_tip01_spaceSpace
  this.controls_Rhand_hand_R_ring_tip01_spaceSpace.globalXfo = this.controls_Rhand_R_ring_mid_fk.globalXfo * this.controls_Rhand_hand_R_ring_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_ring_tip_fk
  this.controls_Rhand_R_ring_tip_fk.globalXfo = this.controls_Rhand_hand_R_ring_tip01_spaceSpace.globalXfo * this.controls_Rhand_R_ring_tip_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_pinky_palm01_spaceSpace
  this.controls_Rhand_hand_R_pinky_palm01_spaceSpace.globalXfo = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo * this.controls_Rhand_hand_R_pinky_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_pinky_palm_fk
  this.controls_Rhand_R_pinky_palm_fk.globalXfo = this.controls_Rhand_hand_R_pinky_palm01_spaceSpace.globalXfo * this.controls_Rhand_R_pinky_palm_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_pinky_base01_spaceSpace
  this.controls_Rhand_hand_R_pinky_base01_spaceSpace.globalXfo = this.controls_Rhand_R_pinky_palm_fk.globalXfo * this.controls_Rhand_hand_R_pinky_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_pinky_base_fk
  this.controls_Rhand_R_pinky_base_fk.globalXfo = this.controls_Rhand_hand_R_pinky_base01_spaceSpace.globalXfo * this.controls_Rhand_R_pinky_base_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_pinky_mid01_spaceSpace
  this.controls_Rhand_hand_R_pinky_mid01_spaceSpace.globalXfo = this.controls_Rhand_R_pinky_base_fk.globalXfo * this.controls_Rhand_hand_R_pinky_mid01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_pinky_mid_fk
  this.controls_Rhand_R_pinky_mid_fk.globalXfo = this.controls_Rhand_hand_R_pinky_mid01_spaceSpace.globalXfo * this.controls_Rhand_R_pinky_mid_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_pinky_tip01_spaceSpace
  this.controls_Rhand_hand_R_pinky_tip01_spaceSpace.globalXfo = this.controls_Rhand_R_pinky_mid_fk.globalXfo * this.controls_Rhand_hand_R_pinky_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_pinky_tip_fk
  this.controls_Rhand_R_pinky_tip_fk.globalXfo = this.controls_Rhand_hand_R_pinky_tip01_spaceSpace.globalXfo * this.controls_Rhand_R_pinky_tip_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_thumb_palm01_spaceSpace
  this.controls_Rhand_hand_R_thumb_palm01_spaceSpace.globalXfo = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo * this.controls_Rhand_hand_R_thumb_palm01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_thumb_palm_fk
  this.controls_Rhand_R_thumb_palm_fk.globalXfo = this.controls_Rhand_hand_R_thumb_palm01_spaceSpace.globalXfo * this.controls_Rhand_R_thumb_palm_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_thumb_base01_spaceSpace
  this.controls_Rhand_hand_R_thumb_base01_spaceSpace.globalXfo = this.controls_Rhand_R_thumb_palm_fk.globalXfo * this.controls_Rhand_hand_R_thumb_base01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_thumb_base_fk
  this.controls_Rhand_R_thumb_base_fk.globalXfo = this.controls_Rhand_hand_R_thumb_base01_spaceSpace.globalXfo * this.controls_Rhand_R_thumb_base_fk.xfo;

  // solving parent child constraint controls_Rhand_hand_R_thumb_tip01_spaceSpace
  this.controls_Rhand_hand_R_thumb_tip01_spaceSpace.globalXfo = this.controls_Rhand_R_thumb_base_fk.globalXfo * this.controls_Rhand_hand_R_thumb_tip01_spaceSpace.xfo;

  // solving parent child constraint controls_Rhand_R_thumb_tip_fk
  this.controls_Rhand_R_thumb_tip_fk.globalXfo = this.controls_Rhand_hand_R_thumb_tip01_spaceSpace.globalXfo * this.controls_Rhand_R_thumb_tip_fk.xfo;

  // solving parent child constraint controls_Rhand_R_ikGoalRef_xfo
  this.controls_Rhand_R_ikGoalRef_xfo.globalXfo = this.controls_Rhand_R_hand_ik.globalXfo * this.controls_Rhand_R_ikGoalRef_xfo.xfo;

  // solving parent child constraint controls_Rhand_R_ikHand_xfo
  this.controls_Rhand_R_ikHand_xfo.globalXfo = this.controls_Rhand_hand_R_hand02_spaceSpace.globalXfo * this.controls_Rhand_R_ikHand_xfo.xfo;

  // solving parent child constraint controls_Rhand_R_ikPalm_xfo
  this.controls_Rhand_R_ikPalm_xfo.globalXfo = this.controls_Rhand_R_ikHand_xfo.globalXfo * this.controls_Rhand_R_ikPalm_xfo.xfo;

  // solving parent child constraint deformers_Rhand_hand_R_hand_cmp
  this.deformers_Rhand_hand_R_hand_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_Rhand_hand_R_hand_cmp.xfo;

  // solving KLSolver hand_R_RhandDeformerJointsKLOp
  Boolean hand_R_RhandDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandDeformerJointsKLOp_constrainers[](2);
  hand_R_RhandDeformerJointsKLOp_constrainers[0] = this.controls_Rhand_hand_R_hand_cmpOutOut.globalXfo.toMat44();
  hand_R_RhandDeformerJointsKLOp_constrainers[1] = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo.toMat44();
  Mat44 hand_R_RhandDeformerJointsKLOp_constrainees[](2);
  this.hand_R_RhandDeformerJointsKLOp.solve(
    hand_R_RhandDeformerJointsKLOp_drawDebug,
    hand_R_RhandDeformerJointsKLOp_rigScale,
    hand_R_RhandDeformerJointsKLOp_constrainers,
    hand_R_RhandDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rhand_hand_R_hand_def from solver hand_R_RhandDeformerJointsKLOp
  this.deformers_Rhand_hand_R_hand_def.globalXfo = hand_R_RhandDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rhand_hand_R_palm_def from solver hand_R_RhandDeformerJointsKLOp
  this.deformers_Rhand_hand_R_palm_def.globalXfo = hand_R_RhandDeformerJointsKLOp_constrainees[1];

  // solving KLSolver hand_R_RhandindexDeformerJointsKLOp
  Boolean hand_R_RhandindexDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandindexDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandindexDeformerJointsKLOp_constrainers[](4);
  hand_R_RhandindexDeformerJointsKLOp_constrainers[0] = this.controls_Rhand_R_index_palm_fk.globalXfo.toMat44();
  hand_R_RhandindexDeformerJointsKLOp_constrainers[1] = this.controls_Rhand_R_index_base_fk.globalXfo.toMat44();
  hand_R_RhandindexDeformerJointsKLOp_constrainers[2] = this.controls_Rhand_R_index_mid_fk.globalXfo.toMat44();
  hand_R_RhandindexDeformerJointsKLOp_constrainers[3] = this.controls_Rhand_R_index_tip_fk.globalXfo.toMat44();
  Mat44 hand_R_RhandindexDeformerJointsKLOp_constrainees[](4);
  this.hand_R_RhandindexDeformerJointsKLOp.solve(
    hand_R_RhandindexDeformerJointsKLOp_drawDebug,
    hand_R_RhandindexDeformerJointsKLOp_rigScale,
    hand_R_RhandindexDeformerJointsKLOp_constrainers,
    hand_R_RhandindexDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rhand_hand_R_index_palm_def from solver hand_R_RhandindexDeformerJointsKLOp
  this.deformers_Rhand_hand_R_index_palm_def.globalXfo = hand_R_RhandindexDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rhand_hand_R_index_base_def from solver hand_R_RhandindexDeformerJointsKLOp
  this.deformers_Rhand_hand_R_index_base_def.globalXfo = hand_R_RhandindexDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Rhand_hand_R_index_mid_def from solver hand_R_RhandindexDeformerJointsKLOp
  this.deformers_Rhand_hand_R_index_mid_def.globalXfo = hand_R_RhandindexDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_Rhand_hand_R_index_tip_def from solver hand_R_RhandindexDeformerJointsKLOp
  this.deformers_Rhand_hand_R_index_tip_def.globalXfo = hand_R_RhandindexDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_R_RhandmiddleDeformerJointsKLOp
  Boolean hand_R_RhandmiddleDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandmiddleDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandmiddleDeformerJointsKLOp_constrainers[](4);
  hand_R_RhandmiddleDeformerJointsKLOp_constrainers[0] = this.controls_Rhand_R_middle_palm_fk.globalXfo.toMat44();
  hand_R_RhandmiddleDeformerJointsKLOp_constrainers[1] = this.controls_Rhand_R_middle_base_fk.globalXfo.toMat44();
  hand_R_RhandmiddleDeformerJointsKLOp_constrainers[2] = this.controls_Rhand_R_middle_mid_fk.globalXfo.toMat44();
  hand_R_RhandmiddleDeformerJointsKLOp_constrainers[3] = this.controls_Rhand_R_middle_tip_fk.globalXfo.toMat44();
  Mat44 hand_R_RhandmiddleDeformerJointsKLOp_constrainees[](4);
  this.hand_R_RhandmiddleDeformerJointsKLOp.solve(
    hand_R_RhandmiddleDeformerJointsKLOp_drawDebug,
    hand_R_RhandmiddleDeformerJointsKLOp_rigScale,
    hand_R_RhandmiddleDeformerJointsKLOp_constrainers,
    hand_R_RhandmiddleDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rhand_hand_R_middle_palm_def from solver hand_R_RhandmiddleDeformerJointsKLOp
  this.deformers_Rhand_hand_R_middle_palm_def.globalXfo = hand_R_RhandmiddleDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rhand_hand_R_middle_base_def from solver hand_R_RhandmiddleDeformerJointsKLOp
  this.deformers_Rhand_hand_R_middle_base_def.globalXfo = hand_R_RhandmiddleDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Rhand_hand_R_middle_mid_def from solver hand_R_RhandmiddleDeformerJointsKLOp
  this.deformers_Rhand_hand_R_middle_mid_def.globalXfo = hand_R_RhandmiddleDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_Rhand_hand_R_middle_tip_def from solver hand_R_RhandmiddleDeformerJointsKLOp
  this.deformers_Rhand_hand_R_middle_tip_def.globalXfo = hand_R_RhandmiddleDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_R_RhandringDeformerJointsKLOp
  Boolean hand_R_RhandringDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandringDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandringDeformerJointsKLOp_constrainers[](4);
  hand_R_RhandringDeformerJointsKLOp_constrainers[0] = this.controls_Rhand_R_ring_palm_fk.globalXfo.toMat44();
  hand_R_RhandringDeformerJointsKLOp_constrainers[1] = this.controls_Rhand_R_ring_base_fk.globalXfo.toMat44();
  hand_R_RhandringDeformerJointsKLOp_constrainers[2] = this.controls_Rhand_R_ring_mid_fk.globalXfo.toMat44();
  hand_R_RhandringDeformerJointsKLOp_constrainers[3] = this.controls_Rhand_R_ring_tip_fk.globalXfo.toMat44();
  Mat44 hand_R_RhandringDeformerJointsKLOp_constrainees[](4);
  this.hand_R_RhandringDeformerJointsKLOp.solve(
    hand_R_RhandringDeformerJointsKLOp_drawDebug,
    hand_R_RhandringDeformerJointsKLOp_rigScale,
    hand_R_RhandringDeformerJointsKLOp_constrainers,
    hand_R_RhandringDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rhand_hand_R_ring_palm_def from solver hand_R_RhandringDeformerJointsKLOp
  this.deformers_Rhand_hand_R_ring_palm_def.globalXfo = hand_R_RhandringDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rhand_hand_R_ring_base_def from solver hand_R_RhandringDeformerJointsKLOp
  this.deformers_Rhand_hand_R_ring_base_def.globalXfo = hand_R_RhandringDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Rhand_hand_R_ring_mid_def from solver hand_R_RhandringDeformerJointsKLOp
  this.deformers_Rhand_hand_R_ring_mid_def.globalXfo = hand_R_RhandringDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_Rhand_hand_R_ring_tip_def from solver hand_R_RhandringDeformerJointsKLOp
  this.deformers_Rhand_hand_R_ring_tip_def.globalXfo = hand_R_RhandringDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_R_RhandpinkyDeformerJointsKLOp
  Boolean hand_R_RhandpinkyDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandpinkyDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandpinkyDeformerJointsKLOp_constrainers[](4);
  hand_R_RhandpinkyDeformerJointsKLOp_constrainers[0] = this.controls_Rhand_R_pinky_palm_fk.globalXfo.toMat44();
  hand_R_RhandpinkyDeformerJointsKLOp_constrainers[1] = this.controls_Rhand_R_pinky_base_fk.globalXfo.toMat44();
  hand_R_RhandpinkyDeformerJointsKLOp_constrainers[2] = this.controls_Rhand_R_pinky_mid_fk.globalXfo.toMat44();
  hand_R_RhandpinkyDeformerJointsKLOp_constrainers[3] = this.controls_Rhand_R_pinky_tip_fk.globalXfo.toMat44();
  Mat44 hand_R_RhandpinkyDeformerJointsKLOp_constrainees[](4);
  this.hand_R_RhandpinkyDeformerJointsKLOp.solve(
    hand_R_RhandpinkyDeformerJointsKLOp_drawDebug,
    hand_R_RhandpinkyDeformerJointsKLOp_rigScale,
    hand_R_RhandpinkyDeformerJointsKLOp_constrainers,
    hand_R_RhandpinkyDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rhand_hand_R_pinky_palm_def from solver hand_R_RhandpinkyDeformerJointsKLOp
  this.deformers_Rhand_hand_R_pinky_palm_def.globalXfo = hand_R_RhandpinkyDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rhand_hand_R_pinky_base_def from solver hand_R_RhandpinkyDeformerJointsKLOp
  this.deformers_Rhand_hand_R_pinky_base_def.globalXfo = hand_R_RhandpinkyDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Rhand_hand_R_pinky_mid_def from solver hand_R_RhandpinkyDeformerJointsKLOp
  this.deformers_Rhand_hand_R_pinky_mid_def.globalXfo = hand_R_RhandpinkyDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_Rhand_hand_R_pinky_tip_def from solver hand_R_RhandpinkyDeformerJointsKLOp
  this.deformers_Rhand_hand_R_pinky_tip_def.globalXfo = hand_R_RhandpinkyDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_R_RhandthumbDeformerJointsKLOp
  Boolean hand_R_RhandthumbDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandthumbDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandthumbDeformerJointsKLOp_constrainers[](3);
  hand_R_RhandthumbDeformerJointsKLOp_constrainers[0] = this.controls_Rhand_R_thumb_palm_fk.globalXfo.toMat44();
  hand_R_RhandthumbDeformerJointsKLOp_constrainers[1] = this.controls_Rhand_R_thumb_base_fk.globalXfo.toMat44();
  hand_R_RhandthumbDeformerJointsKLOp_constrainers[2] = this.controls_Rhand_R_thumb_tip_fk.globalXfo.toMat44();
  Mat44 hand_R_RhandthumbDeformerJointsKLOp_constrainees[](3);
  this.hand_R_RhandthumbDeformerJointsKLOp.solve(
    hand_R_RhandthumbDeformerJointsKLOp_drawDebug,
    hand_R_RhandthumbDeformerJointsKLOp_rigScale,
    hand_R_RhandthumbDeformerJointsKLOp_constrainers,
    hand_R_RhandthumbDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_Rhand_hand_R_thumb_palm_def from solver hand_R_RhandthumbDeformerJointsKLOp
  this.deformers_Rhand_hand_R_thumb_palm_def.globalXfo = hand_R_RhandthumbDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_Rhand_hand_R_thumb_base_def from solver hand_R_RhandthumbDeformerJointsKLOp
  this.deformers_Rhand_hand_R_thumb_base_def.globalXfo = hand_R_RhandthumbDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_Rhand_hand_R_thumb_tip_def from solver hand_R_RhandthumbDeformerJointsKLOp
  this.deformers_Rhand_hand_R_thumb_tip_def.globalXfo = hand_R_RhandthumbDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_MheadNeck_headNeck_M_headNeck_cmp
  this.controls_MheadNeck_headNeck_M_headNeck_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_MheadNeck_headNeck_M_headNeck_cmp.xfo;

  // solving parent child constraint controls_MheadNeck_headNeck_M_inputs_hrc
  this.controls_MheadNeck_headNeck_M_inputs_hrc.globalXfo = this.controls_MheadNeck_headNeck_M_headNeck_cmp.globalXfo * this.controls_MheadNeck_headNeck_M_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_MheadNeck_headNeck_M_globalSRT_cmpInIn.globalXfo = this.controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_MheadNeck_headNeck_M_globalSRT_cmpInIn.globalXfo);

  // solving parent child constraint controls_MheadNeck_headNeck_M_head_spaceSpace
  this.controls_MheadNeck_headNeck_M_head_spaceSpace.globalXfo = this.controls_MheadNeck_headNeck_M_globalSRT_cmpInIn.globalXfo * this.controls_MheadNeck_headNeck_M_head_spaceSpace.xfo;

  // solving parent child constraint controls_MheadNeck_headNeck_M_headIK_spaceSpace
  this.controls_MheadNeck_headNeck_M_headIK_spaceSpace.globalXfo = this.controls_MheadNeck_headNeck_M_globalSRT_cmpInIn.globalXfo * this.controls_MheadNeck_headNeck_M_headIK_spaceSpace.xfo;

  // solving parent child constraint controls_MheadNeck_M_head_ik
  this.controls_MheadNeck_M_head_ik.globalXfo = this.controls_MheadNeck_headNeck_M_headIK_spaceSpace.globalXfo * this.controls_MheadNeck_M_head_ik.xfo;

  // solving PoseConstraint constraint controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint
  this.controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_spineEnd_cmpOutOut.globalXfo;
  this.controls_MheadNeck_headNeck_M_parentSpace_cmpInIn.globalXfo = this.controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.compute(this.controls_MheadNeck_headNeck_M_parentSpace_cmpInIn.globalXfo);

  // solving PoseConstraint constraint controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint
  this.controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_MheadNeck_headNeck_M_parentSpace_cmpInIn.globalXfo;
  this.controls_MheadNeck_headNeck_M_neck01_spaceSpace.globalXfo = this.controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint.compute(this.controls_MheadNeck_headNeck_M_neck01_spaceSpace.globalXfo);

  // solving parent child constraint controls_MheadNeck_M_neck_fk
  this.controls_MheadNeck_M_neck_fk.globalXfo = this.controls_MheadNeck_headNeck_M_neck01_spaceSpace.globalXfo * this.controls_MheadNeck_M_neck_fk.xfo;

  // solving parent child constraint controls_MheadNeck_headNeck_M_head01_spaceSpace
  this.controls_MheadNeck_headNeck_M_head01_spaceSpace.globalXfo = this.controls_MheadNeck_M_neck_fk.globalXfo * this.controls_MheadNeck_headNeck_M_head01_spaceSpace.xfo;

  // solving parent child constraint controls_MheadNeck_M_head_fk
  this.controls_MheadNeck_M_head_fk.globalXfo = this.controls_MheadNeck_headNeck_M_head01_spaceSpace.globalXfo * this.controls_MheadNeck_M_head_fk.xfo;

  // solving PositionConstraint constraint controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint
  this.controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint.constrainers[0] = this.controls_MheadNeck_M_head_fk.globalXfo;
  this.controls_MheadNeck_headNeck_M_headUpV_spaceSpace.globalXfo = this.controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint.compute(this.controls_MheadNeck_headNeck_M_headUpV_spaceSpace.globalXfo);

  // solving parent child constraint controls_MheadNeck_M_headUpV_an
  this.controls_MheadNeck_M_headUpV_an.globalXfo = this.controls_MheadNeck_headNeck_M_headUpV_spaceSpace.globalXfo * this.controls_MheadNeck_M_headUpV_an.xfo;

  // solving PositionConstraint constraint controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint
  this.controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint.constrainers[0] = this.controls_MheadNeck_M_head_fk.globalXfo;
  this.controls_MheadNeck_headNeck_M_headWorld01_spaceSpace.globalXfo = this.controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint.compute(this.controls_MheadNeck_headNeck_M_headWorld01_spaceSpace.globalXfo);

  // solving parent child constraint controls_MheadNeck_M_headWorld_ik
  this.controls_MheadNeck_M_headWorld_ik.globalXfo = this.controls_MheadNeck_headNeck_M_headWorld01_spaceSpace.globalXfo * this.controls_MheadNeck_M_headWorld_ik.xfo;

  // solving parent child constraint controls_MheadNeck_headNeck_M_outputs_hrc
  this.controls_MheadNeck_headNeck_M_outputs_hrc.globalXfo = this.controls_MheadNeck_headNeck_M_headNeck_cmp.globalXfo * this.controls_MheadNeck_headNeck_M_outputs_hrc.xfo;

  // solving KLSolver headNeck_M_NURBSNeckKLOp
  Boolean headNeck_M_NURBSNeckKLOp_drawDebug = this.controls_headNeck_M_inputs_inputs_drawDebug.value;
  Scalar headNeck_M_NURBSNeckKLOp_rigScale = this.controls_headNeck_M_inputs_inputs_rigScale.value;
  UInt32 headNeck_M_NURBSNeckKLOp_numDeformers = 4;
  Scalar headNeck_M_NURBSNeckKLOp_compressionAmt = 0;
  Mat44 headNeck_M_NURBSNeckKLOp_controlsRest[](4);
  headNeck_M_NURBSNeckKLOp_controlsRest[0] = Xfo(Vec3(0.0000, 103.9993, -1.5492), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  headNeck_M_NURBSNeckKLOp_controlsRest[1] = Xfo(Vec3(0.0000, 106.9974, -0.4188), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  headNeck_M_NURBSNeckKLOp_controlsRest[2] = Xfo(Vec3(0.0000, 114.3200, 1.3211), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  headNeck_M_NURBSNeckKLOp_controlsRest[3] = Xfo(Vec3(0.0000, 119.2143, 2.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  Mat44 headNeck_M_NURBSNeckKLOp_controls[](4);
  headNeck_M_NURBSNeckKLOp_controls[0] = this.controls_MheadNeck_M_neck_fk.globalXfo.toMat44();

  // solving parent child constraint controls_MheadNeck_headNeck_M_neckHandle_spaceSpace
  this.controls_MheadNeck_headNeck_M_neckHandle_spaceSpace.globalXfo = this.controls_MheadNeck_headNeck_M_neck01_spaceSpace.globalXfo * this.controls_MheadNeck_headNeck_M_neckHandle_spaceSpace.xfo;
  headNeck_M_NURBSNeckKLOp_controls[1] = this.controls_MheadNeck_headNeck_M_neckHandle_spaceSpace.globalXfo.toMat44();

  // solving parent child constraint controls_MheadNeck_headNeck_M_headAlign_spaceSpace
  this.controls_MheadNeck_headNeck_M_headAlign_spaceSpace.globalXfo = this.controls_MheadNeck_M_head_fk.globalXfo * this.controls_MheadNeck_headNeck_M_headAlign_spaceSpace.xfo;

  // solving parent child constraint controls_MheadNeck_headNeck_M_headHandle_spaceSpace
  this.controls_MheadNeck_headNeck_M_headHandle_spaceSpace.globalXfo = this.controls_MheadNeck_headNeck_M_headAlign_spaceSpace.globalXfo * this.controls_MheadNeck_headNeck_M_headHandle_spaceSpace.xfo;
  headNeck_M_NURBSNeckKLOp_controls[2] = this.controls_MheadNeck_headNeck_M_headHandle_spaceSpace.globalXfo.toMat44();
  headNeck_M_NURBSNeckKLOp_controls[3] = this.controls_MheadNeck_headNeck_M_headAlign_spaceSpace.globalXfo.toMat44();
  Mat44 headNeck_M_NURBSNeckKLOp_outputs[](4);
  this.headNeck_M_NURBSNeckKLOp.solve(
    headNeck_M_NURBSNeckKLOp_drawDebug,
    headNeck_M_NURBSNeckKLOp_rigScale,
    headNeck_M_NURBSNeckKLOp_numDeformers,
    headNeck_M_NURBSNeckKLOp_compressionAmt,
    headNeck_M_NURBSNeckKLOp_controlsRest,
    headNeck_M_NURBSNeckKLOp_controls,
    headNeck_M_NURBSNeckKLOp_outputs
  );

  // retrieving value for controls_MheadNeck_headNeck_M_neck01_cmpOutOut from solver headNeck_M_NURBSNeckKLOp
  this.controls_MheadNeck_headNeck_M_neck01_cmpOutOut.globalXfo = headNeck_M_NURBSNeckKLOp_outputs[0];

  // retrieving value for controls_MheadNeck_headNeck_M_neck02_cmpOutOut from solver headNeck_M_NURBSNeckKLOp
  this.controls_MheadNeck_headNeck_M_neck02_cmpOutOut.globalXfo = headNeck_M_NURBSNeckKLOp_outputs[1];

  // retrieving value for controls_MheadNeck_headNeck_M_neck03_cmpOutOut from solver headNeck_M_NURBSNeckKLOp
  this.controls_MheadNeck_headNeck_M_neck03_cmpOutOut.globalXfo = headNeck_M_NURBSNeckKLOp_outputs[2];

  // retrieving value for controls_MheadNeck_headNeck_M_neck04_cmpOutOut from solver headNeck_M_NURBSNeckKLOp
  this.controls_MheadNeck_headNeck_M_neck04_cmpOutOut.globalXfo = headNeck_M_NURBSNeckKLOp_outputs[3];

  // solving PoseConstraint constraint controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint
  this.controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint.constrainers[0] = this.controls_MheadNeck_headNeck_M_neck01_cmpOutOut.globalXfo;
  this.controls_MheadNeck_headNeck_M_neckBase_cmpOutOut.globalXfo = this.controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint.compute(this.controls_MheadNeck_headNeck_M_neckBase_cmpOutOut.globalXfo);

  // solving PoseConstraint constraint controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint
  this.controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint.constrainers[0] = this.controls_MheadNeck_headNeck_M_neck04_cmpOutOut.globalXfo;
  this.controls_MheadNeck_headNeck_M_neckEnd_cmpOutOut.globalXfo = this.controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint.compute(this.controls_MheadNeck_headNeck_M_neckEnd_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_MheadNeck_headNeck_M_headNeck_cmp
  this.deformers_MheadNeck_headNeck_M_headNeck_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_MheadNeck_headNeck_M_headNeck_cmp.xfo;

  // solving KLSolver headNeck_M_neckDeformerKLOp
  Boolean headNeck_M_neckDeformerKLOp_drawDebug = this.controls_headNeck_M_inputs_inputs_drawDebug.value;
  Scalar headNeck_M_neckDeformerKLOp_rigScale = this.controls_headNeck_M_inputs_inputs_rigScale.value;
  Mat44 headNeck_M_neckDeformerKLOp_constrainers[](4);
  headNeck_M_neckDeformerKLOp_constrainers[0] = this.controls_MheadNeck_headNeck_M_neck01_cmpOutOut.globalXfo.toMat44();
  headNeck_M_neckDeformerKLOp_constrainers[1] = this.controls_MheadNeck_headNeck_M_neck02_cmpOutOut.globalXfo.toMat44();
  headNeck_M_neckDeformerKLOp_constrainers[2] = this.controls_MheadNeck_headNeck_M_neck03_cmpOutOut.globalXfo.toMat44();
  headNeck_M_neckDeformerKLOp_constrainers[3] = this.controls_MheadNeck_headNeck_M_neck04_cmpOutOut.globalXfo.toMat44();
  Mat44 headNeck_M_neckDeformerKLOp_constrainees[](4);
  this.headNeck_M_neckDeformerKLOp.solve(
    headNeck_M_neckDeformerKLOp_drawDebug,
    headNeck_M_neckDeformerKLOp_rigScale,
    headNeck_M_neckDeformerKLOp_constrainers,
    headNeck_M_neckDeformerKLOp_constrainees
  );

  // retrieving value for deformers_MheadNeck_headNeck_M_neck01_def from solver headNeck_M_neckDeformerKLOp
  this.deformers_MheadNeck_headNeck_M_neck01_def.globalXfo = headNeck_M_neckDeformerKLOp_constrainees[0];

  // retrieving value for deformers_MheadNeck_headNeck_M_neck02_def from solver headNeck_M_neckDeformerKLOp
  this.deformers_MheadNeck_headNeck_M_neck02_def.globalXfo = headNeck_M_neckDeformerKLOp_constrainees[1];

  // retrieving value for deformers_MheadNeck_headNeck_M_neck03_def from solver headNeck_M_neckDeformerKLOp
  this.deformers_MheadNeck_headNeck_M_neck03_def.globalXfo = headNeck_M_neckDeformerKLOp_constrainees[2];

  // retrieving value for deformers_MheadNeck_headNeck_M_head_def from solver headNeck_M_neckDeformerKLOp
  this.deformers_MheadNeck_headNeck_M_head_def.globalXfo = headNeck_M_neckDeformerKLOp_constrainees[3];

  // solving parent child constraint controls_LpalmSocket_palmSocket_L_palmSocket_cmp
  this.controls_LpalmSocket_palmSocket_L_palmSocket_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_LpalmSocket_palmSocket_L_palmSocket_cmp.xfo;

  // solving parent child constraint controls_LpalmSocket_palmSocket_L_inputs_hrc
  this.controls_LpalmSocket_palmSocket_L_inputs_hrc.globalXfo = this.controls_LpalmSocket_palmSocket_L_palmSocket_cmp.globalXfo * this.controls_LpalmSocket_palmSocket_L_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint
  this.controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.constrainers[0] = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo;
  this.controls_LpalmSocket_palmSocket_L_parentSpace_cmpInIn.globalXfo = this.controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.compute(this.controls_LpalmSocket_palmSocket_L_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_LpalmSocket_palmSocket_L_globalSRT_cmpInIn
  this.controls_LpalmSocket_palmSocket_L_globalSRT_cmpInIn.globalXfo = this.controls_LpalmSocket_palmSocket_L_inputs_hrc.globalXfo * this.controls_LpalmSocket_palmSocket_L_globalSRT_cmpInIn.xfo;

  // solving parent child constraint controls_LpalmSocket_palmSocket_L_outputs_hrc
  this.controls_LpalmSocket_palmSocket_L_outputs_hrc.globalXfo = this.controls_LpalmSocket_palmSocket_L_palmSocket_cmp.globalXfo * this.controls_LpalmSocket_palmSocket_L_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_LpalmSocket_palmSocket_L_parentSpace_cmpInIn.globalXfo;
  this.controls_LpalmSocket_palmSocket_L_palmSocket_offset01_spaceSpace.globalXfo = this.controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_LpalmSocket_palmSocket_L_palmSocket_offset01_spaceSpace.globalXfo);

  // solving parent child constraint controls_LpalmSocket_L_palmSocket_offset_an
  this.controls_LpalmSocket_L_palmSocket_offset_an.globalXfo = this.controls_LpalmSocket_palmSocket_L_palmSocket_offset01_spaceSpace.globalXfo * this.controls_LpalmSocket_L_palmSocket_offset_an.xfo;

  // solving parent child constraint controls_LpalmSocket_L_palmSocket_an
  this.controls_LpalmSocket_L_palmSocket_an.globalXfo = this.controls_LpalmSocket_L_palmSocket_offset_an.globalXfo * this.controls_LpalmSocket_L_palmSocket_an.xfo;

  // solving PoseConstraint constraint controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint
  this.controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint.constrainers[0] = this.controls_LpalmSocket_L_palmSocket_an.globalXfo;
  this.controls_LpalmSocket_palmSocket_L_socket_cmpOutOut.globalXfo = this.controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint.compute(this.controls_LpalmSocket_palmSocket_L_socket_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_LpalmSocket_palmSocket_L_palmSocket_cmp
  this.deformers_LpalmSocket_palmSocket_L_palmSocket_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_LpalmSocket_palmSocket_L_palmSocket_cmp.xfo;

  // solving PoseConstraint constraint deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint
  this.deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint.constrainers[0] = this.controls_LpalmSocket_L_palmSocket_an.globalXfo;
  this.deformers_LpalmSocket_palmSocket_L_palmSocket_def.globalXfo = this.deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint.compute(this.deformers_LpalmSocket_palmSocket_L_palmSocket_def.globalXfo);

  // solving parent child constraint controls_RpalmSocket_palmSocket_R_palmSocket_cmp
  this.controls_RpalmSocket_palmSocket_R_palmSocket_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_RpalmSocket_palmSocket_R_palmSocket_cmp.xfo;

  // solving parent child constraint controls_RpalmSocket_palmSocket_R_inputs_hrc
  this.controls_RpalmSocket_palmSocket_R_inputs_hrc.globalXfo = this.controls_RpalmSocket_palmSocket_R_palmSocket_cmp.globalXfo * this.controls_RpalmSocket_palmSocket_R_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint
  this.controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.constrainers[0] = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo;
  this.controls_RpalmSocket_palmSocket_R_parentSpace_cmpInIn.globalXfo = this.controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.compute(this.controls_RpalmSocket_palmSocket_R_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_RpalmSocket_palmSocket_R_globalSRT_cmpInIn
  this.controls_RpalmSocket_palmSocket_R_globalSRT_cmpInIn.globalXfo = this.controls_RpalmSocket_palmSocket_R_inputs_hrc.globalXfo * this.controls_RpalmSocket_palmSocket_R_globalSRT_cmpInIn.xfo;

  // solving parent child constraint controls_RpalmSocket_palmSocket_R_outputs_hrc
  this.controls_RpalmSocket_palmSocket_R_outputs_hrc.globalXfo = this.controls_RpalmSocket_palmSocket_R_palmSocket_cmp.globalXfo * this.controls_RpalmSocket_palmSocket_R_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_RpalmSocket_palmSocket_R_parentSpace_cmpInIn.globalXfo;
  this.controls_RpalmSocket_palmSocket_R_palmSocket_offset01_spaceSpace.globalXfo = this.controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_RpalmSocket_palmSocket_R_palmSocket_offset01_spaceSpace.globalXfo);

  // solving parent child constraint controls_RpalmSocket_R_palmSocket_offset_an
  this.controls_RpalmSocket_R_palmSocket_offset_an.globalXfo = this.controls_RpalmSocket_palmSocket_R_palmSocket_offset01_spaceSpace.globalXfo * this.controls_RpalmSocket_R_palmSocket_offset_an.xfo;

  // solving parent child constraint controls_RpalmSocket_R_palmSocket_an
  this.controls_RpalmSocket_R_palmSocket_an.globalXfo = this.controls_RpalmSocket_R_palmSocket_offset_an.globalXfo * this.controls_RpalmSocket_R_palmSocket_an.xfo;

  // solving PoseConstraint constraint controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint
  this.controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint.constrainers[0] = this.controls_RpalmSocket_R_palmSocket_an.globalXfo;
  this.controls_RpalmSocket_palmSocket_R_socket_cmpOutOut.globalXfo = this.controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint.compute(this.controls_RpalmSocket_palmSocket_R_socket_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_RpalmSocket_palmSocket_R_palmSocket_cmp
  this.deformers_RpalmSocket_palmSocket_R_palmSocket_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_RpalmSocket_palmSocket_R_palmSocket_cmp.xfo;

  // solving PoseConstraint constraint deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint
  this.deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint.constrainers[0] = this.controls_RpalmSocket_R_palmSocket_an.globalXfo;
  this.deformers_RpalmSocket_palmSocket_R_palmSocket_def.globalXfo = this.deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint.compute(this.deformers_RpalmSocket_palmSocket_R_palmSocket_def.globalXfo);

  // solving parent child constraint controls_MheadSocket_headSocket_M_headSocket_cmp
  this.controls_MheadSocket_headSocket_M_headSocket_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_MheadSocket_headSocket_M_headSocket_cmp.xfo;

  // solving parent child constraint controls_MheadSocket_headSocket_M_inputs_hrc
  this.controls_MheadSocket_headSocket_M_inputs_hrc.globalXfo = this.controls_MheadSocket_headSocket_M_headSocket_cmp.globalXfo * this.controls_MheadSocket_headSocket_M_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint
  this.controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint.constrainers[0] = this.controls_MheadNeck_headNeck_M_neckEnd_cmpOutOut.globalXfo;
  this.controls_MheadSocket_headSocket_M_parentSpace_cmpInIn.globalXfo = this.controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint.compute(this.controls_MheadSocket_headSocket_M_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_MheadSocket_headSocket_M_globalSRT_cmpInIn
  this.controls_MheadSocket_headSocket_M_globalSRT_cmpInIn.globalXfo = this.controls_MheadSocket_headSocket_M_inputs_hrc.globalXfo * this.controls_MheadSocket_headSocket_M_globalSRT_cmpInIn.xfo;

  // solving parent child constraint controls_MheadSocket_headSocket_M_outputs_hrc
  this.controls_MheadSocket_headSocket_M_outputs_hrc.globalXfo = this.controls_MheadSocket_headSocket_M_headSocket_cmp.globalXfo * this.controls_MheadSocket_headSocket_M_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_MheadSocket_headSocket_M_parentSpace_cmpInIn.globalXfo;
  this.controls_MheadSocket_headSocket_M_headSocket_offset01_spaceSpace.globalXfo = this.controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_MheadSocket_headSocket_M_headSocket_offset01_spaceSpace.globalXfo);

  // solving parent child constraint controls_MheadSocket_M_headSocket_offset_an
  this.controls_MheadSocket_M_headSocket_offset_an.globalXfo = this.controls_MheadSocket_headSocket_M_headSocket_offset01_spaceSpace.globalXfo * this.controls_MheadSocket_M_headSocket_offset_an.xfo;

  // solving parent child constraint controls_MheadSocket_M_headSocket_an
  this.controls_MheadSocket_M_headSocket_an.globalXfo = this.controls_MheadSocket_M_headSocket_offset_an.globalXfo * this.controls_MheadSocket_M_headSocket_an.xfo;

  // solving PoseConstraint constraint controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint
  this.controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint.constrainers[0] = this.controls_MheadSocket_M_headSocket_an.globalXfo;
  this.controls_MheadSocket_headSocket_M_socket_cmpOutOut.globalXfo = this.controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint.compute(this.controls_MheadSocket_headSocket_M_socket_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_MheadSocket_headSocket_M_headSocket_cmp
  this.deformers_MheadSocket_headSocket_M_headSocket_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_MheadSocket_headSocket_M_headSocket_cmp.xfo;

  // solving PoseConstraint constraint deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint
  this.deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint.constrainers[0] = this.controls_MheadSocket_M_headSocket_an.globalXfo;
  this.deformers_MheadSocket_headSocket_M_headSocket_def.globalXfo = this.deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint.compute(this.deformers_MheadSocket_headSocket_M_headSocket_def.globalXfo);

  // solving parent child constraint controls_MsocketA_socketA_M_socketA_cmp
  this.controls_MsocketA_socketA_M_socketA_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_MsocketA_socketA_M_socketA_cmp.xfo;

  // solving parent child constraint controls_MsocketA_socketA_M_inputs_hrc
  this.controls_MsocketA_socketA_M_inputs_hrc.globalXfo = this.controls_MsocketA_socketA_M_socketA_cmp.globalXfo * this.controls_MsocketA_socketA_M_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint
  this.controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_MsocketA_socketA_M_parentSpace_cmpInIn.globalXfo = this.controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.compute(this.controls_MsocketA_socketA_M_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_MsocketA_socketA_M_globalSRT_cmpInIn
  this.controls_MsocketA_socketA_M_globalSRT_cmpInIn.globalXfo = this.controls_MsocketA_socketA_M_inputs_hrc.globalXfo * this.controls_MsocketA_socketA_M_globalSRT_cmpInIn.xfo;

  // solving parent child constraint controls_MsocketA_socketA_M_outputs_hrc
  this.controls_MsocketA_socketA_M_outputs_hrc.globalXfo = this.controls_MsocketA_socketA_M_socketA_cmp.globalXfo * this.controls_MsocketA_socketA_M_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint
  this.controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_MsocketA_socketA_M_parentSpace_cmpInIn.globalXfo;
  this.controls_MsocketA_socketA_M_socketA_offset01_spaceSpace.globalXfo = this.controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint.compute(this.controls_MsocketA_socketA_M_socketA_offset01_spaceSpace.globalXfo);

  // solving parent child constraint controls_MsocketA_M_socketA_offset_an
  this.controls_MsocketA_M_socketA_offset_an.globalXfo = this.controls_MsocketA_socketA_M_socketA_offset01_spaceSpace.globalXfo * this.controls_MsocketA_M_socketA_offset_an.xfo;

  // solving parent child constraint controls_MsocketA_M_socketA_an
  this.controls_MsocketA_M_socketA_an.globalXfo = this.controls_MsocketA_M_socketA_offset_an.globalXfo * this.controls_MsocketA_M_socketA_an.xfo;

  // solving PoseConstraint constraint controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint
  this.controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint.constrainers[0] = this.controls_MsocketA_M_socketA_an.globalXfo;
  this.controls_MsocketA_socketA_M_socket_cmpOutOut.globalXfo = this.controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint.compute(this.controls_MsocketA_socketA_M_socket_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_MsocketA_socketA_M_socketA_cmp
  this.deformers_MsocketA_socketA_M_socketA_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_MsocketA_socketA_M_socketA_cmp.xfo;

  // solving PoseConstraint constraint deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint
  this.deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint.constrainers[0] = this.controls_MsocketA_M_socketA_an.globalXfo;
  this.deformers_MsocketA_socketA_M_socketA_def.globalXfo = this.deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint.compute(this.deformers_MsocketA_socketA_M_socketA_def.globalXfo);

  // solving parent child constraint controls_MsocketB_socketB_M_socketB_cmp
  this.controls_MsocketB_socketB_M_socketB_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_MsocketB_socketB_M_socketB_cmp.xfo;

  // solving parent child constraint controls_MsocketB_socketB_M_inputs_hrc
  this.controls_MsocketB_socketB_M_inputs_hrc.globalXfo = this.controls_MsocketB_socketB_M_socketB_cmp.globalXfo * this.controls_MsocketB_socketB_M_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint
  this.controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_MsocketB_socketB_M_parentSpace_cmpInIn.globalXfo = this.controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.compute(this.controls_MsocketB_socketB_M_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_MsocketB_socketB_M_globalSRT_cmpInIn
  this.controls_MsocketB_socketB_M_globalSRT_cmpInIn.globalXfo = this.controls_MsocketB_socketB_M_inputs_hrc.globalXfo * this.controls_MsocketB_socketB_M_globalSRT_cmpInIn.xfo;

  // solving parent child constraint controls_MsocketB_socketB_M_outputs_hrc
  this.controls_MsocketB_socketB_M_outputs_hrc.globalXfo = this.controls_MsocketB_socketB_M_socketB_cmp.globalXfo * this.controls_MsocketB_socketB_M_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint
  this.controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_MsocketB_socketB_M_parentSpace_cmpInIn.globalXfo;
  this.controls_MsocketB_socketB_M_socketB_offset01_spaceSpace.globalXfo = this.controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint.compute(this.controls_MsocketB_socketB_M_socketB_offset01_spaceSpace.globalXfo);

  // solving parent child constraint controls_MsocketB_M_socketB_offset_an
  this.controls_MsocketB_M_socketB_offset_an.globalXfo = this.controls_MsocketB_socketB_M_socketB_offset01_spaceSpace.globalXfo * this.controls_MsocketB_M_socketB_offset_an.xfo;

  // solving parent child constraint controls_MsocketB_M_socketB_an
  this.controls_MsocketB_M_socketB_an.globalXfo = this.controls_MsocketB_M_socketB_offset_an.globalXfo * this.controls_MsocketB_M_socketB_an.xfo;

  // solving PoseConstraint constraint controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint
  this.controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint.constrainers[0] = this.controls_MsocketB_M_socketB_an.globalXfo;
  this.controls_MsocketB_socketB_M_socket_cmpOutOut.globalXfo = this.controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint.compute(this.controls_MsocketB_socketB_M_socket_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_MsocketB_socketB_M_socketB_cmp
  this.deformers_MsocketB_socketB_M_socketB_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_MsocketB_socketB_M_socketB_cmp.xfo;

  // solving PoseConstraint constraint deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint
  this.deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint.constrainers[0] = this.controls_MsocketB_M_socketB_an.globalXfo;
  this.deformers_MsocketB_socketB_M_socketB_def.globalXfo = this.deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint.compute(this.deformers_MsocketB_socketB_M_socketB_def.globalXfo);

  // solving parent child constraint controls_MsocketC_socketC_M_socketC_cmp
  this.controls_MsocketC_socketC_M_socketC_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_MsocketC_socketC_M_socketC_cmp.xfo;

  // solving parent child constraint controls_MsocketC_socketC_M_inputs_hrc
  this.controls_MsocketC_socketC_M_inputs_hrc.globalXfo = this.controls_MsocketC_socketC_M_socketC_cmp.globalXfo * this.controls_MsocketC_socketC_M_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint
  this.controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers[0] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  this.controls_MsocketC_socketC_M_parentSpace_cmpInIn.globalXfo = this.controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.compute(this.controls_MsocketC_socketC_M_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_MsocketC_socketC_M_globalSRT_cmpInIn
  this.controls_MsocketC_socketC_M_globalSRT_cmpInIn.globalXfo = this.controls_MsocketC_socketC_M_inputs_hrc.globalXfo * this.controls_MsocketC_socketC_M_globalSRT_cmpInIn.xfo;

  // solving parent child constraint controls_MsocketC_socketC_M_outputs_hrc
  this.controls_MsocketC_socketC_M_outputs_hrc.globalXfo = this.controls_MsocketC_socketC_M_socketC_cmp.globalXfo * this.controls_MsocketC_socketC_M_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint
  this.controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_MsocketC_socketC_M_parentSpace_cmpInIn.globalXfo;
  this.controls_MsocketC_socketC_M_socketC_offset01_spaceSpace.globalXfo = this.controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint.compute(this.controls_MsocketC_socketC_M_socketC_offset01_spaceSpace.globalXfo);

  // solving parent child constraint controls_MsocketC_M_socketC_offset_an
  this.controls_MsocketC_M_socketC_offset_an.globalXfo = this.controls_MsocketC_socketC_M_socketC_offset01_spaceSpace.globalXfo * this.controls_MsocketC_M_socketC_offset_an.xfo;

  // solving parent child constraint controls_MsocketC_M_socketC_an
  this.controls_MsocketC_M_socketC_an.globalXfo = this.controls_MsocketC_M_socketC_offset_an.globalXfo * this.controls_MsocketC_M_socketC_an.xfo;

  // solving PoseConstraint constraint controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint
  this.controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint.constrainers[0] = this.controls_MsocketC_M_socketC_an.globalXfo;
  this.controls_MsocketC_socketC_M_socket_cmpOutOut.globalXfo = this.controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint.compute(this.controls_MsocketC_socketC_M_socket_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_MsocketC_socketC_M_socketC_cmp
  this.deformers_MsocketC_socketC_M_socketC_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_MsocketC_socketC_M_socketC_cmp.xfo;

  // solving PoseConstraint constraint deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint
  this.deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint.constrainers[0] = this.controls_MsocketC_M_socketC_an.globalXfo;
  this.deformers_MsocketC_socketC_M_socketC_def.globalXfo = this.deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint.compute(this.deformers_MsocketC_socketC_M_socketC_def.globalXfo);

  // solving parent child constraint controls_MchestSocket_chestSocket_M_chestSocket_cmp
  this.controls_MchestSocket_chestSocket_M_chestSocket_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_MchestSocket_chestSocket_M_chestSocket_cmp.xfo;

  // solving parent child constraint controls_MchestSocket_chestSocket_M_inputs_hrc
  this.controls_MchestSocket_chestSocket_M_inputs_hrc.globalXfo = this.controls_MchestSocket_chestSocket_M_chestSocket_cmp.globalXfo * this.controls_MchestSocket_chestSocket_M_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint
  this.controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_spineEnd_cmpOutOut.globalXfo;
  this.controls_MchestSocket_chestSocket_M_parentSpace_cmpInIn.globalXfo = this.controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.compute(this.controls_MchestSocket_chestSocket_M_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_MchestSocket_chestSocket_M_globalSRT_cmpInIn
  this.controls_MchestSocket_chestSocket_M_globalSRT_cmpInIn.globalXfo = this.controls_MchestSocket_chestSocket_M_inputs_hrc.globalXfo * this.controls_MchestSocket_chestSocket_M_globalSRT_cmpInIn.xfo;

  // solving parent child constraint controls_MchestSocket_chestSocket_M_outputs_hrc
  this.controls_MchestSocket_chestSocket_M_outputs_hrc.globalXfo = this.controls_MchestSocket_chestSocket_M_chestSocket_cmp.globalXfo * this.controls_MchestSocket_chestSocket_M_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_MchestSocket_chestSocket_M_parentSpace_cmpInIn.globalXfo;
  this.controls_MchestSocket_chestSocket_M_chestSocket_offset01_spaceSpace.globalXfo = this.controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_MchestSocket_chestSocket_M_chestSocket_offset01_spaceSpace.globalXfo);

  // solving parent child constraint controls_MchestSocket_M_chestSocket_offset_an
  this.controls_MchestSocket_M_chestSocket_offset_an.globalXfo = this.controls_MchestSocket_chestSocket_M_chestSocket_offset01_spaceSpace.globalXfo * this.controls_MchestSocket_M_chestSocket_offset_an.xfo;

  // solving parent child constraint controls_MchestSocket_M_chestSocket_an
  this.controls_MchestSocket_M_chestSocket_an.globalXfo = this.controls_MchestSocket_M_chestSocket_offset_an.globalXfo * this.controls_MchestSocket_M_chestSocket_an.xfo;

  // solving PoseConstraint constraint controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint
  this.controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint.constrainers[0] = this.controls_MchestSocket_M_chestSocket_an.globalXfo;
  this.controls_MchestSocket_chestSocket_M_socket_cmpOutOut.globalXfo = this.controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint.compute(this.controls_MchestSocket_chestSocket_M_socket_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_MchestSocket_chestSocket_M_chestSocket_cmp
  this.deformers_MchestSocket_chestSocket_M_chestSocket_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_MchestSocket_chestSocket_M_chestSocket_cmp.xfo;

  // solving PoseConstraint constraint deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint
  this.deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint.constrainers[0] = this.controls_MchestSocket_M_chestSocket_an.globalXfo;
  this.deformers_MchestSocket_chestSocket_M_chestSocket_def.globalXfo = this.deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint.compute(this.deformers_MchestSocket_chestSocket_M_chestSocket_def.globalXfo);

  // solving parent child constraint controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp
  this.controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp.globalXfo = this.bipedguide_biped_guide_controls.globalXfo * this.controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp.xfo;

  // solving parent child constraint controls_MhipsSocket_hipsSocket_M_inputs_hrc
  this.controls_MhipsSocket_hipsSocket_M_inputs_hrc.globalXfo = this.controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp.globalXfo * this.controls_MhipsSocket_hipsSocket_M_inputs_hrc.xfo;

  // solving PoseConstraint constraint controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint
  this.controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint.constrainers[0] = this.controls_Mspine_spine_M_hips_cmpOutOut.globalXfo;
  this.controls_MhipsSocket_hipsSocket_M_parentSpace_cmpInIn.globalXfo = this.controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint.compute(this.controls_MhipsSocket_hipsSocket_M_parentSpace_cmpInIn.globalXfo);

  // solving parent child constraint controls_MhipsSocket_hipsSocket_M_globalSRT_cmpInIn
  this.controls_MhipsSocket_hipsSocket_M_globalSRT_cmpInIn.globalXfo = this.controls_MhipsSocket_hipsSocket_M_inputs_hrc.globalXfo * this.controls_MhipsSocket_hipsSocket_M_globalSRT_cmpInIn.xfo;

  // solving parent child constraint controls_MhipsSocket_hipsSocket_M_outputs_hrc
  this.controls_MhipsSocket_hipsSocket_M_outputs_hrc.globalXfo = this.controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp.globalXfo * this.controls_MhipsSocket_hipsSocket_M_outputs_hrc.xfo;

  // solving PoseConstraint constraint controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_MhipsSocket_hipsSocket_M_parentSpace_cmpInIn.globalXfo;
  this.controls_MhipsSocket_hipsSocket_M_hipsSocket_offset01_spaceSpace.globalXfo = this.controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_MhipsSocket_hipsSocket_M_hipsSocket_offset01_spaceSpace.globalXfo);

  // solving parent child constraint controls_MhipsSocket_M_hipsSocket_offset_an
  this.controls_MhipsSocket_M_hipsSocket_offset_an.globalXfo = this.controls_MhipsSocket_hipsSocket_M_hipsSocket_offset01_spaceSpace.globalXfo * this.controls_MhipsSocket_M_hipsSocket_offset_an.xfo;

  // solving parent child constraint controls_MhipsSocket_M_hipsSocket_an
  this.controls_MhipsSocket_M_hipsSocket_an.globalXfo = this.controls_MhipsSocket_M_hipsSocket_offset_an.globalXfo * this.controls_MhipsSocket_M_hipsSocket_an.xfo;

  // solving PoseConstraint constraint controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint
  this.controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint.constrainers[0] = this.controls_MhipsSocket_M_hipsSocket_an.globalXfo;
  this.controls_MhipsSocket_hipsSocket_M_socket_cmpOutOut.globalXfo = this.controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint.compute(this.controls_MhipsSocket_hipsSocket_M_socket_cmpOutOut.globalXfo);

  // solving parent child constraint deformers_MhipsSocket_hipsSocket_M_hipsSocket_cmp
  this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_cmp.globalXfo = this.bipedguide_biped_guide_deformers.globalXfo * this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_cmp.xfo;

  // solving PoseConstraint constraint deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint
  this.deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint.constrainers[0] = this.controls_MhipsSocket_M_hipsSocket_an.globalXfo;
  this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_def.globalXfo = this.deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint.compute(this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_def.globalXfo);
  UInt64 timerEnd = getCurrentTicks();
  this.solveTimeMs = 1000.0 * getSecondsBetweenTicks(timerStart, timerEnd);
}

function Xfo[] KRK_biped_guide.getJointXfos() {
  Xfo result[](78);
  result[0] = this.deformers_Mspine_spine_M_spine01_def.globalXfo;
  result[1] = this.deformers_Mspine_spine_M_spine02_def.globalXfo;
  result[2] = this.deformers_Mspine_spine_M_spine03_def.globalXfo;
  result[3] = this.deformers_Mspine_spine_M_spine04_def.globalXfo;
  result[4] = this.deformers_Mspine_spine_M_spine05_def.globalXfo;
  result[5] = this.deformers_Mspine_spine_M_spine06_def.globalXfo;
  result[6] = this.deformers_Lshoulder_shoulder_L_shldr_def.globalXfo;
  result[7] = this.deformers_Rshoulder_shoulder_R_shldr_def.globalXfo;
  result[8] = this.deformers_Lleg_leg_L_upLeg_def.globalXfo;
  result[9] = this.deformers_Lleg_leg_L_loLeg_def.globalXfo;
  result[10] = this.deformers_Lleg_leg_L_legend_def.globalXfo;
  result[11] = this.deformers_Lfoot_foot_L_foot_def.globalXfo;
  result[12] = this.deformers_Lfoot_foot_L_ball_def.globalXfo;
  result[13] = this.deformers_Rfoot_foot_R_foot_def.globalXfo;
  result[14] = this.deformers_Rfoot_foot_R_ball_def.globalXfo;
  result[15] = this.deformers_Rleg_leg_R_upLeg_def.globalXfo;
  result[16] = this.deformers_Rleg_leg_R_loLeg_def.globalXfo;
  result[17] = this.deformers_Rleg_leg_R_legend_def.globalXfo;
  result[18] = this.deformers_Rarm_arm_R_upArm_def.globalXfo;
  result[19] = this.deformers_Rarm_arm_R_loArm_def.globalXfo;
  result[20] = this.deformers_Rarm_arm_R_armend_def.globalXfo;
  result[21] = this.deformers_Larm_arm_L_upArm_def.globalXfo;
  result[22] = this.deformers_Larm_arm_L_loArm_def.globalXfo;
  result[23] = this.deformers_Larm_arm_L_armend_def.globalXfo;
  result[24] = this.deformers_Lhand_hand_L_hand_def.globalXfo;
  result[25] = this.deformers_Lhand_hand_L_palm_def.globalXfo;
  result[26] = this.deformers_Lhand_hand_L_index_palm_def.globalXfo;
  result[27] = this.deformers_Lhand_hand_L_index_base_def.globalXfo;
  result[28] = this.deformers_Lhand_hand_L_index_mid_def.globalXfo;
  result[29] = this.deformers_Lhand_hand_L_index_tip_def.globalXfo;
  result[30] = this.deformers_Lhand_hand_L_middle_palm_def.globalXfo;
  result[31] = this.deformers_Lhand_hand_L_middle_base_def.globalXfo;
  result[32] = this.deformers_Lhand_hand_L_middle_mid_def.globalXfo;
  result[33] = this.deformers_Lhand_hand_L_middle_tip_def.globalXfo;
  result[34] = this.deformers_Lhand_hand_L_ring_palm_def.globalXfo;
  result[35] = this.deformers_Lhand_hand_L_ring_base_def.globalXfo;
  result[36] = this.deformers_Lhand_hand_L_ring_mid_def.globalXfo;
  result[37] = this.deformers_Lhand_hand_L_ring_tip_def.globalXfo;
  result[38] = this.deformers_Lhand_hand_L_pinky_palm_def.globalXfo;
  result[39] = this.deformers_Lhand_hand_L_pinky_base_def.globalXfo;
  result[40] = this.deformers_Lhand_hand_L_pinky_mid_def.globalXfo;
  result[41] = this.deformers_Lhand_hand_L_pinky_tip_def.globalXfo;
  result[42] = this.deformers_Lhand_hand_L_thumb_palm_def.globalXfo;
  result[43] = this.deformers_Lhand_hand_L_thumb_base_def.globalXfo;
  result[44] = this.deformers_Lhand_hand_L_thumb_tip_def.globalXfo;
  result[45] = this.deformers_Rhand_hand_R_hand_def.globalXfo;
  result[46] = this.deformers_Rhand_hand_R_palm_def.globalXfo;
  result[47] = this.deformers_Rhand_hand_R_index_palm_def.globalXfo;
  result[48] = this.deformers_Rhand_hand_R_index_base_def.globalXfo;
  result[49] = this.deformers_Rhand_hand_R_index_mid_def.globalXfo;
  result[50] = this.deformers_Rhand_hand_R_index_tip_def.globalXfo;
  result[51] = this.deformers_Rhand_hand_R_middle_palm_def.globalXfo;
  result[52] = this.deformers_Rhand_hand_R_middle_base_def.globalXfo;
  result[53] = this.deformers_Rhand_hand_R_middle_mid_def.globalXfo;
  result[54] = this.deformers_Rhand_hand_R_middle_tip_def.globalXfo;
  result[55] = this.deformers_Rhand_hand_R_ring_palm_def.globalXfo;
  result[56] = this.deformers_Rhand_hand_R_ring_base_def.globalXfo;
  result[57] = this.deformers_Rhand_hand_R_ring_mid_def.globalXfo;
  result[58] = this.deformers_Rhand_hand_R_ring_tip_def.globalXfo;
  result[59] = this.deformers_Rhand_hand_R_pinky_palm_def.globalXfo;
  result[60] = this.deformers_Rhand_hand_R_pinky_base_def.globalXfo;
  result[61] = this.deformers_Rhand_hand_R_pinky_mid_def.globalXfo;
  result[62] = this.deformers_Rhand_hand_R_pinky_tip_def.globalXfo;
  result[63] = this.deformers_Rhand_hand_R_thumb_palm_def.globalXfo;
  result[64] = this.deformers_Rhand_hand_R_thumb_base_def.globalXfo;
  result[65] = this.deformers_Rhand_hand_R_thumb_tip_def.globalXfo;
  result[66] = this.deformers_MheadNeck_headNeck_M_neck01_def.globalXfo;
  result[67] = this.deformers_MheadNeck_headNeck_M_neck02_def.globalXfo;
  result[68] = this.deformers_MheadNeck_headNeck_M_neck03_def.globalXfo;
  result[69] = this.deformers_MheadNeck_headNeck_M_head_def.globalXfo;
  result[70] = this.deformers_LpalmSocket_palmSocket_L_palmSocket_def.globalXfo;
  result[71] = this.deformers_RpalmSocket_palmSocket_R_palmSocket_def.globalXfo;
  result[72] = this.deformers_MheadSocket_headSocket_M_headSocket_def.globalXfo;
  result[73] = this.deformers_MsocketA_socketA_M_socketA_def.globalXfo;
  result[74] = this.deformers_MsocketB_socketB_M_socketB_def.globalXfo;
  result[75] = this.deformers_MsocketC_socketC_M_socketC_def.globalXfo;
  result[76] = this.deformers_MchestSocket_chestSocket_M_chestSocket_def.globalXfo;
  result[77] = this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_def.globalXfo;
  return result;
}

function Xfo[] KRK_biped_guide.getAllXfos() {
  Xfo result[](499);
  result[0] = this.biped_guide.globalXfo;
  result[1] = this.bipedguide_biped_guide_controls.globalXfo;
  result[2] = this.bipedguide_biped_guide_deformers.globalXfo;
  result[3] = this.controls_Mmain_main_M_main_cmp.globalXfo;
  result[4] = this.controls_Mmain_main_M_inputs_hrc.globalXfo;
  result[5] = this.controls_Mmain_main_M_outputs_hrc.globalXfo;
  result[6] = this.controls_Mmain_main_M_master_cmpOutOut.globalXfo;
  result[7] = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
  result[8] = this.controls_Mmain_main_M_cog_cmpOutOut.globalXfo;
  result[9] = this.controls_Mmain_main_M_master01_spaceSpace.globalXfo;
  result[10] = this.controls_Mmain_M_master_fk.globalXfo;
  result[11] = this.controls_Mmain_main_M_offset01_spaceSpace.globalXfo;
  result[12] = this.controls_Mmain_M_offset_fk.globalXfo;
  result[13] = this.controls_Mmain_main_M_cog01_spaceSpace.globalXfo;
  result[14] = this.controls_Mmain_M_cog_fk.globalXfo;
  result[15] = this.controls_Mmain_M_vis_an.globalXfo;
  result[16] = this.controls_Mspine_spine_M_spine_cmp.globalXfo;
  result[17] = this.controls_Mspine_spine_M_inputs_hrc.globalXfo;
  result[18] = this.controls_Mspine_spine_M_parentSpace_cmpInIn.globalXfo;
  result[19] = this.controls_Mspine_spine_M_outputs_hrc.globalXfo;
  result[20] = this.controls_Mspine_spine_M_hips_cmpOutOut.globalXfo;
  result[21] = this.controls_Mspine_spine_M_spineBase_cmpOutOut.globalXfo;
  result[22] = this.controls_Mspine_spine_M_pelvis_cmpOutOut.globalXfo;
  result[23] = this.controls_Mspine_spine_M_spineEnd_cmpOutOut.globalXfo;
  result[24] = this.controls_Mspine_spine_M_spine01_cmpOutOut.globalXfo;
  result[25] = this.controls_Mspine_spine_M_spine02_cmpOutOut.globalXfo;
  result[26] = this.controls_Mspine_spine_M_spine03_cmpOutOut.globalXfo;
  result[27] = this.controls_Mspine_spine_M_spine04_cmpOutOut.globalXfo;
  result[28] = this.controls_Mspine_spine_M_spine05_cmpOutOut.globalXfo;
  result[29] = this.controls_Mspine_spine_M_spine06_cmpOutOut.globalXfo;
  result[30] = this.controls_Mspine_spine_M_hips01_spaceSpace.globalXfo;
  result[31] = this.controls_Mspine_M_hips_fk.globalXfo;
  result[32] = this.controls_Mspine_spine_M_pelvis_spaceSpace.globalXfo;
  result[33] = this.controls_Mspine_spine_M_torso01_spaceSpace.globalXfo;
  result[34] = this.controls_Mspine_M_torso_fk.globalXfo;
  result[35] = this.controls_Mspine_spine_M_chest01_spaceSpace.globalXfo;
  result[36] = this.controls_Mspine_M_chest_fk.globalXfo;
  result[37] = this.controls_Mspine_spine_M_upChest01_spaceSpace.globalXfo;
  result[38] = this.controls_Mspine_M_upChest_fk.globalXfo;
  result[39] = this.controls_Mspine_spine_M_neck_spaceSpace.globalXfo;
  result[40] = this.deformers_Mspine_spine_M_spine_cmp.globalXfo;
  result[41] = this.deformers_Mspine_spine_M_spine01_def.globalXfo;
  result[42] = this.deformers_Mspine_spine_M_spine02_def.globalXfo;
  result[43] = this.deformers_Mspine_spine_M_spine03_def.globalXfo;
  result[44] = this.deformers_Mspine_spine_M_spine04_def.globalXfo;
  result[45] = this.deformers_Mspine_spine_M_spine05_def.globalXfo;
  result[46] = this.deformers_Mspine_spine_M_spine06_def.globalXfo;
  result[47] = this.controls_Lshoulder_shoulder_L_shoulder_cmp.globalXfo;
  result[48] = this.controls_Lshoulder_shoulder_L_inputs_hrc.globalXfo;
  result[49] = this.controls_Lshoulder_shoulder_L_parentSpace_cmpInIn.globalXfo;
  result[50] = this.controls_Lshoulder_shoulder_L_outputs_hrc.globalXfo;
  result[51] = this.controls_Lshoulder_shoulder_L_shldr_cmpOutOut.globalXfo;
  result[52] = this.controls_Lshoulder_shoulder_L_shldrEnd_cmpOutOut.globalXfo;
  result[53] = this.controls_Lshoulder_shoulder_L_shldr01_spaceSpace.globalXfo;
  result[54] = this.controls_Lshoulder_L_shldr_fk.globalXfo;
  result[55] = this.controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace.globalXfo;
  result[56] = this.deformers_Lshoulder_shoulder_L_shoulder_cmp.globalXfo;
  result[57] = this.deformers_Lshoulder_shoulder_L_shldr_def.globalXfo;
  result[58] = this.controls_Rshoulder_shoulder_R_shoulder_cmp.globalXfo;
  result[59] = this.controls_Rshoulder_shoulder_R_inputs_hrc.globalXfo;
  result[60] = this.controls_Rshoulder_shoulder_R_parentSpace_cmpInIn.globalXfo;
  result[61] = this.controls_Rshoulder_shoulder_R_outputs_hrc.globalXfo;
  result[62] = this.controls_Rshoulder_shoulder_R_shldr_cmpOutOut.globalXfo;
  result[63] = this.controls_Rshoulder_shoulder_R_shldrEnd_cmpOutOut.globalXfo;
  result[64] = this.controls_Rshoulder_shoulder_R_shldr01_spaceSpace.globalXfo;
  result[65] = this.controls_Rshoulder_R_shldr_fk.globalXfo;
  result[66] = this.controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace.globalXfo;
  result[67] = this.deformers_Rshoulder_shoulder_R_shoulder_cmp.globalXfo;
  result[68] = this.deformers_Rshoulder_shoulder_R_shldr_def.globalXfo;
  result[69] = this.controls_Lleg_leg_L_leg_cmp.globalXfo;
  result[70] = this.controls_Lleg_leg_L_inputs_hrc.globalXfo;
  result[71] = this.controls_Lleg_leg_L_globalSRT_cmpInIn.globalXfo;
  result[72] = this.controls_Lleg_leg_L_parentSpace_cmpInIn.globalXfo;
  result[73] = this.controls_Lleg_leg_L_ikGoalInput_cmpInIn.globalXfo;
  result[74] = this.controls_Lleg_leg_L_outputs_hrc.globalXfo;
  result[75] = this.controls_Lleg_leg_L_uplimb_cmpOutOut.globalXfo;
  result[76] = this.controls_Lleg_leg_L_lolimb_cmpOutOut.globalXfo;
  result[77] = this.controls_Lleg_leg_L_endlimb_cmpOutOut.globalXfo;
  result[78] = this.controls_Lleg_leg_L_upLeg01_spaceSpace.globalXfo;
  result[79] = this.controls_Lleg_L_upLeg_fk.globalXfo;
  result[80] = this.controls_Lleg_leg_L_loLeg01_spaceSpace.globalXfo;
  result[81] = this.controls_Lleg_L_loLeg_fk.globalXfo;
  result[82] = this.controls_Lleg_leg_L_footIK_spaceSpace.globalXfo;
  result[83] = this.controls_Lleg_L_footIK_xfo.globalXfo;
  result[84] = this.controls_Lleg_leg_L_legUpV01_spaceSpace.globalXfo;
  result[85] = this.controls_Lleg_L_legUpV_an.globalXfo;
  result[86] = this.controls_Lleg_leg_L_legUpVIK_spaceSpace.globalXfo;
  result[87] = this.controls_Lleg_leg_L_legIKMaster_spaceSpace.globalXfo;
  result[88] = this.deformers_Lleg_leg_L_leg_cmp.globalXfo;
  result[89] = this.deformers_Lleg_leg_L_upLeg_def.globalXfo;
  result[90] = this.deformers_Lleg_leg_L_loLeg_def.globalXfo;
  result[91] = this.deformers_Lleg_leg_L_legend_def.globalXfo;
  result[92] = this.controls_Lfoot_foot_L_foot_cmp.globalXfo;
  result[93] = this.controls_Lfoot_foot_L_inputs_hrc.globalXfo;
  result[94] = this.controls_Lfoot_foot_L_globalSRT_cmpInIn.globalXfo;
  result[95] = this.controls_Lfoot_foot_L_parentSpace_cmpInIn.globalXfo;
  result[96] = this.controls_Lfoot_foot_L_outputs_hrc.globalXfo;
  result[97] = this.controls_Lfoot_foot_L_foot_cmpOutOut.globalXfo;
  result[98] = this.controls_Lfoot_foot_L_ball_cmpOutOut.globalXfo;
  result[99] = this.controls_Lfoot_foot_L_ikgoal_cmpOutOut.globalXfo;
  result[100] = this.controls_Lfoot_L_footRockerFoot_out_xfo.globalXfo;
  result[101] = this.controls_Lfoot_L_footRockerBall_out_xfo.globalXfo;
  result[102] = this.controls_Lfoot_L_IKFootBlendKLOpFoot_out_xfo.globalXfo;
  result[103] = this.controls_Lfoot_L_IKFootBlendKLOpBall_out_xfo.globalXfo;
  result[104] = this.controls_Lfoot_foot_L_foot01_spaceSpace.globalXfo;
  result[105] = this.controls_Lfoot_L_foot_ik.globalXfo;
  result[106] = this.controls_Lfoot_L_ikGoalRef_xfo.globalXfo;
  result[107] = this.controls_Lfoot_L_ballJoint_xfo.globalXfo;
  result[108] = this.controls_Lfoot_L_footJoint_xfo.globalXfo;
  result[109] = this.controls_Lfoot_L_heelPivot_xfo.globalXfo;
  result[110] = this.controls_Lfoot_L_ballPivot_xfo.globalXfo;
  result[111] = this.controls_Lfoot_L_ballTipPivot_xfo.globalXfo;
  result[112] = this.controls_Lfoot_L_innerPivot_xfo.globalXfo;
  result[113] = this.controls_Lfoot_L_outerPivot_xfo.globalXfo;
  result[114] = this.controls_Lfoot_foot_L_foot02_spaceSpace.globalXfo;
  result[115] = this.controls_Lfoot_L_foot_fk.globalXfo;
  result[116] = this.controls_Lfoot_foot_L_ball01_spaceSpace.globalXfo;
  result[117] = this.controls_Lfoot_L_ball_fk.globalXfo;
  result[118] = this.deformers_Lfoot_foot_L_foot_cmp.globalXfo;
  result[119] = this.deformers_Lfoot_foot_L_foot_def.globalXfo;
  result[120] = this.deformers_Lfoot_foot_L_ball_def.globalXfo;
  result[121] = this.controls_Rfoot_foot_R_foot_cmp.globalXfo;
  result[122] = this.controls_Rfoot_foot_R_inputs_hrc.globalXfo;
  result[123] = this.controls_Rfoot_foot_R_globalSRT_cmpInIn.globalXfo;
  result[124] = this.controls_Rfoot_foot_R_parentSpace_cmpInIn.globalXfo;
  result[125] = this.controls_Rfoot_foot_R_outputs_hrc.globalXfo;
  result[126] = this.controls_Rfoot_foot_R_foot_cmpOutOut.globalXfo;
  result[127] = this.controls_Rfoot_foot_R_ball_cmpOutOut.globalXfo;
  result[128] = this.controls_Rfoot_foot_R_ikgoal_cmpOutOut.globalXfo;
  result[129] = this.controls_Rfoot_R_footRockerFoot_out_xfo.globalXfo;
  result[130] = this.controls_Rfoot_R_footRockerBall_out_xfo.globalXfo;
  result[131] = this.controls_Rfoot_R_IKFootBlendKLOpFoot_out_xfo.globalXfo;
  result[132] = this.controls_Rfoot_R_IKFootBlendKLOpBall_out_xfo.globalXfo;
  result[133] = this.controls_Rfoot_foot_R_foot01_spaceSpace.globalXfo;
  result[134] = this.controls_Rfoot_R_foot_ik.globalXfo;
  result[135] = this.controls_Rfoot_R_ikGoalRef_xfo.globalXfo;
  result[136] = this.controls_Rfoot_R_ballJoint_xfo.globalXfo;
  result[137] = this.controls_Rfoot_R_footJoint_xfo.globalXfo;
  result[138] = this.controls_Rfoot_R_heelPivot_xfo.globalXfo;
  result[139] = this.controls_Rfoot_R_ballPivot_xfo.globalXfo;
  result[140] = this.controls_Rfoot_R_ballTipPivot_xfo.globalXfo;
  result[141] = this.controls_Rfoot_R_innerPivot_xfo.globalXfo;
  result[142] = this.controls_Rfoot_R_outerPivot_xfo.globalXfo;
  result[143] = this.controls_Rfoot_foot_R_foot02_spaceSpace.globalXfo;
  result[144] = this.controls_Rfoot_R_foot_fk.globalXfo;
  result[145] = this.controls_Rfoot_foot_R_ball01_spaceSpace.globalXfo;
  result[146] = this.controls_Rfoot_R_ball_fk.globalXfo;
  result[147] = this.deformers_Rfoot_foot_R_foot_cmp.globalXfo;
  result[148] = this.deformers_Rfoot_foot_R_foot_def.globalXfo;
  result[149] = this.deformers_Rfoot_foot_R_ball_def.globalXfo;
  result[150] = this.controls_Rleg_leg_R_leg_cmp.globalXfo;
  result[151] = this.controls_Rleg_leg_R_inputs_hrc.globalXfo;
  result[152] = this.controls_Rleg_leg_R_globalSRT_cmpInIn.globalXfo;
  result[153] = this.controls_Rleg_leg_R_parentSpace_cmpInIn.globalXfo;
  result[154] = this.controls_Rleg_leg_R_ikGoalInput_cmpInIn.globalXfo;
  result[155] = this.controls_Rleg_leg_R_outputs_hrc.globalXfo;
  result[156] = this.controls_Rleg_leg_R_uplimb_cmpOutOut.globalXfo;
  result[157] = this.controls_Rleg_leg_R_lolimb_cmpOutOut.globalXfo;
  result[158] = this.controls_Rleg_leg_R_endlimb_cmpOutOut.globalXfo;
  result[159] = this.controls_Rleg_leg_R_upLeg01_spaceSpace.globalXfo;
  result[160] = this.controls_Rleg_R_upLeg_fk.globalXfo;
  result[161] = this.controls_Rleg_leg_R_loLeg01_spaceSpace.globalXfo;
  result[162] = this.controls_Rleg_R_loLeg_fk.globalXfo;
  result[163] = this.controls_Rleg_leg_R_footIK_spaceSpace.globalXfo;
  result[164] = this.controls_Rleg_R_footIK_xfo.globalXfo;
  result[165] = this.controls_Rleg_leg_R_legUpV01_spaceSpace.globalXfo;
  result[166] = this.controls_Rleg_R_legUpV_an.globalXfo;
  result[167] = this.controls_Rleg_leg_R_legUpVIK_spaceSpace.globalXfo;
  result[168] = this.controls_Rleg_leg_R_legIKMaster_spaceSpace.globalXfo;
  result[169] = this.deformers_Rleg_leg_R_leg_cmp.globalXfo;
  result[170] = this.deformers_Rleg_leg_R_upLeg_def.globalXfo;
  result[171] = this.deformers_Rleg_leg_R_loLeg_def.globalXfo;
  result[172] = this.deformers_Rleg_leg_R_legend_def.globalXfo;
  result[173] = this.controls_Rarm_arm_R_arm_cmp.globalXfo;
  result[174] = this.controls_Rarm_arm_R_inputs_hrc.globalXfo;
  result[175] = this.controls_Rarm_arm_R_globalSRT_cmpInIn.globalXfo;
  result[176] = this.controls_Rarm_arm_R_parentSpace_cmpInIn.globalXfo;
  result[177] = this.controls_Rarm_arm_R_ikGoalInput_cmpInIn.globalXfo;
  result[178] = this.controls_Rarm_arm_R_outputs_hrc.globalXfo;
  result[179] = this.controls_Rarm_arm_R_uplimb_cmpOutOut.globalXfo;
  result[180] = this.controls_Rarm_arm_R_lolimb_cmpOutOut.globalXfo;
  result[181] = this.controls_Rarm_arm_R_endlimb_cmpOutOut.globalXfo;
  result[182] = this.controls_Rarm_arm_R_upArm01_spaceSpace.globalXfo;
  result[183] = this.controls_Rarm_R_upArm_fk.globalXfo;
  result[184] = this.controls_Rarm_arm_R_loArm01_spaceSpace.globalXfo;
  result[185] = this.controls_Rarm_R_loArm_fk.globalXfo;
  result[186] = this.controls_Rarm_arm_R_handIK_spaceSpace.globalXfo;
  result[187] = this.controls_Rarm_R_handIK_xfo.globalXfo;
  result[188] = this.controls_Rarm_arm_R_armUpV01_spaceSpace.globalXfo;
  result[189] = this.controls_Rarm_R_armUpV_an.globalXfo;
  result[190] = this.controls_Rarm_arm_R_armUpVIK_spaceSpace.globalXfo;
  result[191] = this.controls_Rarm_arm_R_armIKMaster_spaceSpace.globalXfo;
  result[192] = this.deformers_Rarm_arm_R_arm_cmp.globalXfo;
  result[193] = this.deformers_Rarm_arm_R_upArm_def.globalXfo;
  result[194] = this.deformers_Rarm_arm_R_loArm_def.globalXfo;
  result[195] = this.deformers_Rarm_arm_R_armend_def.globalXfo;
  result[196] = this.controls_Larm_arm_L_arm_cmp.globalXfo;
  result[197] = this.controls_Larm_arm_L_inputs_hrc.globalXfo;
  result[198] = this.controls_Larm_arm_L_globalSRT_cmpInIn.globalXfo;
  result[199] = this.controls_Larm_arm_L_parentSpace_cmpInIn.globalXfo;
  result[200] = this.controls_Larm_arm_L_ikGoalInput_cmpInIn.globalXfo;
  result[201] = this.controls_Larm_arm_L_outputs_hrc.globalXfo;
  result[202] = this.controls_Larm_arm_L_uplimb_cmpOutOut.globalXfo;
  result[203] = this.controls_Larm_arm_L_lolimb_cmpOutOut.globalXfo;
  result[204] = this.controls_Larm_arm_L_endlimb_cmpOutOut.globalXfo;
  result[205] = this.controls_Larm_arm_L_upArm01_spaceSpace.globalXfo;
  result[206] = this.controls_Larm_L_upArm_fk.globalXfo;
  result[207] = this.controls_Larm_arm_L_loArm01_spaceSpace.globalXfo;
  result[208] = this.controls_Larm_L_loArm_fk.globalXfo;
  result[209] = this.controls_Larm_arm_L_handIK_spaceSpace.globalXfo;
  result[210] = this.controls_Larm_L_handIK_xfo.globalXfo;
  result[211] = this.controls_Larm_arm_L_armUpV01_spaceSpace.globalXfo;
  result[212] = this.controls_Larm_L_armUpV_an.globalXfo;
  result[213] = this.controls_Larm_arm_L_armUpVIK_spaceSpace.globalXfo;
  result[214] = this.controls_Larm_arm_L_armIKMaster_spaceSpace.globalXfo;
  result[215] = this.deformers_Larm_arm_L_arm_cmp.globalXfo;
  result[216] = this.deformers_Larm_arm_L_upArm_def.globalXfo;
  result[217] = this.deformers_Larm_arm_L_loArm_def.globalXfo;
  result[218] = this.deformers_Larm_arm_L_armend_def.globalXfo;
  result[219] = this.controls_Lhand_hand_L_hand_cmp.globalXfo;
  result[220] = this.controls_Lhand_hand_L_inputs_hrc.globalXfo;
  result[221] = this.controls_Lhand_hand_L_globalSRT_cmpInIn.globalXfo;
  result[222] = this.controls_Lhand_hand_L_parentSpace_cmpInIn.globalXfo;
  result[223] = this.controls_Lhand_hand_L_outputs_hrc.globalXfo;
  result[224] = this.controls_Lhand_hand_L_hand_cmpOutOut.globalXfo;
  result[225] = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo;
  result[226] = this.controls_Lhand_hand_L_index_palm01_spaceSpace.globalXfo;
  result[227] = this.controls_Lhand_L_index_palm_fk.globalXfo;
  result[228] = this.controls_Lhand_hand_L_index_base01_spaceSpace.globalXfo;
  result[229] = this.controls_Lhand_L_index_base_fk.globalXfo;
  result[230] = this.controls_Lhand_hand_L_index_mid01_spaceSpace.globalXfo;
  result[231] = this.controls_Lhand_L_index_mid_fk.globalXfo;
  result[232] = this.controls_Lhand_hand_L_index_tip01_spaceSpace.globalXfo;
  result[233] = this.controls_Lhand_L_index_tip_fk.globalXfo;
  result[234] = this.controls_Lhand_hand_L_middle_palm01_spaceSpace.globalXfo;
  result[235] = this.controls_Lhand_L_middle_palm_fk.globalXfo;
  result[236] = this.controls_Lhand_hand_L_middle_base01_spaceSpace.globalXfo;
  result[237] = this.controls_Lhand_L_middle_base_fk.globalXfo;
  result[238] = this.controls_Lhand_hand_L_middle_mid01_spaceSpace.globalXfo;
  result[239] = this.controls_Lhand_L_middle_mid_fk.globalXfo;
  result[240] = this.controls_Lhand_hand_L_middle_tip01_spaceSpace.globalXfo;
  result[241] = this.controls_Lhand_L_middle_tip_fk.globalXfo;
  result[242] = this.controls_Lhand_hand_L_ring_palm01_spaceSpace.globalXfo;
  result[243] = this.controls_Lhand_L_ring_palm_fk.globalXfo;
  result[244] = this.controls_Lhand_hand_L_ring_base01_spaceSpace.globalXfo;
  result[245] = this.controls_Lhand_L_ring_base_fk.globalXfo;
  result[246] = this.controls_Lhand_hand_L_ring_mid01_spaceSpace.globalXfo;
  result[247] = this.controls_Lhand_L_ring_mid_fk.globalXfo;
  result[248] = this.controls_Lhand_hand_L_ring_tip01_spaceSpace.globalXfo;
  result[249] = this.controls_Lhand_L_ring_tip_fk.globalXfo;
  result[250] = this.controls_Lhand_hand_L_pinky_palm01_spaceSpace.globalXfo;
  result[251] = this.controls_Lhand_L_pinky_palm_fk.globalXfo;
  result[252] = this.controls_Lhand_hand_L_pinky_base01_spaceSpace.globalXfo;
  result[253] = this.controls_Lhand_L_pinky_base_fk.globalXfo;
  result[254] = this.controls_Lhand_hand_L_pinky_mid01_spaceSpace.globalXfo;
  result[255] = this.controls_Lhand_L_pinky_mid_fk.globalXfo;
  result[256] = this.controls_Lhand_hand_L_pinky_tip01_spaceSpace.globalXfo;
  result[257] = this.controls_Lhand_L_pinky_tip_fk.globalXfo;
  result[258] = this.controls_Lhand_hand_L_thumb_palm01_spaceSpace.globalXfo;
  result[259] = this.controls_Lhand_L_thumb_palm_fk.globalXfo;
  result[260] = this.controls_Lhand_hand_L_thumb_base01_spaceSpace.globalXfo;
  result[261] = this.controls_Lhand_L_thumb_base_fk.globalXfo;
  result[262] = this.controls_Lhand_hand_L_thumb_tip01_spaceSpace.globalXfo;
  result[263] = this.controls_Lhand_L_thumb_tip_fk.globalXfo;
  result[264] = this.controls_Lhand_hand_L_ikgoal_cmpOutOut.globalXfo;
  result[265] = this.controls_Lhand_L_IKHandBlendKLOpHand_out_xfo.globalXfo;
  result[266] = this.controls_Lhand_L_IKHandBlendKLOpPalm_out_xfo.globalXfo;
  result[267] = this.controls_Lhand_hand_L_hand01_spaceSpace.globalXfo;
  result[268] = this.controls_Lhand_L_hand_ik.globalXfo;
  result[269] = this.controls_Lhand_hand_L_handIK_spaceSpace.globalXfo;
  result[270] = this.controls_Lhand_hand_L_palmIK_spaceSpace.globalXfo;
  result[271] = this.controls_Lhand_L_ikGoalRef_xfo.globalXfo;
  result[272] = this.controls_Lhand_hand_L_hand02_spaceSpace.globalXfo;
  result[273] = this.controls_Lhand_L_hand_fk.globalXfo;
  result[274] = this.controls_Lhand_hand_L_palm01_spaceSpace.globalXfo;
  result[275] = this.controls_Lhand_L_palm_fk.globalXfo;
  result[276] = this.controls_Lhand_L_ikHand_xfo.globalXfo;
  result[277] = this.controls_Lhand_L_ikPalm_xfo.globalXfo;
  result[278] = this.deformers_Lhand_hand_L_hand_cmp.globalXfo;
  result[279] = this.deformers_Lhand_hand_L_hand_def.globalXfo;
  result[280] = this.deformers_Lhand_hand_L_palm_def.globalXfo;
  result[281] = this.deformers_Lhand_hand_L_index_palm_def.globalXfo;
  result[282] = this.deformers_Lhand_hand_L_index_base_def.globalXfo;
  result[283] = this.deformers_Lhand_hand_L_index_mid_def.globalXfo;
  result[284] = this.deformers_Lhand_hand_L_index_tip_def.globalXfo;
  result[285] = this.deformers_Lhand_hand_L_middle_palm_def.globalXfo;
  result[286] = this.deformers_Lhand_hand_L_middle_base_def.globalXfo;
  result[287] = this.deformers_Lhand_hand_L_middle_mid_def.globalXfo;
  result[288] = this.deformers_Lhand_hand_L_middle_tip_def.globalXfo;
  result[289] = this.deformers_Lhand_hand_L_ring_palm_def.globalXfo;
  result[290] = this.deformers_Lhand_hand_L_ring_base_def.globalXfo;
  result[291] = this.deformers_Lhand_hand_L_ring_mid_def.globalXfo;
  result[292] = this.deformers_Lhand_hand_L_ring_tip_def.globalXfo;
  result[293] = this.deformers_Lhand_hand_L_pinky_palm_def.globalXfo;
  result[294] = this.deformers_Lhand_hand_L_pinky_base_def.globalXfo;
  result[295] = this.deformers_Lhand_hand_L_pinky_mid_def.globalXfo;
  result[296] = this.deformers_Lhand_hand_L_pinky_tip_def.globalXfo;
  result[297] = this.deformers_Lhand_hand_L_thumb_palm_def.globalXfo;
  result[298] = this.deformers_Lhand_hand_L_thumb_base_def.globalXfo;
  result[299] = this.deformers_Lhand_hand_L_thumb_tip_def.globalXfo;
  result[300] = this.controls_Rhand_hand_R_hand_cmp.globalXfo;
  result[301] = this.controls_Rhand_hand_R_inputs_hrc.globalXfo;
  result[302] = this.controls_Rhand_hand_R_globalSRT_cmpInIn.globalXfo;
  result[303] = this.controls_Rhand_hand_R_parentSpace_cmpInIn.globalXfo;
  result[304] = this.controls_Rhand_hand_R_outputs_hrc.globalXfo;
  result[305] = this.controls_Rhand_hand_R_hand_cmpOutOut.globalXfo;
  result[306] = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo;
  result[307] = this.controls_Rhand_hand_R_index_palm01_spaceSpace.globalXfo;
  result[308] = this.controls_Rhand_R_index_palm_fk.globalXfo;
  result[309] = this.controls_Rhand_hand_R_index_base01_spaceSpace.globalXfo;
  result[310] = this.controls_Rhand_R_index_base_fk.globalXfo;
  result[311] = this.controls_Rhand_hand_R_index_mid01_spaceSpace.globalXfo;
  result[312] = this.controls_Rhand_R_index_mid_fk.globalXfo;
  result[313] = this.controls_Rhand_hand_R_index_tip01_spaceSpace.globalXfo;
  result[314] = this.controls_Rhand_R_index_tip_fk.globalXfo;
  result[315] = this.controls_Rhand_hand_R_middle_palm01_spaceSpace.globalXfo;
  result[316] = this.controls_Rhand_R_middle_palm_fk.globalXfo;
  result[317] = this.controls_Rhand_hand_R_middle_base01_spaceSpace.globalXfo;
  result[318] = this.controls_Rhand_R_middle_base_fk.globalXfo;
  result[319] = this.controls_Rhand_hand_R_middle_mid01_spaceSpace.globalXfo;
  result[320] = this.controls_Rhand_R_middle_mid_fk.globalXfo;
  result[321] = this.controls_Rhand_hand_R_middle_tip01_spaceSpace.globalXfo;
  result[322] = this.controls_Rhand_R_middle_tip_fk.globalXfo;
  result[323] = this.controls_Rhand_hand_R_ring_palm01_spaceSpace.globalXfo;
  result[324] = this.controls_Rhand_R_ring_palm_fk.globalXfo;
  result[325] = this.controls_Rhand_hand_R_ring_base01_spaceSpace.globalXfo;
  result[326] = this.controls_Rhand_R_ring_base_fk.globalXfo;
  result[327] = this.controls_Rhand_hand_R_ring_mid01_spaceSpace.globalXfo;
  result[328] = this.controls_Rhand_R_ring_mid_fk.globalXfo;
  result[329] = this.controls_Rhand_hand_R_ring_tip01_spaceSpace.globalXfo;
  result[330] = this.controls_Rhand_R_ring_tip_fk.globalXfo;
  result[331] = this.controls_Rhand_hand_R_pinky_palm01_spaceSpace.globalXfo;
  result[332] = this.controls_Rhand_R_pinky_palm_fk.globalXfo;
  result[333] = this.controls_Rhand_hand_R_pinky_base01_spaceSpace.globalXfo;
  result[334] = this.controls_Rhand_R_pinky_base_fk.globalXfo;
  result[335] = this.controls_Rhand_hand_R_pinky_mid01_spaceSpace.globalXfo;
  result[336] = this.controls_Rhand_R_pinky_mid_fk.globalXfo;
  result[337] = this.controls_Rhand_hand_R_pinky_tip01_spaceSpace.globalXfo;
  result[338] = this.controls_Rhand_R_pinky_tip_fk.globalXfo;
  result[339] = this.controls_Rhand_hand_R_thumb_palm01_spaceSpace.globalXfo;
  result[340] = this.controls_Rhand_R_thumb_palm_fk.globalXfo;
  result[341] = this.controls_Rhand_hand_R_thumb_base01_spaceSpace.globalXfo;
  result[342] = this.controls_Rhand_R_thumb_base_fk.globalXfo;
  result[343] = this.controls_Rhand_hand_R_thumb_tip01_spaceSpace.globalXfo;
  result[344] = this.controls_Rhand_R_thumb_tip_fk.globalXfo;
  result[345] = this.controls_Rhand_hand_R_ikgoal_cmpOutOut.globalXfo;
  result[346] = this.controls_Rhand_R_IKHandBlendKLOpHand_out_xfo.globalXfo;
  result[347] = this.controls_Rhand_R_IKHandBlendKLOpPalm_out_xfo.globalXfo;
  result[348] = this.controls_Rhand_hand_R_hand01_spaceSpace.globalXfo;
  result[349] = this.controls_Rhand_R_hand_ik.globalXfo;
  result[350] = this.controls_Rhand_hand_R_handIK_spaceSpace.globalXfo;
  result[351] = this.controls_Rhand_hand_R_palmIK_spaceSpace.globalXfo;
  result[352] = this.controls_Rhand_R_ikGoalRef_xfo.globalXfo;
  result[353] = this.controls_Rhand_hand_R_hand02_spaceSpace.globalXfo;
  result[354] = this.controls_Rhand_R_hand_fk.globalXfo;
  result[355] = this.controls_Rhand_hand_R_palm01_spaceSpace.globalXfo;
  result[356] = this.controls_Rhand_R_palm_fk.globalXfo;
  result[357] = this.controls_Rhand_R_ikHand_xfo.globalXfo;
  result[358] = this.controls_Rhand_R_ikPalm_xfo.globalXfo;
  result[359] = this.deformers_Rhand_hand_R_hand_cmp.globalXfo;
  result[360] = this.deformers_Rhand_hand_R_hand_def.globalXfo;
  result[361] = this.deformers_Rhand_hand_R_palm_def.globalXfo;
  result[362] = this.deformers_Rhand_hand_R_index_palm_def.globalXfo;
  result[363] = this.deformers_Rhand_hand_R_index_base_def.globalXfo;
  result[364] = this.deformers_Rhand_hand_R_index_mid_def.globalXfo;
  result[365] = this.deformers_Rhand_hand_R_index_tip_def.globalXfo;
  result[366] = this.deformers_Rhand_hand_R_middle_palm_def.globalXfo;
  result[367] = this.deformers_Rhand_hand_R_middle_base_def.globalXfo;
  result[368] = this.deformers_Rhand_hand_R_middle_mid_def.globalXfo;
  result[369] = this.deformers_Rhand_hand_R_middle_tip_def.globalXfo;
  result[370] = this.deformers_Rhand_hand_R_ring_palm_def.globalXfo;
  result[371] = this.deformers_Rhand_hand_R_ring_base_def.globalXfo;
  result[372] = this.deformers_Rhand_hand_R_ring_mid_def.globalXfo;
  result[373] = this.deformers_Rhand_hand_R_ring_tip_def.globalXfo;
  result[374] = this.deformers_Rhand_hand_R_pinky_palm_def.globalXfo;
  result[375] = this.deformers_Rhand_hand_R_pinky_base_def.globalXfo;
  result[376] = this.deformers_Rhand_hand_R_pinky_mid_def.globalXfo;
  result[377] = this.deformers_Rhand_hand_R_pinky_tip_def.globalXfo;
  result[378] = this.deformers_Rhand_hand_R_thumb_palm_def.globalXfo;
  result[379] = this.deformers_Rhand_hand_R_thumb_base_def.globalXfo;
  result[380] = this.deformers_Rhand_hand_R_thumb_tip_def.globalXfo;
  result[381] = this.controls_MheadNeck_headNeck_M_headNeck_cmp.globalXfo;
  result[382] = this.controls_MheadNeck_headNeck_M_inputs_hrc.globalXfo;
  result[383] = this.controls_MheadNeck_headNeck_M_globalSRT_cmpInIn.globalXfo;
  result[384] = this.controls_MheadNeck_headNeck_M_head_spaceSpace.globalXfo;
  result[385] = this.controls_MheadNeck_headNeck_M_headIK_spaceSpace.globalXfo;
  result[386] = this.controls_MheadNeck_M_head_ik.globalXfo;
  result[387] = this.controls_MheadNeck_headNeck_M_headUpV_spaceSpace.globalXfo;
  result[388] = this.controls_MheadNeck_M_headUpV_an.globalXfo;
  result[389] = this.controls_MheadNeck_headNeck_M_headWorld01_spaceSpace.globalXfo;
  result[390] = this.controls_MheadNeck_M_headWorld_ik.globalXfo;
  result[391] = this.controls_MheadNeck_headNeck_M_parentSpace_cmpInIn.globalXfo;
  result[392] = this.controls_MheadNeck_headNeck_M_outputs_hrc.globalXfo;
  result[393] = this.controls_MheadNeck_headNeck_M_neckBase_cmpOutOut.globalXfo;
  result[394] = this.controls_MheadNeck_headNeck_M_neckEnd_cmpOutOut.globalXfo;
  result[395] = this.controls_MheadNeck_headNeck_M_neck01_cmpOutOut.globalXfo;
  result[396] = this.controls_MheadNeck_headNeck_M_neck02_cmpOutOut.globalXfo;
  result[397] = this.controls_MheadNeck_headNeck_M_neck03_cmpOutOut.globalXfo;
  result[398] = this.controls_MheadNeck_headNeck_M_neck04_cmpOutOut.globalXfo;
  result[399] = this.controls_MheadNeck_headNeck_M_neck01_spaceSpace.globalXfo;
  result[400] = this.controls_MheadNeck_M_neck_fk.globalXfo;
  result[401] = this.controls_MheadNeck_headNeck_M_head01_spaceSpace.globalXfo;
  result[402] = this.controls_MheadNeck_M_head_fk.globalXfo;
  result[403] = this.controls_MheadNeck_headNeck_M_headAlign_spaceSpace.globalXfo;
  result[404] = this.controls_MheadNeck_headNeck_M_headHandle_spaceSpace.globalXfo;
  result[405] = this.controls_MheadNeck_headNeck_M_neckHandle_spaceSpace.globalXfo;
  result[406] = this.deformers_MheadNeck_headNeck_M_headNeck_cmp.globalXfo;
  result[407] = this.deformers_MheadNeck_headNeck_M_neck01_def.globalXfo;
  result[408] = this.deformers_MheadNeck_headNeck_M_neck02_def.globalXfo;
  result[409] = this.deformers_MheadNeck_headNeck_M_neck03_def.globalXfo;
  result[410] = this.deformers_MheadNeck_headNeck_M_head_def.globalXfo;
  result[411] = this.controls_LpalmSocket_palmSocket_L_palmSocket_cmp.globalXfo;
  result[412] = this.controls_LpalmSocket_palmSocket_L_inputs_hrc.globalXfo;
  result[413] = this.controls_LpalmSocket_palmSocket_L_parentSpace_cmpInIn.globalXfo;
  result[414] = this.controls_LpalmSocket_palmSocket_L_globalSRT_cmpInIn.globalXfo;
  result[415] = this.controls_LpalmSocket_palmSocket_L_outputs_hrc.globalXfo;
  result[416] = this.controls_LpalmSocket_palmSocket_L_socket_cmpOutOut.globalXfo;
  result[417] = this.controls_LpalmSocket_palmSocket_L_palmSocket_offset01_spaceSpace.globalXfo;
  result[418] = this.controls_LpalmSocket_L_palmSocket_offset_an.globalXfo;
  result[419] = this.controls_LpalmSocket_L_palmSocket_an.globalXfo;
  result[420] = this.deformers_LpalmSocket_palmSocket_L_palmSocket_cmp.globalXfo;
  result[421] = this.deformers_LpalmSocket_palmSocket_L_palmSocket_def.globalXfo;
  result[422] = this.controls_RpalmSocket_palmSocket_R_palmSocket_cmp.globalXfo;
  result[423] = this.controls_RpalmSocket_palmSocket_R_inputs_hrc.globalXfo;
  result[424] = this.controls_RpalmSocket_palmSocket_R_parentSpace_cmpInIn.globalXfo;
  result[425] = this.controls_RpalmSocket_palmSocket_R_globalSRT_cmpInIn.globalXfo;
  result[426] = this.controls_RpalmSocket_palmSocket_R_outputs_hrc.globalXfo;
  result[427] = this.controls_RpalmSocket_palmSocket_R_socket_cmpOutOut.globalXfo;
  result[428] = this.controls_RpalmSocket_palmSocket_R_palmSocket_offset01_spaceSpace.globalXfo;
  result[429] = this.controls_RpalmSocket_R_palmSocket_offset_an.globalXfo;
  result[430] = this.controls_RpalmSocket_R_palmSocket_an.globalXfo;
  result[431] = this.deformers_RpalmSocket_palmSocket_R_palmSocket_cmp.globalXfo;
  result[432] = this.deformers_RpalmSocket_palmSocket_R_palmSocket_def.globalXfo;
  result[433] = this.controls_MheadSocket_headSocket_M_headSocket_cmp.globalXfo;
  result[434] = this.controls_MheadSocket_headSocket_M_inputs_hrc.globalXfo;
  result[435] = this.controls_MheadSocket_headSocket_M_parentSpace_cmpInIn.globalXfo;
  result[436] = this.controls_MheadSocket_headSocket_M_globalSRT_cmpInIn.globalXfo;
  result[437] = this.controls_MheadSocket_headSocket_M_outputs_hrc.globalXfo;
  result[438] = this.controls_MheadSocket_headSocket_M_socket_cmpOutOut.globalXfo;
  result[439] = this.controls_MheadSocket_headSocket_M_headSocket_offset01_spaceSpace.globalXfo;
  result[440] = this.controls_MheadSocket_M_headSocket_offset_an.globalXfo;
  result[441] = this.controls_MheadSocket_M_headSocket_an.globalXfo;
  result[442] = this.deformers_MheadSocket_headSocket_M_headSocket_cmp.globalXfo;
  result[443] = this.deformers_MheadSocket_headSocket_M_headSocket_def.globalXfo;
  result[444] = this.controls_MsocketA_socketA_M_socketA_cmp.globalXfo;
  result[445] = this.controls_MsocketA_socketA_M_inputs_hrc.globalXfo;
  result[446] = this.controls_MsocketA_socketA_M_parentSpace_cmpInIn.globalXfo;
  result[447] = this.controls_MsocketA_socketA_M_globalSRT_cmpInIn.globalXfo;
  result[448] = this.controls_MsocketA_socketA_M_outputs_hrc.globalXfo;
  result[449] = this.controls_MsocketA_socketA_M_socket_cmpOutOut.globalXfo;
  result[450] = this.controls_MsocketA_socketA_M_socketA_offset01_spaceSpace.globalXfo;
  result[451] = this.controls_MsocketA_M_socketA_offset_an.globalXfo;
  result[452] = this.controls_MsocketA_M_socketA_an.globalXfo;
  result[453] = this.deformers_MsocketA_socketA_M_socketA_cmp.globalXfo;
  result[454] = this.deformers_MsocketA_socketA_M_socketA_def.globalXfo;
  result[455] = this.controls_MsocketB_socketB_M_socketB_cmp.globalXfo;
  result[456] = this.controls_MsocketB_socketB_M_inputs_hrc.globalXfo;
  result[457] = this.controls_MsocketB_socketB_M_parentSpace_cmpInIn.globalXfo;
  result[458] = this.controls_MsocketB_socketB_M_globalSRT_cmpInIn.globalXfo;
  result[459] = this.controls_MsocketB_socketB_M_outputs_hrc.globalXfo;
  result[460] = this.controls_MsocketB_socketB_M_socket_cmpOutOut.globalXfo;
  result[461] = this.controls_MsocketB_socketB_M_socketB_offset01_spaceSpace.globalXfo;
  result[462] = this.controls_MsocketB_M_socketB_offset_an.globalXfo;
  result[463] = this.controls_MsocketB_M_socketB_an.globalXfo;
  result[464] = this.deformers_MsocketB_socketB_M_socketB_cmp.globalXfo;
  result[465] = this.deformers_MsocketB_socketB_M_socketB_def.globalXfo;
  result[466] = this.controls_MsocketC_socketC_M_socketC_cmp.globalXfo;
  result[467] = this.controls_MsocketC_socketC_M_inputs_hrc.globalXfo;
  result[468] = this.controls_MsocketC_socketC_M_parentSpace_cmpInIn.globalXfo;
  result[469] = this.controls_MsocketC_socketC_M_globalSRT_cmpInIn.globalXfo;
  result[470] = this.controls_MsocketC_socketC_M_outputs_hrc.globalXfo;
  result[471] = this.controls_MsocketC_socketC_M_socket_cmpOutOut.globalXfo;
  result[472] = this.controls_MsocketC_socketC_M_socketC_offset01_spaceSpace.globalXfo;
  result[473] = this.controls_MsocketC_M_socketC_offset_an.globalXfo;
  result[474] = this.controls_MsocketC_M_socketC_an.globalXfo;
  result[475] = this.deformers_MsocketC_socketC_M_socketC_cmp.globalXfo;
  result[476] = this.deformers_MsocketC_socketC_M_socketC_def.globalXfo;
  result[477] = this.controls_MchestSocket_chestSocket_M_chestSocket_cmp.globalXfo;
  result[478] = this.controls_MchestSocket_chestSocket_M_inputs_hrc.globalXfo;
  result[479] = this.controls_MchestSocket_chestSocket_M_parentSpace_cmpInIn.globalXfo;
  result[480] = this.controls_MchestSocket_chestSocket_M_globalSRT_cmpInIn.globalXfo;
  result[481] = this.controls_MchestSocket_chestSocket_M_outputs_hrc.globalXfo;
  result[482] = this.controls_MchestSocket_chestSocket_M_socket_cmpOutOut.globalXfo;
  result[483] = this.controls_MchestSocket_chestSocket_M_chestSocket_offset01_spaceSpace.globalXfo;
  result[484] = this.controls_MchestSocket_M_chestSocket_offset_an.globalXfo;
  result[485] = this.controls_MchestSocket_M_chestSocket_an.globalXfo;
  result[486] = this.deformers_MchestSocket_chestSocket_M_chestSocket_cmp.globalXfo;
  result[487] = this.deformers_MchestSocket_chestSocket_M_chestSocket_def.globalXfo;
  result[488] = this.controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp.globalXfo;
  result[489] = this.controls_MhipsSocket_hipsSocket_M_inputs_hrc.globalXfo;
  result[490] = this.controls_MhipsSocket_hipsSocket_M_parentSpace_cmpInIn.globalXfo;
  result[491] = this.controls_MhipsSocket_hipsSocket_M_globalSRT_cmpInIn.globalXfo;
  result[492] = this.controls_MhipsSocket_hipsSocket_M_outputs_hrc.globalXfo;
  result[493] = this.controls_MhipsSocket_hipsSocket_M_socket_cmpOutOut.globalXfo;
  result[494] = this.controls_MhipsSocket_hipsSocket_M_hipsSocket_offset01_spaceSpace.globalXfo;
  result[495] = this.controls_MhipsSocket_M_hipsSocket_offset_an.globalXfo;
  result[496] = this.controls_MhipsSocket_M_hipsSocket_an.globalXfo;
  result[497] = this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_cmp.globalXfo;
  result[498] = this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_def.globalXfo;
  return result;
}

function KRK_biped_guide.getRigElement(UInt32 index, out Xfo xfo, out String name) {
  switch(index) {
    case 0: {
      xfo = this.biped_guide.globalXfo;
      name = "biped_guide";
      break;
    }
    case 1: {
      xfo = this.bipedguide_biped_guide_controls.globalXfo;
      name = "bipedguide_biped_guide_controls";
      break;
    }
    case 2: {
      xfo = this.bipedguide_biped_guide_deformers.globalXfo;
      name = "bipedguide_biped_guide_deformers";
      break;
    }
    case 3: {
      xfo = this.controls_Mmain_main_M_main_cmp.globalXfo;
      name = "controls_Mmain_main_M_main_cmp";
      break;
    }
    case 4: {
      xfo = this.controls_Mmain_main_M_inputs_hrc.globalXfo;
      name = "controls_Mmain_main_M_inputs_hrc";
      break;
    }
    case 5: {
      xfo = this.controls_Mmain_main_M_outputs_hrc.globalXfo;
      name = "controls_Mmain_main_M_outputs_hrc";
      break;
    }
    case 6: {
      xfo = this.controls_Mmain_main_M_master_cmpOutOut.globalXfo;
      name = "controls_Mmain_main_M_master_cmpOutOut";
      break;
    }
    case 7: {
      xfo = this.controls_Mmain_main_M_offset_cmpOutOut.globalXfo;
      name = "controls_Mmain_main_M_offset_cmpOutOut";
      break;
    }
    case 8: {
      xfo = this.controls_Mmain_main_M_cog_cmpOutOut.globalXfo;
      name = "controls_Mmain_main_M_cog_cmpOutOut";
      break;
    }
    case 9: {
      xfo = this.controls_Mmain_main_M_master01_spaceSpace.globalXfo;
      name = "controls_Mmain_main_M_master01_spaceSpace";
      break;
    }
    case 10: {
      xfo = this.controls_Mmain_M_master_fk.globalXfo;
      name = "controls_Mmain_M_master_fk";
      break;
    }
    case 11: {
      xfo = this.controls_Mmain_main_M_offset01_spaceSpace.globalXfo;
      name = "controls_Mmain_main_M_offset01_spaceSpace";
      break;
    }
    case 12: {
      xfo = this.controls_Mmain_M_offset_fk.globalXfo;
      name = "controls_Mmain_M_offset_fk";
      break;
    }
    case 13: {
      xfo = this.controls_Mmain_main_M_cog01_spaceSpace.globalXfo;
      name = "controls_Mmain_main_M_cog01_spaceSpace";
      break;
    }
    case 14: {
      xfo = this.controls_Mmain_M_cog_fk.globalXfo;
      name = "controls_Mmain_M_cog_fk";
      break;
    }
    case 15: {
      xfo = this.controls_Mmain_M_vis_an.globalXfo;
      name = "controls_Mmain_M_vis_an";
      break;
    }
    case 16: {
      xfo = this.controls_Mspine_spine_M_spine_cmp.globalXfo;
      name = "controls_Mspine_spine_M_spine_cmp";
      break;
    }
    case 17: {
      xfo = this.controls_Mspine_spine_M_inputs_hrc.globalXfo;
      name = "controls_Mspine_spine_M_inputs_hrc";
      break;
    }
    case 18: {
      xfo = this.controls_Mspine_spine_M_parentSpace_cmpInIn.globalXfo;
      name = "controls_Mspine_spine_M_parentSpace_cmpInIn";
      break;
    }
    case 19: {
      xfo = this.controls_Mspine_spine_M_outputs_hrc.globalXfo;
      name = "controls_Mspine_spine_M_outputs_hrc";
      break;
    }
    case 20: {
      xfo = this.controls_Mspine_spine_M_hips_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_hips_cmpOutOut";
      break;
    }
    case 21: {
      xfo = this.controls_Mspine_spine_M_spineBase_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_spineBase_cmpOutOut";
      break;
    }
    case 22: {
      xfo = this.controls_Mspine_spine_M_pelvis_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_pelvis_cmpOutOut";
      break;
    }
    case 23: {
      xfo = this.controls_Mspine_spine_M_spineEnd_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_spineEnd_cmpOutOut";
      break;
    }
    case 24: {
      xfo = this.controls_Mspine_spine_M_spine01_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_spine01_cmpOutOut";
      break;
    }
    case 25: {
      xfo = this.controls_Mspine_spine_M_spine02_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_spine02_cmpOutOut";
      break;
    }
    case 26: {
      xfo = this.controls_Mspine_spine_M_spine03_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_spine03_cmpOutOut";
      break;
    }
    case 27: {
      xfo = this.controls_Mspine_spine_M_spine04_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_spine04_cmpOutOut";
      break;
    }
    case 28: {
      xfo = this.controls_Mspine_spine_M_spine05_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_spine05_cmpOutOut";
      break;
    }
    case 29: {
      xfo = this.controls_Mspine_spine_M_spine06_cmpOutOut.globalXfo;
      name = "controls_Mspine_spine_M_spine06_cmpOutOut";
      break;
    }
    case 30: {
      xfo = this.controls_Mspine_spine_M_hips01_spaceSpace.globalXfo;
      name = "controls_Mspine_spine_M_hips01_spaceSpace";
      break;
    }
    case 31: {
      xfo = this.controls_Mspine_M_hips_fk.globalXfo;
      name = "controls_Mspine_M_hips_fk";
      break;
    }
    case 32: {
      xfo = this.controls_Mspine_spine_M_pelvis_spaceSpace.globalXfo;
      name = "controls_Mspine_spine_M_pelvis_spaceSpace";
      break;
    }
    case 33: {
      xfo = this.controls_Mspine_spine_M_torso01_spaceSpace.globalXfo;
      name = "controls_Mspine_spine_M_torso01_spaceSpace";
      break;
    }
    case 34: {
      xfo = this.controls_Mspine_M_torso_fk.globalXfo;
      name = "controls_Mspine_M_torso_fk";
      break;
    }
    case 35: {
      xfo = this.controls_Mspine_spine_M_chest01_spaceSpace.globalXfo;
      name = "controls_Mspine_spine_M_chest01_spaceSpace";
      break;
    }
    case 36: {
      xfo = this.controls_Mspine_M_chest_fk.globalXfo;
      name = "controls_Mspine_M_chest_fk";
      break;
    }
    case 37: {
      xfo = this.controls_Mspine_spine_M_upChest01_spaceSpace.globalXfo;
      name = "controls_Mspine_spine_M_upChest01_spaceSpace";
      break;
    }
    case 38: {
      xfo = this.controls_Mspine_M_upChest_fk.globalXfo;
      name = "controls_Mspine_M_upChest_fk";
      break;
    }
    case 39: {
      xfo = this.controls_Mspine_spine_M_neck_spaceSpace.globalXfo;
      name = "controls_Mspine_spine_M_neck_spaceSpace";
      break;
    }
    case 40: {
      xfo = this.deformers_Mspine_spine_M_spine_cmp.globalXfo;
      name = "deformers_Mspine_spine_M_spine_cmp";
      break;
    }
    case 41: {
      xfo = this.deformers_Mspine_spine_M_spine01_def.globalXfo;
      name = "deformers_Mspine_spine_M_spine01_def";
      break;
    }
    case 42: {
      xfo = this.deformers_Mspine_spine_M_spine02_def.globalXfo;
      name = "deformers_Mspine_spine_M_spine02_def";
      break;
    }
    case 43: {
      xfo = this.deformers_Mspine_spine_M_spine03_def.globalXfo;
      name = "deformers_Mspine_spine_M_spine03_def";
      break;
    }
    case 44: {
      xfo = this.deformers_Mspine_spine_M_spine04_def.globalXfo;
      name = "deformers_Mspine_spine_M_spine04_def";
      break;
    }
    case 45: {
      xfo = this.deformers_Mspine_spine_M_spine05_def.globalXfo;
      name = "deformers_Mspine_spine_M_spine05_def";
      break;
    }
    case 46: {
      xfo = this.deformers_Mspine_spine_M_spine06_def.globalXfo;
      name = "deformers_Mspine_spine_M_spine06_def";
      break;
    }
    case 47: {
      xfo = this.controls_Lshoulder_shoulder_L_shoulder_cmp.globalXfo;
      name = "controls_Lshoulder_shoulder_L_shoulder_cmp";
      break;
    }
    case 48: {
      xfo = this.controls_Lshoulder_shoulder_L_inputs_hrc.globalXfo;
      name = "controls_Lshoulder_shoulder_L_inputs_hrc";
      break;
    }
    case 49: {
      xfo = this.controls_Lshoulder_shoulder_L_parentSpace_cmpInIn.globalXfo;
      name = "controls_Lshoulder_shoulder_L_parentSpace_cmpInIn";
      break;
    }
    case 50: {
      xfo = this.controls_Lshoulder_shoulder_L_outputs_hrc.globalXfo;
      name = "controls_Lshoulder_shoulder_L_outputs_hrc";
      break;
    }
    case 51: {
      xfo = this.controls_Lshoulder_shoulder_L_shldr_cmpOutOut.globalXfo;
      name = "controls_Lshoulder_shoulder_L_shldr_cmpOutOut";
      break;
    }
    case 52: {
      xfo = this.controls_Lshoulder_shoulder_L_shldrEnd_cmpOutOut.globalXfo;
      name = "controls_Lshoulder_shoulder_L_shldrEnd_cmpOutOut";
      break;
    }
    case 53: {
      xfo = this.controls_Lshoulder_shoulder_L_shldr01_spaceSpace.globalXfo;
      name = "controls_Lshoulder_shoulder_L_shldr01_spaceSpace";
      break;
    }
    case 54: {
      xfo = this.controls_Lshoulder_L_shldr_fk.globalXfo;
      name = "controls_Lshoulder_L_shldr_fk";
      break;
    }
    case 55: {
      xfo = this.controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace.globalXfo;
      name = "controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace";
      break;
    }
    case 56: {
      xfo = this.deformers_Lshoulder_shoulder_L_shoulder_cmp.globalXfo;
      name = "deformers_Lshoulder_shoulder_L_shoulder_cmp";
      break;
    }
    case 57: {
      xfo = this.deformers_Lshoulder_shoulder_L_shldr_def.globalXfo;
      name = "deformers_Lshoulder_shoulder_L_shldr_def";
      break;
    }
    case 58: {
      xfo = this.controls_Rshoulder_shoulder_R_shoulder_cmp.globalXfo;
      name = "controls_Rshoulder_shoulder_R_shoulder_cmp";
      break;
    }
    case 59: {
      xfo = this.controls_Rshoulder_shoulder_R_inputs_hrc.globalXfo;
      name = "controls_Rshoulder_shoulder_R_inputs_hrc";
      break;
    }
    case 60: {
      xfo = this.controls_Rshoulder_shoulder_R_parentSpace_cmpInIn.globalXfo;
      name = "controls_Rshoulder_shoulder_R_parentSpace_cmpInIn";
      break;
    }
    case 61: {
      xfo = this.controls_Rshoulder_shoulder_R_outputs_hrc.globalXfo;
      name = "controls_Rshoulder_shoulder_R_outputs_hrc";
      break;
    }
    case 62: {
      xfo = this.controls_Rshoulder_shoulder_R_shldr_cmpOutOut.globalXfo;
      name = "controls_Rshoulder_shoulder_R_shldr_cmpOutOut";
      break;
    }
    case 63: {
      xfo = this.controls_Rshoulder_shoulder_R_shldrEnd_cmpOutOut.globalXfo;
      name = "controls_Rshoulder_shoulder_R_shldrEnd_cmpOutOut";
      break;
    }
    case 64: {
      xfo = this.controls_Rshoulder_shoulder_R_shldr01_spaceSpace.globalXfo;
      name = "controls_Rshoulder_shoulder_R_shldr01_spaceSpace";
      break;
    }
    case 65: {
      xfo = this.controls_Rshoulder_R_shldr_fk.globalXfo;
      name = "controls_Rshoulder_R_shldr_fk";
      break;
    }
    case 66: {
      xfo = this.controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace.globalXfo;
      name = "controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace";
      break;
    }
    case 67: {
      xfo = this.deformers_Rshoulder_shoulder_R_shoulder_cmp.globalXfo;
      name = "deformers_Rshoulder_shoulder_R_shoulder_cmp";
      break;
    }
    case 68: {
      xfo = this.deformers_Rshoulder_shoulder_R_shldr_def.globalXfo;
      name = "deformers_Rshoulder_shoulder_R_shldr_def";
      break;
    }
    case 69: {
      xfo = this.controls_Lleg_leg_L_leg_cmp.globalXfo;
      name = "controls_Lleg_leg_L_leg_cmp";
      break;
    }
    case 70: {
      xfo = this.controls_Lleg_leg_L_inputs_hrc.globalXfo;
      name = "controls_Lleg_leg_L_inputs_hrc";
      break;
    }
    case 71: {
      xfo = this.controls_Lleg_leg_L_globalSRT_cmpInIn.globalXfo;
      name = "controls_Lleg_leg_L_globalSRT_cmpInIn";
      break;
    }
    case 72: {
      xfo = this.controls_Lleg_leg_L_parentSpace_cmpInIn.globalXfo;
      name = "controls_Lleg_leg_L_parentSpace_cmpInIn";
      break;
    }
    case 73: {
      xfo = this.controls_Lleg_leg_L_ikGoalInput_cmpInIn.globalXfo;
      name = "controls_Lleg_leg_L_ikGoalInput_cmpInIn";
      break;
    }
    case 74: {
      xfo = this.controls_Lleg_leg_L_outputs_hrc.globalXfo;
      name = "controls_Lleg_leg_L_outputs_hrc";
      break;
    }
    case 75: {
      xfo = this.controls_Lleg_leg_L_uplimb_cmpOutOut.globalXfo;
      name = "controls_Lleg_leg_L_uplimb_cmpOutOut";
      break;
    }
    case 76: {
      xfo = this.controls_Lleg_leg_L_lolimb_cmpOutOut.globalXfo;
      name = "controls_Lleg_leg_L_lolimb_cmpOutOut";
      break;
    }
    case 77: {
      xfo = this.controls_Lleg_leg_L_endlimb_cmpOutOut.globalXfo;
      name = "controls_Lleg_leg_L_endlimb_cmpOutOut";
      break;
    }
    case 78: {
      xfo = this.controls_Lleg_leg_L_upLeg01_spaceSpace.globalXfo;
      name = "controls_Lleg_leg_L_upLeg01_spaceSpace";
      break;
    }
    case 79: {
      xfo = this.controls_Lleg_L_upLeg_fk.globalXfo;
      name = "controls_Lleg_L_upLeg_fk";
      break;
    }
    case 80: {
      xfo = this.controls_Lleg_leg_L_loLeg01_spaceSpace.globalXfo;
      name = "controls_Lleg_leg_L_loLeg01_spaceSpace";
      break;
    }
    case 81: {
      xfo = this.controls_Lleg_L_loLeg_fk.globalXfo;
      name = "controls_Lleg_L_loLeg_fk";
      break;
    }
    case 82: {
      xfo = this.controls_Lleg_leg_L_footIK_spaceSpace.globalXfo;
      name = "controls_Lleg_leg_L_footIK_spaceSpace";
      break;
    }
    case 83: {
      xfo = this.controls_Lleg_L_footIK_xfo.globalXfo;
      name = "controls_Lleg_L_footIK_xfo";
      break;
    }
    case 84: {
      xfo = this.controls_Lleg_leg_L_legUpV01_spaceSpace.globalXfo;
      name = "controls_Lleg_leg_L_legUpV01_spaceSpace";
      break;
    }
    case 85: {
      xfo = this.controls_Lleg_L_legUpV_an.globalXfo;
      name = "controls_Lleg_L_legUpV_an";
      break;
    }
    case 86: {
      xfo = this.controls_Lleg_leg_L_legUpVIK_spaceSpace.globalXfo;
      name = "controls_Lleg_leg_L_legUpVIK_spaceSpace";
      break;
    }
    case 87: {
      xfo = this.controls_Lleg_leg_L_legIKMaster_spaceSpace.globalXfo;
      name = "controls_Lleg_leg_L_legIKMaster_spaceSpace";
      break;
    }
    case 88: {
      xfo = this.deformers_Lleg_leg_L_leg_cmp.globalXfo;
      name = "deformers_Lleg_leg_L_leg_cmp";
      break;
    }
    case 89: {
      xfo = this.deformers_Lleg_leg_L_upLeg_def.globalXfo;
      name = "deformers_Lleg_leg_L_upLeg_def";
      break;
    }
    case 90: {
      xfo = this.deformers_Lleg_leg_L_loLeg_def.globalXfo;
      name = "deformers_Lleg_leg_L_loLeg_def";
      break;
    }
    case 91: {
      xfo = this.deformers_Lleg_leg_L_legend_def.globalXfo;
      name = "deformers_Lleg_leg_L_legend_def";
      break;
    }
    case 92: {
      xfo = this.controls_Lfoot_foot_L_foot_cmp.globalXfo;
      name = "controls_Lfoot_foot_L_foot_cmp";
      break;
    }
    case 93: {
      xfo = this.controls_Lfoot_foot_L_inputs_hrc.globalXfo;
      name = "controls_Lfoot_foot_L_inputs_hrc";
      break;
    }
    case 94: {
      xfo = this.controls_Lfoot_foot_L_globalSRT_cmpInIn.globalXfo;
      name = "controls_Lfoot_foot_L_globalSRT_cmpInIn";
      break;
    }
    case 95: {
      xfo = this.controls_Lfoot_foot_L_parentSpace_cmpInIn.globalXfo;
      name = "controls_Lfoot_foot_L_parentSpace_cmpInIn";
      break;
    }
    case 96: {
      xfo = this.controls_Lfoot_foot_L_outputs_hrc.globalXfo;
      name = "controls_Lfoot_foot_L_outputs_hrc";
      break;
    }
    case 97: {
      xfo = this.controls_Lfoot_foot_L_foot_cmpOutOut.globalXfo;
      name = "controls_Lfoot_foot_L_foot_cmpOutOut";
      break;
    }
    case 98: {
      xfo = this.controls_Lfoot_foot_L_ball_cmpOutOut.globalXfo;
      name = "controls_Lfoot_foot_L_ball_cmpOutOut";
      break;
    }
    case 99: {
      xfo = this.controls_Lfoot_foot_L_ikgoal_cmpOutOut.globalXfo;
      name = "controls_Lfoot_foot_L_ikgoal_cmpOutOut";
      break;
    }
    case 100: {
      xfo = this.controls_Lfoot_L_footRockerFoot_out_xfo.globalXfo;
      name = "controls_Lfoot_L_footRockerFoot_out_xfo";
      break;
    }
    case 101: {
      xfo = this.controls_Lfoot_L_footRockerBall_out_xfo.globalXfo;
      name = "controls_Lfoot_L_footRockerBall_out_xfo";
      break;
    }
    case 102: {
      xfo = this.controls_Lfoot_L_IKFootBlendKLOpFoot_out_xfo.globalXfo;
      name = "controls_Lfoot_L_IKFootBlendKLOpFoot_out_xfo";
      break;
    }
    case 103: {
      xfo = this.controls_Lfoot_L_IKFootBlendKLOpBall_out_xfo.globalXfo;
      name = "controls_Lfoot_L_IKFootBlendKLOpBall_out_xfo";
      break;
    }
    case 104: {
      xfo = this.controls_Lfoot_foot_L_foot01_spaceSpace.globalXfo;
      name = "controls_Lfoot_foot_L_foot01_spaceSpace";
      break;
    }
    case 105: {
      xfo = this.controls_Lfoot_L_foot_ik.globalXfo;
      name = "controls_Lfoot_L_foot_ik";
      break;
    }
    case 106: {
      xfo = this.controls_Lfoot_L_ikGoalRef_xfo.globalXfo;
      name = "controls_Lfoot_L_ikGoalRef_xfo";
      break;
    }
    case 107: {
      xfo = this.controls_Lfoot_L_ballJoint_xfo.globalXfo;
      name = "controls_Lfoot_L_ballJoint_xfo";
      break;
    }
    case 108: {
      xfo = this.controls_Lfoot_L_footJoint_xfo.globalXfo;
      name = "controls_Lfoot_L_footJoint_xfo";
      break;
    }
    case 109: {
      xfo = this.controls_Lfoot_L_heelPivot_xfo.globalXfo;
      name = "controls_Lfoot_L_heelPivot_xfo";
      break;
    }
    case 110: {
      xfo = this.controls_Lfoot_L_ballPivot_xfo.globalXfo;
      name = "controls_Lfoot_L_ballPivot_xfo";
      break;
    }
    case 111: {
      xfo = this.controls_Lfoot_L_ballTipPivot_xfo.globalXfo;
      name = "controls_Lfoot_L_ballTipPivot_xfo";
      break;
    }
    case 112: {
      xfo = this.controls_Lfoot_L_innerPivot_xfo.globalXfo;
      name = "controls_Lfoot_L_innerPivot_xfo";
      break;
    }
    case 113: {
      xfo = this.controls_Lfoot_L_outerPivot_xfo.globalXfo;
      name = "controls_Lfoot_L_outerPivot_xfo";
      break;
    }
    case 114: {
      xfo = this.controls_Lfoot_foot_L_foot02_spaceSpace.globalXfo;
      name = "controls_Lfoot_foot_L_foot02_spaceSpace";
      break;
    }
    case 115: {
      xfo = this.controls_Lfoot_L_foot_fk.globalXfo;
      name = "controls_Lfoot_L_foot_fk";
      break;
    }
    case 116: {
      xfo = this.controls_Lfoot_foot_L_ball01_spaceSpace.globalXfo;
      name = "controls_Lfoot_foot_L_ball01_spaceSpace";
      break;
    }
    case 117: {
      xfo = this.controls_Lfoot_L_ball_fk.globalXfo;
      name = "controls_Lfoot_L_ball_fk";
      break;
    }
    case 118: {
      xfo = this.deformers_Lfoot_foot_L_foot_cmp.globalXfo;
      name = "deformers_Lfoot_foot_L_foot_cmp";
      break;
    }
    case 119: {
      xfo = this.deformers_Lfoot_foot_L_foot_def.globalXfo;
      name = "deformers_Lfoot_foot_L_foot_def";
      break;
    }
    case 120: {
      xfo = this.deformers_Lfoot_foot_L_ball_def.globalXfo;
      name = "deformers_Lfoot_foot_L_ball_def";
      break;
    }
    case 121: {
      xfo = this.controls_Rfoot_foot_R_foot_cmp.globalXfo;
      name = "controls_Rfoot_foot_R_foot_cmp";
      break;
    }
    case 122: {
      xfo = this.controls_Rfoot_foot_R_inputs_hrc.globalXfo;
      name = "controls_Rfoot_foot_R_inputs_hrc";
      break;
    }
    case 123: {
      xfo = this.controls_Rfoot_foot_R_globalSRT_cmpInIn.globalXfo;
      name = "controls_Rfoot_foot_R_globalSRT_cmpInIn";
      break;
    }
    case 124: {
      xfo = this.controls_Rfoot_foot_R_parentSpace_cmpInIn.globalXfo;
      name = "controls_Rfoot_foot_R_parentSpace_cmpInIn";
      break;
    }
    case 125: {
      xfo = this.controls_Rfoot_foot_R_outputs_hrc.globalXfo;
      name = "controls_Rfoot_foot_R_outputs_hrc";
      break;
    }
    case 126: {
      xfo = this.controls_Rfoot_foot_R_foot_cmpOutOut.globalXfo;
      name = "controls_Rfoot_foot_R_foot_cmpOutOut";
      break;
    }
    case 127: {
      xfo = this.controls_Rfoot_foot_R_ball_cmpOutOut.globalXfo;
      name = "controls_Rfoot_foot_R_ball_cmpOutOut";
      break;
    }
    case 128: {
      xfo = this.controls_Rfoot_foot_R_ikgoal_cmpOutOut.globalXfo;
      name = "controls_Rfoot_foot_R_ikgoal_cmpOutOut";
      break;
    }
    case 129: {
      xfo = this.controls_Rfoot_R_footRockerFoot_out_xfo.globalXfo;
      name = "controls_Rfoot_R_footRockerFoot_out_xfo";
      break;
    }
    case 130: {
      xfo = this.controls_Rfoot_R_footRockerBall_out_xfo.globalXfo;
      name = "controls_Rfoot_R_footRockerBall_out_xfo";
      break;
    }
    case 131: {
      xfo = this.controls_Rfoot_R_IKFootBlendKLOpFoot_out_xfo.globalXfo;
      name = "controls_Rfoot_R_IKFootBlendKLOpFoot_out_xfo";
      break;
    }
    case 132: {
      xfo = this.controls_Rfoot_R_IKFootBlendKLOpBall_out_xfo.globalXfo;
      name = "controls_Rfoot_R_IKFootBlendKLOpBall_out_xfo";
      break;
    }
    case 133: {
      xfo = this.controls_Rfoot_foot_R_foot01_spaceSpace.globalXfo;
      name = "controls_Rfoot_foot_R_foot01_spaceSpace";
      break;
    }
    case 134: {
      xfo = this.controls_Rfoot_R_foot_ik.globalXfo;
      name = "controls_Rfoot_R_foot_ik";
      break;
    }
    case 135: {
      xfo = this.controls_Rfoot_R_ikGoalRef_xfo.globalXfo;
      name = "controls_Rfoot_R_ikGoalRef_xfo";
      break;
    }
    case 136: {
      xfo = this.controls_Rfoot_R_ballJoint_xfo.globalXfo;
      name = "controls_Rfoot_R_ballJoint_xfo";
      break;
    }
    case 137: {
      xfo = this.controls_Rfoot_R_footJoint_xfo.globalXfo;
      name = "controls_Rfoot_R_footJoint_xfo";
      break;
    }
    case 138: {
      xfo = this.controls_Rfoot_R_heelPivot_xfo.globalXfo;
      name = "controls_Rfoot_R_heelPivot_xfo";
      break;
    }
    case 139: {
      xfo = this.controls_Rfoot_R_ballPivot_xfo.globalXfo;
      name = "controls_Rfoot_R_ballPivot_xfo";
      break;
    }
    case 140: {
      xfo = this.controls_Rfoot_R_ballTipPivot_xfo.globalXfo;
      name = "controls_Rfoot_R_ballTipPivot_xfo";
      break;
    }
    case 141: {
      xfo = this.controls_Rfoot_R_innerPivot_xfo.globalXfo;
      name = "controls_Rfoot_R_innerPivot_xfo";
      break;
    }
    case 142: {
      xfo = this.controls_Rfoot_R_outerPivot_xfo.globalXfo;
      name = "controls_Rfoot_R_outerPivot_xfo";
      break;
    }
    case 143: {
      xfo = this.controls_Rfoot_foot_R_foot02_spaceSpace.globalXfo;
      name = "controls_Rfoot_foot_R_foot02_spaceSpace";
      break;
    }
    case 144: {
      xfo = this.controls_Rfoot_R_foot_fk.globalXfo;
      name = "controls_Rfoot_R_foot_fk";
      break;
    }
    case 145: {
      xfo = this.controls_Rfoot_foot_R_ball01_spaceSpace.globalXfo;
      name = "controls_Rfoot_foot_R_ball01_spaceSpace";
      break;
    }
    case 146: {
      xfo = this.controls_Rfoot_R_ball_fk.globalXfo;
      name = "controls_Rfoot_R_ball_fk";
      break;
    }
    case 147: {
      xfo = this.deformers_Rfoot_foot_R_foot_cmp.globalXfo;
      name = "deformers_Rfoot_foot_R_foot_cmp";
      break;
    }
    case 148: {
      xfo = this.deformers_Rfoot_foot_R_foot_def.globalXfo;
      name = "deformers_Rfoot_foot_R_foot_def";
      break;
    }
    case 149: {
      xfo = this.deformers_Rfoot_foot_R_ball_def.globalXfo;
      name = "deformers_Rfoot_foot_R_ball_def";
      break;
    }
    case 150: {
      xfo = this.controls_Rleg_leg_R_leg_cmp.globalXfo;
      name = "controls_Rleg_leg_R_leg_cmp";
      break;
    }
    case 151: {
      xfo = this.controls_Rleg_leg_R_inputs_hrc.globalXfo;
      name = "controls_Rleg_leg_R_inputs_hrc";
      break;
    }
    case 152: {
      xfo = this.controls_Rleg_leg_R_globalSRT_cmpInIn.globalXfo;
      name = "controls_Rleg_leg_R_globalSRT_cmpInIn";
      break;
    }
    case 153: {
      xfo = this.controls_Rleg_leg_R_parentSpace_cmpInIn.globalXfo;
      name = "controls_Rleg_leg_R_parentSpace_cmpInIn";
      break;
    }
    case 154: {
      xfo = this.controls_Rleg_leg_R_ikGoalInput_cmpInIn.globalXfo;
      name = "controls_Rleg_leg_R_ikGoalInput_cmpInIn";
      break;
    }
    case 155: {
      xfo = this.controls_Rleg_leg_R_outputs_hrc.globalXfo;
      name = "controls_Rleg_leg_R_outputs_hrc";
      break;
    }
    case 156: {
      xfo = this.controls_Rleg_leg_R_uplimb_cmpOutOut.globalXfo;
      name = "controls_Rleg_leg_R_uplimb_cmpOutOut";
      break;
    }
    case 157: {
      xfo = this.controls_Rleg_leg_R_lolimb_cmpOutOut.globalXfo;
      name = "controls_Rleg_leg_R_lolimb_cmpOutOut";
      break;
    }
    case 158: {
      xfo = this.controls_Rleg_leg_R_endlimb_cmpOutOut.globalXfo;
      name = "controls_Rleg_leg_R_endlimb_cmpOutOut";
      break;
    }
    case 159: {
      xfo = this.controls_Rleg_leg_R_upLeg01_spaceSpace.globalXfo;
      name = "controls_Rleg_leg_R_upLeg01_spaceSpace";
      break;
    }
    case 160: {
      xfo = this.controls_Rleg_R_upLeg_fk.globalXfo;
      name = "controls_Rleg_R_upLeg_fk";
      break;
    }
    case 161: {
      xfo = this.controls_Rleg_leg_R_loLeg01_spaceSpace.globalXfo;
      name = "controls_Rleg_leg_R_loLeg01_spaceSpace";
      break;
    }
    case 162: {
      xfo = this.controls_Rleg_R_loLeg_fk.globalXfo;
      name = "controls_Rleg_R_loLeg_fk";
      break;
    }
    case 163: {
      xfo = this.controls_Rleg_leg_R_footIK_spaceSpace.globalXfo;
      name = "controls_Rleg_leg_R_footIK_spaceSpace";
      break;
    }
    case 164: {
      xfo = this.controls_Rleg_R_footIK_xfo.globalXfo;
      name = "controls_Rleg_R_footIK_xfo";
      break;
    }
    case 165: {
      xfo = this.controls_Rleg_leg_R_legUpV01_spaceSpace.globalXfo;
      name = "controls_Rleg_leg_R_legUpV01_spaceSpace";
      break;
    }
    case 166: {
      xfo = this.controls_Rleg_R_legUpV_an.globalXfo;
      name = "controls_Rleg_R_legUpV_an";
      break;
    }
    case 167: {
      xfo = this.controls_Rleg_leg_R_legUpVIK_spaceSpace.globalXfo;
      name = "controls_Rleg_leg_R_legUpVIK_spaceSpace";
      break;
    }
    case 168: {
      xfo = this.controls_Rleg_leg_R_legIKMaster_spaceSpace.globalXfo;
      name = "controls_Rleg_leg_R_legIKMaster_spaceSpace";
      break;
    }
    case 169: {
      xfo = this.deformers_Rleg_leg_R_leg_cmp.globalXfo;
      name = "deformers_Rleg_leg_R_leg_cmp";
      break;
    }
    case 170: {
      xfo = this.deformers_Rleg_leg_R_upLeg_def.globalXfo;
      name = "deformers_Rleg_leg_R_upLeg_def";
      break;
    }
    case 171: {
      xfo = this.deformers_Rleg_leg_R_loLeg_def.globalXfo;
      name = "deformers_Rleg_leg_R_loLeg_def";
      break;
    }
    case 172: {
      xfo = this.deformers_Rleg_leg_R_legend_def.globalXfo;
      name = "deformers_Rleg_leg_R_legend_def";
      break;
    }
    case 173: {
      xfo = this.controls_Rarm_arm_R_arm_cmp.globalXfo;
      name = "controls_Rarm_arm_R_arm_cmp";
      break;
    }
    case 174: {
      xfo = this.controls_Rarm_arm_R_inputs_hrc.globalXfo;
      name = "controls_Rarm_arm_R_inputs_hrc";
      break;
    }
    case 175: {
      xfo = this.controls_Rarm_arm_R_globalSRT_cmpInIn.globalXfo;
      name = "controls_Rarm_arm_R_globalSRT_cmpInIn";
      break;
    }
    case 176: {
      xfo = this.controls_Rarm_arm_R_parentSpace_cmpInIn.globalXfo;
      name = "controls_Rarm_arm_R_parentSpace_cmpInIn";
      break;
    }
    case 177: {
      xfo = this.controls_Rarm_arm_R_ikGoalInput_cmpInIn.globalXfo;
      name = "controls_Rarm_arm_R_ikGoalInput_cmpInIn";
      break;
    }
    case 178: {
      xfo = this.controls_Rarm_arm_R_outputs_hrc.globalXfo;
      name = "controls_Rarm_arm_R_outputs_hrc";
      break;
    }
    case 179: {
      xfo = this.controls_Rarm_arm_R_uplimb_cmpOutOut.globalXfo;
      name = "controls_Rarm_arm_R_uplimb_cmpOutOut";
      break;
    }
    case 180: {
      xfo = this.controls_Rarm_arm_R_lolimb_cmpOutOut.globalXfo;
      name = "controls_Rarm_arm_R_lolimb_cmpOutOut";
      break;
    }
    case 181: {
      xfo = this.controls_Rarm_arm_R_endlimb_cmpOutOut.globalXfo;
      name = "controls_Rarm_arm_R_endlimb_cmpOutOut";
      break;
    }
    case 182: {
      xfo = this.controls_Rarm_arm_R_upArm01_spaceSpace.globalXfo;
      name = "controls_Rarm_arm_R_upArm01_spaceSpace";
      break;
    }
    case 183: {
      xfo = this.controls_Rarm_R_upArm_fk.globalXfo;
      name = "controls_Rarm_R_upArm_fk";
      break;
    }
    case 184: {
      xfo = this.controls_Rarm_arm_R_loArm01_spaceSpace.globalXfo;
      name = "controls_Rarm_arm_R_loArm01_spaceSpace";
      break;
    }
    case 185: {
      xfo = this.controls_Rarm_R_loArm_fk.globalXfo;
      name = "controls_Rarm_R_loArm_fk";
      break;
    }
    case 186: {
      xfo = this.controls_Rarm_arm_R_handIK_spaceSpace.globalXfo;
      name = "controls_Rarm_arm_R_handIK_spaceSpace";
      break;
    }
    case 187: {
      xfo = this.controls_Rarm_R_handIK_xfo.globalXfo;
      name = "controls_Rarm_R_handIK_xfo";
      break;
    }
    case 188: {
      xfo = this.controls_Rarm_arm_R_armUpV01_spaceSpace.globalXfo;
      name = "controls_Rarm_arm_R_armUpV01_spaceSpace";
      break;
    }
    case 189: {
      xfo = this.controls_Rarm_R_armUpV_an.globalXfo;
      name = "controls_Rarm_R_armUpV_an";
      break;
    }
    case 190: {
      xfo = this.controls_Rarm_arm_R_armUpVIK_spaceSpace.globalXfo;
      name = "controls_Rarm_arm_R_armUpVIK_spaceSpace";
      break;
    }
    case 191: {
      xfo = this.controls_Rarm_arm_R_armIKMaster_spaceSpace.globalXfo;
      name = "controls_Rarm_arm_R_armIKMaster_spaceSpace";
      break;
    }
    case 192: {
      xfo = this.deformers_Rarm_arm_R_arm_cmp.globalXfo;
      name = "deformers_Rarm_arm_R_arm_cmp";
      break;
    }
    case 193: {
      xfo = this.deformers_Rarm_arm_R_upArm_def.globalXfo;
      name = "deformers_Rarm_arm_R_upArm_def";
      break;
    }
    case 194: {
      xfo = this.deformers_Rarm_arm_R_loArm_def.globalXfo;
      name = "deformers_Rarm_arm_R_loArm_def";
      break;
    }
    case 195: {
      xfo = this.deformers_Rarm_arm_R_armend_def.globalXfo;
      name = "deformers_Rarm_arm_R_armend_def";
      break;
    }
    case 196: {
      xfo = this.controls_Larm_arm_L_arm_cmp.globalXfo;
      name = "controls_Larm_arm_L_arm_cmp";
      break;
    }
    case 197: {
      xfo = this.controls_Larm_arm_L_inputs_hrc.globalXfo;
      name = "controls_Larm_arm_L_inputs_hrc";
      break;
    }
    case 198: {
      xfo = this.controls_Larm_arm_L_globalSRT_cmpInIn.globalXfo;
      name = "controls_Larm_arm_L_globalSRT_cmpInIn";
      break;
    }
    case 199: {
      xfo = this.controls_Larm_arm_L_parentSpace_cmpInIn.globalXfo;
      name = "controls_Larm_arm_L_parentSpace_cmpInIn";
      break;
    }
    case 200: {
      xfo = this.controls_Larm_arm_L_ikGoalInput_cmpInIn.globalXfo;
      name = "controls_Larm_arm_L_ikGoalInput_cmpInIn";
      break;
    }
    case 201: {
      xfo = this.controls_Larm_arm_L_outputs_hrc.globalXfo;
      name = "controls_Larm_arm_L_outputs_hrc";
      break;
    }
    case 202: {
      xfo = this.controls_Larm_arm_L_uplimb_cmpOutOut.globalXfo;
      name = "controls_Larm_arm_L_uplimb_cmpOutOut";
      break;
    }
    case 203: {
      xfo = this.controls_Larm_arm_L_lolimb_cmpOutOut.globalXfo;
      name = "controls_Larm_arm_L_lolimb_cmpOutOut";
      break;
    }
    case 204: {
      xfo = this.controls_Larm_arm_L_endlimb_cmpOutOut.globalXfo;
      name = "controls_Larm_arm_L_endlimb_cmpOutOut";
      break;
    }
    case 205: {
      xfo = this.controls_Larm_arm_L_upArm01_spaceSpace.globalXfo;
      name = "controls_Larm_arm_L_upArm01_spaceSpace";
      break;
    }
    case 206: {
      xfo = this.controls_Larm_L_upArm_fk.globalXfo;
      name = "controls_Larm_L_upArm_fk";
      break;
    }
    case 207: {
      xfo = this.controls_Larm_arm_L_loArm01_spaceSpace.globalXfo;
      name = "controls_Larm_arm_L_loArm01_spaceSpace";
      break;
    }
    case 208: {
      xfo = this.controls_Larm_L_loArm_fk.globalXfo;
      name = "controls_Larm_L_loArm_fk";
      break;
    }
    case 209: {
      xfo = this.controls_Larm_arm_L_handIK_spaceSpace.globalXfo;
      name = "controls_Larm_arm_L_handIK_spaceSpace";
      break;
    }
    case 210: {
      xfo = this.controls_Larm_L_handIK_xfo.globalXfo;
      name = "controls_Larm_L_handIK_xfo";
      break;
    }
    case 211: {
      xfo = this.controls_Larm_arm_L_armUpV01_spaceSpace.globalXfo;
      name = "controls_Larm_arm_L_armUpV01_spaceSpace";
      break;
    }
    case 212: {
      xfo = this.controls_Larm_L_armUpV_an.globalXfo;
      name = "controls_Larm_L_armUpV_an";
      break;
    }
    case 213: {
      xfo = this.controls_Larm_arm_L_armUpVIK_spaceSpace.globalXfo;
      name = "controls_Larm_arm_L_armUpVIK_spaceSpace";
      break;
    }
    case 214: {
      xfo = this.controls_Larm_arm_L_armIKMaster_spaceSpace.globalXfo;
      name = "controls_Larm_arm_L_armIKMaster_spaceSpace";
      break;
    }
    case 215: {
      xfo = this.deformers_Larm_arm_L_arm_cmp.globalXfo;
      name = "deformers_Larm_arm_L_arm_cmp";
      break;
    }
    case 216: {
      xfo = this.deformers_Larm_arm_L_upArm_def.globalXfo;
      name = "deformers_Larm_arm_L_upArm_def";
      break;
    }
    case 217: {
      xfo = this.deformers_Larm_arm_L_loArm_def.globalXfo;
      name = "deformers_Larm_arm_L_loArm_def";
      break;
    }
    case 218: {
      xfo = this.deformers_Larm_arm_L_armend_def.globalXfo;
      name = "deformers_Larm_arm_L_armend_def";
      break;
    }
    case 219: {
      xfo = this.controls_Lhand_hand_L_hand_cmp.globalXfo;
      name = "controls_Lhand_hand_L_hand_cmp";
      break;
    }
    case 220: {
      xfo = this.controls_Lhand_hand_L_inputs_hrc.globalXfo;
      name = "controls_Lhand_hand_L_inputs_hrc";
      break;
    }
    case 221: {
      xfo = this.controls_Lhand_hand_L_globalSRT_cmpInIn.globalXfo;
      name = "controls_Lhand_hand_L_globalSRT_cmpInIn";
      break;
    }
    case 222: {
      xfo = this.controls_Lhand_hand_L_parentSpace_cmpInIn.globalXfo;
      name = "controls_Lhand_hand_L_parentSpace_cmpInIn";
      break;
    }
    case 223: {
      xfo = this.controls_Lhand_hand_L_outputs_hrc.globalXfo;
      name = "controls_Lhand_hand_L_outputs_hrc";
      break;
    }
    case 224: {
      xfo = this.controls_Lhand_hand_L_hand_cmpOutOut.globalXfo;
      name = "controls_Lhand_hand_L_hand_cmpOutOut";
      break;
    }
    case 225: {
      xfo = this.controls_Lhand_hand_L_palm_cmpOutOut.globalXfo;
      name = "controls_Lhand_hand_L_palm_cmpOutOut";
      break;
    }
    case 226: {
      xfo = this.controls_Lhand_hand_L_index_palm01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_index_palm01_spaceSpace";
      break;
    }
    case 227: {
      xfo = this.controls_Lhand_L_index_palm_fk.globalXfo;
      name = "controls_Lhand_L_index_palm_fk";
      break;
    }
    case 228: {
      xfo = this.controls_Lhand_hand_L_index_base01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_index_base01_spaceSpace";
      break;
    }
    case 229: {
      xfo = this.controls_Lhand_L_index_base_fk.globalXfo;
      name = "controls_Lhand_L_index_base_fk";
      break;
    }
    case 230: {
      xfo = this.controls_Lhand_hand_L_index_mid01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_index_mid01_spaceSpace";
      break;
    }
    case 231: {
      xfo = this.controls_Lhand_L_index_mid_fk.globalXfo;
      name = "controls_Lhand_L_index_mid_fk";
      break;
    }
    case 232: {
      xfo = this.controls_Lhand_hand_L_index_tip01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_index_tip01_spaceSpace";
      break;
    }
    case 233: {
      xfo = this.controls_Lhand_L_index_tip_fk.globalXfo;
      name = "controls_Lhand_L_index_tip_fk";
      break;
    }
    case 234: {
      xfo = this.controls_Lhand_hand_L_middle_palm01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_middle_palm01_spaceSpace";
      break;
    }
    case 235: {
      xfo = this.controls_Lhand_L_middle_palm_fk.globalXfo;
      name = "controls_Lhand_L_middle_palm_fk";
      break;
    }
    case 236: {
      xfo = this.controls_Lhand_hand_L_middle_base01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_middle_base01_spaceSpace";
      break;
    }
    case 237: {
      xfo = this.controls_Lhand_L_middle_base_fk.globalXfo;
      name = "controls_Lhand_L_middle_base_fk";
      break;
    }
    case 238: {
      xfo = this.controls_Lhand_hand_L_middle_mid01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_middle_mid01_spaceSpace";
      break;
    }
    case 239: {
      xfo = this.controls_Lhand_L_middle_mid_fk.globalXfo;
      name = "controls_Lhand_L_middle_mid_fk";
      break;
    }
    case 240: {
      xfo = this.controls_Lhand_hand_L_middle_tip01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_middle_tip01_spaceSpace";
      break;
    }
    case 241: {
      xfo = this.controls_Lhand_L_middle_tip_fk.globalXfo;
      name = "controls_Lhand_L_middle_tip_fk";
      break;
    }
    case 242: {
      xfo = this.controls_Lhand_hand_L_ring_palm01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_ring_palm01_spaceSpace";
      break;
    }
    case 243: {
      xfo = this.controls_Lhand_L_ring_palm_fk.globalXfo;
      name = "controls_Lhand_L_ring_palm_fk";
      break;
    }
    case 244: {
      xfo = this.controls_Lhand_hand_L_ring_base01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_ring_base01_spaceSpace";
      break;
    }
    case 245: {
      xfo = this.controls_Lhand_L_ring_base_fk.globalXfo;
      name = "controls_Lhand_L_ring_base_fk";
      break;
    }
    case 246: {
      xfo = this.controls_Lhand_hand_L_ring_mid01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_ring_mid01_spaceSpace";
      break;
    }
    case 247: {
      xfo = this.controls_Lhand_L_ring_mid_fk.globalXfo;
      name = "controls_Lhand_L_ring_mid_fk";
      break;
    }
    case 248: {
      xfo = this.controls_Lhand_hand_L_ring_tip01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_ring_tip01_spaceSpace";
      break;
    }
    case 249: {
      xfo = this.controls_Lhand_L_ring_tip_fk.globalXfo;
      name = "controls_Lhand_L_ring_tip_fk";
      break;
    }
    case 250: {
      xfo = this.controls_Lhand_hand_L_pinky_palm01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_pinky_palm01_spaceSpace";
      break;
    }
    case 251: {
      xfo = this.controls_Lhand_L_pinky_palm_fk.globalXfo;
      name = "controls_Lhand_L_pinky_palm_fk";
      break;
    }
    case 252: {
      xfo = this.controls_Lhand_hand_L_pinky_base01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_pinky_base01_spaceSpace";
      break;
    }
    case 253: {
      xfo = this.controls_Lhand_L_pinky_base_fk.globalXfo;
      name = "controls_Lhand_L_pinky_base_fk";
      break;
    }
    case 254: {
      xfo = this.controls_Lhand_hand_L_pinky_mid01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_pinky_mid01_spaceSpace";
      break;
    }
    case 255: {
      xfo = this.controls_Lhand_L_pinky_mid_fk.globalXfo;
      name = "controls_Lhand_L_pinky_mid_fk";
      break;
    }
    case 256: {
      xfo = this.controls_Lhand_hand_L_pinky_tip01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_pinky_tip01_spaceSpace";
      break;
    }
    case 257: {
      xfo = this.controls_Lhand_L_pinky_tip_fk.globalXfo;
      name = "controls_Lhand_L_pinky_tip_fk";
      break;
    }
    case 258: {
      xfo = this.controls_Lhand_hand_L_thumb_palm01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_thumb_palm01_spaceSpace";
      break;
    }
    case 259: {
      xfo = this.controls_Lhand_L_thumb_palm_fk.globalXfo;
      name = "controls_Lhand_L_thumb_palm_fk";
      break;
    }
    case 260: {
      xfo = this.controls_Lhand_hand_L_thumb_base01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_thumb_base01_spaceSpace";
      break;
    }
    case 261: {
      xfo = this.controls_Lhand_L_thumb_base_fk.globalXfo;
      name = "controls_Lhand_L_thumb_base_fk";
      break;
    }
    case 262: {
      xfo = this.controls_Lhand_hand_L_thumb_tip01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_thumb_tip01_spaceSpace";
      break;
    }
    case 263: {
      xfo = this.controls_Lhand_L_thumb_tip_fk.globalXfo;
      name = "controls_Lhand_L_thumb_tip_fk";
      break;
    }
    case 264: {
      xfo = this.controls_Lhand_hand_L_ikgoal_cmpOutOut.globalXfo;
      name = "controls_Lhand_hand_L_ikgoal_cmpOutOut";
      break;
    }
    case 265: {
      xfo = this.controls_Lhand_L_IKHandBlendKLOpHand_out_xfo.globalXfo;
      name = "controls_Lhand_L_IKHandBlendKLOpHand_out_xfo";
      break;
    }
    case 266: {
      xfo = this.controls_Lhand_L_IKHandBlendKLOpPalm_out_xfo.globalXfo;
      name = "controls_Lhand_L_IKHandBlendKLOpPalm_out_xfo";
      break;
    }
    case 267: {
      xfo = this.controls_Lhand_hand_L_hand01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_hand01_spaceSpace";
      break;
    }
    case 268: {
      xfo = this.controls_Lhand_L_hand_ik.globalXfo;
      name = "controls_Lhand_L_hand_ik";
      break;
    }
    case 269: {
      xfo = this.controls_Lhand_hand_L_handIK_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_handIK_spaceSpace";
      break;
    }
    case 270: {
      xfo = this.controls_Lhand_hand_L_palmIK_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_palmIK_spaceSpace";
      break;
    }
    case 271: {
      xfo = this.controls_Lhand_L_ikGoalRef_xfo.globalXfo;
      name = "controls_Lhand_L_ikGoalRef_xfo";
      break;
    }
    case 272: {
      xfo = this.controls_Lhand_hand_L_hand02_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_hand02_spaceSpace";
      break;
    }
    case 273: {
      xfo = this.controls_Lhand_L_hand_fk.globalXfo;
      name = "controls_Lhand_L_hand_fk";
      break;
    }
    case 274: {
      xfo = this.controls_Lhand_hand_L_palm01_spaceSpace.globalXfo;
      name = "controls_Lhand_hand_L_palm01_spaceSpace";
      break;
    }
    case 275: {
      xfo = this.controls_Lhand_L_palm_fk.globalXfo;
      name = "controls_Lhand_L_palm_fk";
      break;
    }
    case 276: {
      xfo = this.controls_Lhand_L_ikHand_xfo.globalXfo;
      name = "controls_Lhand_L_ikHand_xfo";
      break;
    }
    case 277: {
      xfo = this.controls_Lhand_L_ikPalm_xfo.globalXfo;
      name = "controls_Lhand_L_ikPalm_xfo";
      break;
    }
    case 278: {
      xfo = this.deformers_Lhand_hand_L_hand_cmp.globalXfo;
      name = "deformers_Lhand_hand_L_hand_cmp";
      break;
    }
    case 279: {
      xfo = this.deformers_Lhand_hand_L_hand_def.globalXfo;
      name = "deformers_Lhand_hand_L_hand_def";
      break;
    }
    case 280: {
      xfo = this.deformers_Lhand_hand_L_palm_def.globalXfo;
      name = "deformers_Lhand_hand_L_palm_def";
      break;
    }
    case 281: {
      xfo = this.deformers_Lhand_hand_L_index_palm_def.globalXfo;
      name = "deformers_Lhand_hand_L_index_palm_def";
      break;
    }
    case 282: {
      xfo = this.deformers_Lhand_hand_L_index_base_def.globalXfo;
      name = "deformers_Lhand_hand_L_index_base_def";
      break;
    }
    case 283: {
      xfo = this.deformers_Lhand_hand_L_index_mid_def.globalXfo;
      name = "deformers_Lhand_hand_L_index_mid_def";
      break;
    }
    case 284: {
      xfo = this.deformers_Lhand_hand_L_index_tip_def.globalXfo;
      name = "deformers_Lhand_hand_L_index_tip_def";
      break;
    }
    case 285: {
      xfo = this.deformers_Lhand_hand_L_middle_palm_def.globalXfo;
      name = "deformers_Lhand_hand_L_middle_palm_def";
      break;
    }
    case 286: {
      xfo = this.deformers_Lhand_hand_L_middle_base_def.globalXfo;
      name = "deformers_Lhand_hand_L_middle_base_def";
      break;
    }
    case 287: {
      xfo = this.deformers_Lhand_hand_L_middle_mid_def.globalXfo;
      name = "deformers_Lhand_hand_L_middle_mid_def";
      break;
    }
    case 288: {
      xfo = this.deformers_Lhand_hand_L_middle_tip_def.globalXfo;
      name = "deformers_Lhand_hand_L_middle_tip_def";
      break;
    }
    case 289: {
      xfo = this.deformers_Lhand_hand_L_ring_palm_def.globalXfo;
      name = "deformers_Lhand_hand_L_ring_palm_def";
      break;
    }
    case 290: {
      xfo = this.deformers_Lhand_hand_L_ring_base_def.globalXfo;
      name = "deformers_Lhand_hand_L_ring_base_def";
      break;
    }
    case 291: {
      xfo = this.deformers_Lhand_hand_L_ring_mid_def.globalXfo;
      name = "deformers_Lhand_hand_L_ring_mid_def";
      break;
    }
    case 292: {
      xfo = this.deformers_Lhand_hand_L_ring_tip_def.globalXfo;
      name = "deformers_Lhand_hand_L_ring_tip_def";
      break;
    }
    case 293: {
      xfo = this.deformers_Lhand_hand_L_pinky_palm_def.globalXfo;
      name = "deformers_Lhand_hand_L_pinky_palm_def";
      break;
    }
    case 294: {
      xfo = this.deformers_Lhand_hand_L_pinky_base_def.globalXfo;
      name = "deformers_Lhand_hand_L_pinky_base_def";
      break;
    }
    case 295: {
      xfo = this.deformers_Lhand_hand_L_pinky_mid_def.globalXfo;
      name = "deformers_Lhand_hand_L_pinky_mid_def";
      break;
    }
    case 296: {
      xfo = this.deformers_Lhand_hand_L_pinky_tip_def.globalXfo;
      name = "deformers_Lhand_hand_L_pinky_tip_def";
      break;
    }
    case 297: {
      xfo = this.deformers_Lhand_hand_L_thumb_palm_def.globalXfo;
      name = "deformers_Lhand_hand_L_thumb_palm_def";
      break;
    }
    case 298: {
      xfo = this.deformers_Lhand_hand_L_thumb_base_def.globalXfo;
      name = "deformers_Lhand_hand_L_thumb_base_def";
      break;
    }
    case 299: {
      xfo = this.deformers_Lhand_hand_L_thumb_tip_def.globalXfo;
      name = "deformers_Lhand_hand_L_thumb_tip_def";
      break;
    }
    case 300: {
      xfo = this.controls_Rhand_hand_R_hand_cmp.globalXfo;
      name = "controls_Rhand_hand_R_hand_cmp";
      break;
    }
    case 301: {
      xfo = this.controls_Rhand_hand_R_inputs_hrc.globalXfo;
      name = "controls_Rhand_hand_R_inputs_hrc";
      break;
    }
    case 302: {
      xfo = this.controls_Rhand_hand_R_globalSRT_cmpInIn.globalXfo;
      name = "controls_Rhand_hand_R_globalSRT_cmpInIn";
      break;
    }
    case 303: {
      xfo = this.controls_Rhand_hand_R_parentSpace_cmpInIn.globalXfo;
      name = "controls_Rhand_hand_R_parentSpace_cmpInIn";
      break;
    }
    case 304: {
      xfo = this.controls_Rhand_hand_R_outputs_hrc.globalXfo;
      name = "controls_Rhand_hand_R_outputs_hrc";
      break;
    }
    case 305: {
      xfo = this.controls_Rhand_hand_R_hand_cmpOutOut.globalXfo;
      name = "controls_Rhand_hand_R_hand_cmpOutOut";
      break;
    }
    case 306: {
      xfo = this.controls_Rhand_hand_R_palm_cmpOutOut.globalXfo;
      name = "controls_Rhand_hand_R_palm_cmpOutOut";
      break;
    }
    case 307: {
      xfo = this.controls_Rhand_hand_R_index_palm01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_index_palm01_spaceSpace";
      break;
    }
    case 308: {
      xfo = this.controls_Rhand_R_index_palm_fk.globalXfo;
      name = "controls_Rhand_R_index_palm_fk";
      break;
    }
    case 309: {
      xfo = this.controls_Rhand_hand_R_index_base01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_index_base01_spaceSpace";
      break;
    }
    case 310: {
      xfo = this.controls_Rhand_R_index_base_fk.globalXfo;
      name = "controls_Rhand_R_index_base_fk";
      break;
    }
    case 311: {
      xfo = this.controls_Rhand_hand_R_index_mid01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_index_mid01_spaceSpace";
      break;
    }
    case 312: {
      xfo = this.controls_Rhand_R_index_mid_fk.globalXfo;
      name = "controls_Rhand_R_index_mid_fk";
      break;
    }
    case 313: {
      xfo = this.controls_Rhand_hand_R_index_tip01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_index_tip01_spaceSpace";
      break;
    }
    case 314: {
      xfo = this.controls_Rhand_R_index_tip_fk.globalXfo;
      name = "controls_Rhand_R_index_tip_fk";
      break;
    }
    case 315: {
      xfo = this.controls_Rhand_hand_R_middle_palm01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_middle_palm01_spaceSpace";
      break;
    }
    case 316: {
      xfo = this.controls_Rhand_R_middle_palm_fk.globalXfo;
      name = "controls_Rhand_R_middle_palm_fk";
      break;
    }
    case 317: {
      xfo = this.controls_Rhand_hand_R_middle_base01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_middle_base01_spaceSpace";
      break;
    }
    case 318: {
      xfo = this.controls_Rhand_R_middle_base_fk.globalXfo;
      name = "controls_Rhand_R_middle_base_fk";
      break;
    }
    case 319: {
      xfo = this.controls_Rhand_hand_R_middle_mid01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_middle_mid01_spaceSpace";
      break;
    }
    case 320: {
      xfo = this.controls_Rhand_R_middle_mid_fk.globalXfo;
      name = "controls_Rhand_R_middle_mid_fk";
      break;
    }
    case 321: {
      xfo = this.controls_Rhand_hand_R_middle_tip01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_middle_tip01_spaceSpace";
      break;
    }
    case 322: {
      xfo = this.controls_Rhand_R_middle_tip_fk.globalXfo;
      name = "controls_Rhand_R_middle_tip_fk";
      break;
    }
    case 323: {
      xfo = this.controls_Rhand_hand_R_ring_palm01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_ring_palm01_spaceSpace";
      break;
    }
    case 324: {
      xfo = this.controls_Rhand_R_ring_palm_fk.globalXfo;
      name = "controls_Rhand_R_ring_palm_fk";
      break;
    }
    case 325: {
      xfo = this.controls_Rhand_hand_R_ring_base01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_ring_base01_spaceSpace";
      break;
    }
    case 326: {
      xfo = this.controls_Rhand_R_ring_base_fk.globalXfo;
      name = "controls_Rhand_R_ring_base_fk";
      break;
    }
    case 327: {
      xfo = this.controls_Rhand_hand_R_ring_mid01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_ring_mid01_spaceSpace";
      break;
    }
    case 328: {
      xfo = this.controls_Rhand_R_ring_mid_fk.globalXfo;
      name = "controls_Rhand_R_ring_mid_fk";
      break;
    }
    case 329: {
      xfo = this.controls_Rhand_hand_R_ring_tip01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_ring_tip01_spaceSpace";
      break;
    }
    case 330: {
      xfo = this.controls_Rhand_R_ring_tip_fk.globalXfo;
      name = "controls_Rhand_R_ring_tip_fk";
      break;
    }
    case 331: {
      xfo = this.controls_Rhand_hand_R_pinky_palm01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_pinky_palm01_spaceSpace";
      break;
    }
    case 332: {
      xfo = this.controls_Rhand_R_pinky_palm_fk.globalXfo;
      name = "controls_Rhand_R_pinky_palm_fk";
      break;
    }
    case 333: {
      xfo = this.controls_Rhand_hand_R_pinky_base01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_pinky_base01_spaceSpace";
      break;
    }
    case 334: {
      xfo = this.controls_Rhand_R_pinky_base_fk.globalXfo;
      name = "controls_Rhand_R_pinky_base_fk";
      break;
    }
    case 335: {
      xfo = this.controls_Rhand_hand_R_pinky_mid01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_pinky_mid01_spaceSpace";
      break;
    }
    case 336: {
      xfo = this.controls_Rhand_R_pinky_mid_fk.globalXfo;
      name = "controls_Rhand_R_pinky_mid_fk";
      break;
    }
    case 337: {
      xfo = this.controls_Rhand_hand_R_pinky_tip01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_pinky_tip01_spaceSpace";
      break;
    }
    case 338: {
      xfo = this.controls_Rhand_R_pinky_tip_fk.globalXfo;
      name = "controls_Rhand_R_pinky_tip_fk";
      break;
    }
    case 339: {
      xfo = this.controls_Rhand_hand_R_thumb_palm01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_thumb_palm01_spaceSpace";
      break;
    }
    case 340: {
      xfo = this.controls_Rhand_R_thumb_palm_fk.globalXfo;
      name = "controls_Rhand_R_thumb_palm_fk";
      break;
    }
    case 341: {
      xfo = this.controls_Rhand_hand_R_thumb_base01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_thumb_base01_spaceSpace";
      break;
    }
    case 342: {
      xfo = this.controls_Rhand_R_thumb_base_fk.globalXfo;
      name = "controls_Rhand_R_thumb_base_fk";
      break;
    }
    case 343: {
      xfo = this.controls_Rhand_hand_R_thumb_tip01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_thumb_tip01_spaceSpace";
      break;
    }
    case 344: {
      xfo = this.controls_Rhand_R_thumb_tip_fk.globalXfo;
      name = "controls_Rhand_R_thumb_tip_fk";
      break;
    }
    case 345: {
      xfo = this.controls_Rhand_hand_R_ikgoal_cmpOutOut.globalXfo;
      name = "controls_Rhand_hand_R_ikgoal_cmpOutOut";
      break;
    }
    case 346: {
      xfo = this.controls_Rhand_R_IKHandBlendKLOpHand_out_xfo.globalXfo;
      name = "controls_Rhand_R_IKHandBlendKLOpHand_out_xfo";
      break;
    }
    case 347: {
      xfo = this.controls_Rhand_R_IKHandBlendKLOpPalm_out_xfo.globalXfo;
      name = "controls_Rhand_R_IKHandBlendKLOpPalm_out_xfo";
      break;
    }
    case 348: {
      xfo = this.controls_Rhand_hand_R_hand01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_hand01_spaceSpace";
      break;
    }
    case 349: {
      xfo = this.controls_Rhand_R_hand_ik.globalXfo;
      name = "controls_Rhand_R_hand_ik";
      break;
    }
    case 350: {
      xfo = this.controls_Rhand_hand_R_handIK_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_handIK_spaceSpace";
      break;
    }
    case 351: {
      xfo = this.controls_Rhand_hand_R_palmIK_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_palmIK_spaceSpace";
      break;
    }
    case 352: {
      xfo = this.controls_Rhand_R_ikGoalRef_xfo.globalXfo;
      name = "controls_Rhand_R_ikGoalRef_xfo";
      break;
    }
    case 353: {
      xfo = this.controls_Rhand_hand_R_hand02_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_hand02_spaceSpace";
      break;
    }
    case 354: {
      xfo = this.controls_Rhand_R_hand_fk.globalXfo;
      name = "controls_Rhand_R_hand_fk";
      break;
    }
    case 355: {
      xfo = this.controls_Rhand_hand_R_palm01_spaceSpace.globalXfo;
      name = "controls_Rhand_hand_R_palm01_spaceSpace";
      break;
    }
    case 356: {
      xfo = this.controls_Rhand_R_palm_fk.globalXfo;
      name = "controls_Rhand_R_palm_fk";
      break;
    }
    case 357: {
      xfo = this.controls_Rhand_R_ikHand_xfo.globalXfo;
      name = "controls_Rhand_R_ikHand_xfo";
      break;
    }
    case 358: {
      xfo = this.controls_Rhand_R_ikPalm_xfo.globalXfo;
      name = "controls_Rhand_R_ikPalm_xfo";
      break;
    }
    case 359: {
      xfo = this.deformers_Rhand_hand_R_hand_cmp.globalXfo;
      name = "deformers_Rhand_hand_R_hand_cmp";
      break;
    }
    case 360: {
      xfo = this.deformers_Rhand_hand_R_hand_def.globalXfo;
      name = "deformers_Rhand_hand_R_hand_def";
      break;
    }
    case 361: {
      xfo = this.deformers_Rhand_hand_R_palm_def.globalXfo;
      name = "deformers_Rhand_hand_R_palm_def";
      break;
    }
    case 362: {
      xfo = this.deformers_Rhand_hand_R_index_palm_def.globalXfo;
      name = "deformers_Rhand_hand_R_index_palm_def";
      break;
    }
    case 363: {
      xfo = this.deformers_Rhand_hand_R_index_base_def.globalXfo;
      name = "deformers_Rhand_hand_R_index_base_def";
      break;
    }
    case 364: {
      xfo = this.deformers_Rhand_hand_R_index_mid_def.globalXfo;
      name = "deformers_Rhand_hand_R_index_mid_def";
      break;
    }
    case 365: {
      xfo = this.deformers_Rhand_hand_R_index_tip_def.globalXfo;
      name = "deformers_Rhand_hand_R_index_tip_def";
      break;
    }
    case 366: {
      xfo = this.deformers_Rhand_hand_R_middle_palm_def.globalXfo;
      name = "deformers_Rhand_hand_R_middle_palm_def";
      break;
    }
    case 367: {
      xfo = this.deformers_Rhand_hand_R_middle_base_def.globalXfo;
      name = "deformers_Rhand_hand_R_middle_base_def";
      break;
    }
    case 368: {
      xfo = this.deformers_Rhand_hand_R_middle_mid_def.globalXfo;
      name = "deformers_Rhand_hand_R_middle_mid_def";
      break;
    }
    case 369: {
      xfo = this.deformers_Rhand_hand_R_middle_tip_def.globalXfo;
      name = "deformers_Rhand_hand_R_middle_tip_def";
      break;
    }
    case 370: {
      xfo = this.deformers_Rhand_hand_R_ring_palm_def.globalXfo;
      name = "deformers_Rhand_hand_R_ring_palm_def";
      break;
    }
    case 371: {
      xfo = this.deformers_Rhand_hand_R_ring_base_def.globalXfo;
      name = "deformers_Rhand_hand_R_ring_base_def";
      break;
    }
    case 372: {
      xfo = this.deformers_Rhand_hand_R_ring_mid_def.globalXfo;
      name = "deformers_Rhand_hand_R_ring_mid_def";
      break;
    }
    case 373: {
      xfo = this.deformers_Rhand_hand_R_ring_tip_def.globalXfo;
      name = "deformers_Rhand_hand_R_ring_tip_def";
      break;
    }
    case 374: {
      xfo = this.deformers_Rhand_hand_R_pinky_palm_def.globalXfo;
      name = "deformers_Rhand_hand_R_pinky_palm_def";
      break;
    }
    case 375: {
      xfo = this.deformers_Rhand_hand_R_pinky_base_def.globalXfo;
      name = "deformers_Rhand_hand_R_pinky_base_def";
      break;
    }
    case 376: {
      xfo = this.deformers_Rhand_hand_R_pinky_mid_def.globalXfo;
      name = "deformers_Rhand_hand_R_pinky_mid_def";
      break;
    }
    case 377: {
      xfo = this.deformers_Rhand_hand_R_pinky_tip_def.globalXfo;
      name = "deformers_Rhand_hand_R_pinky_tip_def";
      break;
    }
    case 378: {
      xfo = this.deformers_Rhand_hand_R_thumb_palm_def.globalXfo;
      name = "deformers_Rhand_hand_R_thumb_palm_def";
      break;
    }
    case 379: {
      xfo = this.deformers_Rhand_hand_R_thumb_base_def.globalXfo;
      name = "deformers_Rhand_hand_R_thumb_base_def";
      break;
    }
    case 380: {
      xfo = this.deformers_Rhand_hand_R_thumb_tip_def.globalXfo;
      name = "deformers_Rhand_hand_R_thumb_tip_def";
      break;
    }
    case 381: {
      xfo = this.controls_MheadNeck_headNeck_M_headNeck_cmp.globalXfo;
      name = "controls_MheadNeck_headNeck_M_headNeck_cmp";
      break;
    }
    case 382: {
      xfo = this.controls_MheadNeck_headNeck_M_inputs_hrc.globalXfo;
      name = "controls_MheadNeck_headNeck_M_inputs_hrc";
      break;
    }
    case 383: {
      xfo = this.controls_MheadNeck_headNeck_M_globalSRT_cmpInIn.globalXfo;
      name = "controls_MheadNeck_headNeck_M_globalSRT_cmpInIn";
      break;
    }
    case 384: {
      xfo = this.controls_MheadNeck_headNeck_M_head_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_head_spaceSpace";
      break;
    }
    case 385: {
      xfo = this.controls_MheadNeck_headNeck_M_headIK_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_headIK_spaceSpace";
      break;
    }
    case 386: {
      xfo = this.controls_MheadNeck_M_head_ik.globalXfo;
      name = "controls_MheadNeck_M_head_ik";
      break;
    }
    case 387: {
      xfo = this.controls_MheadNeck_headNeck_M_headUpV_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_headUpV_spaceSpace";
      break;
    }
    case 388: {
      xfo = this.controls_MheadNeck_M_headUpV_an.globalXfo;
      name = "controls_MheadNeck_M_headUpV_an";
      break;
    }
    case 389: {
      xfo = this.controls_MheadNeck_headNeck_M_headWorld01_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_headWorld01_spaceSpace";
      break;
    }
    case 390: {
      xfo = this.controls_MheadNeck_M_headWorld_ik.globalXfo;
      name = "controls_MheadNeck_M_headWorld_ik";
      break;
    }
    case 391: {
      xfo = this.controls_MheadNeck_headNeck_M_parentSpace_cmpInIn.globalXfo;
      name = "controls_MheadNeck_headNeck_M_parentSpace_cmpInIn";
      break;
    }
    case 392: {
      xfo = this.controls_MheadNeck_headNeck_M_outputs_hrc.globalXfo;
      name = "controls_MheadNeck_headNeck_M_outputs_hrc";
      break;
    }
    case 393: {
      xfo = this.controls_MheadNeck_headNeck_M_neckBase_cmpOutOut.globalXfo;
      name = "controls_MheadNeck_headNeck_M_neckBase_cmpOutOut";
      break;
    }
    case 394: {
      xfo = this.controls_MheadNeck_headNeck_M_neckEnd_cmpOutOut.globalXfo;
      name = "controls_MheadNeck_headNeck_M_neckEnd_cmpOutOut";
      break;
    }
    case 395: {
      xfo = this.controls_MheadNeck_headNeck_M_neck01_cmpOutOut.globalXfo;
      name = "controls_MheadNeck_headNeck_M_neck01_cmpOutOut";
      break;
    }
    case 396: {
      xfo = this.controls_MheadNeck_headNeck_M_neck02_cmpOutOut.globalXfo;
      name = "controls_MheadNeck_headNeck_M_neck02_cmpOutOut";
      break;
    }
    case 397: {
      xfo = this.controls_MheadNeck_headNeck_M_neck03_cmpOutOut.globalXfo;
      name = "controls_MheadNeck_headNeck_M_neck03_cmpOutOut";
      break;
    }
    case 398: {
      xfo = this.controls_MheadNeck_headNeck_M_neck04_cmpOutOut.globalXfo;
      name = "controls_MheadNeck_headNeck_M_neck04_cmpOutOut";
      break;
    }
    case 399: {
      xfo = this.controls_MheadNeck_headNeck_M_neck01_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_neck01_spaceSpace";
      break;
    }
    case 400: {
      xfo = this.controls_MheadNeck_M_neck_fk.globalXfo;
      name = "controls_MheadNeck_M_neck_fk";
      break;
    }
    case 401: {
      xfo = this.controls_MheadNeck_headNeck_M_head01_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_head01_spaceSpace";
      break;
    }
    case 402: {
      xfo = this.controls_MheadNeck_M_head_fk.globalXfo;
      name = "controls_MheadNeck_M_head_fk";
      break;
    }
    case 403: {
      xfo = this.controls_MheadNeck_headNeck_M_headAlign_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_headAlign_spaceSpace";
      break;
    }
    case 404: {
      xfo = this.controls_MheadNeck_headNeck_M_headHandle_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_headHandle_spaceSpace";
      break;
    }
    case 405: {
      xfo = this.controls_MheadNeck_headNeck_M_neckHandle_spaceSpace.globalXfo;
      name = "controls_MheadNeck_headNeck_M_neckHandle_spaceSpace";
      break;
    }
    case 406: {
      xfo = this.deformers_MheadNeck_headNeck_M_headNeck_cmp.globalXfo;
      name = "deformers_MheadNeck_headNeck_M_headNeck_cmp";
      break;
    }
    case 407: {
      xfo = this.deformers_MheadNeck_headNeck_M_neck01_def.globalXfo;
      name = "deformers_MheadNeck_headNeck_M_neck01_def";
      break;
    }
    case 408: {
      xfo = this.deformers_MheadNeck_headNeck_M_neck02_def.globalXfo;
      name = "deformers_MheadNeck_headNeck_M_neck02_def";
      break;
    }
    case 409: {
      xfo = this.deformers_MheadNeck_headNeck_M_neck03_def.globalXfo;
      name = "deformers_MheadNeck_headNeck_M_neck03_def";
      break;
    }
    case 410: {
      xfo = this.deformers_MheadNeck_headNeck_M_head_def.globalXfo;
      name = "deformers_MheadNeck_headNeck_M_head_def";
      break;
    }
    case 411: {
      xfo = this.controls_LpalmSocket_palmSocket_L_palmSocket_cmp.globalXfo;
      name = "controls_LpalmSocket_palmSocket_L_palmSocket_cmp";
      break;
    }
    case 412: {
      xfo = this.controls_LpalmSocket_palmSocket_L_inputs_hrc.globalXfo;
      name = "controls_LpalmSocket_palmSocket_L_inputs_hrc";
      break;
    }
    case 413: {
      xfo = this.controls_LpalmSocket_palmSocket_L_parentSpace_cmpInIn.globalXfo;
      name = "controls_LpalmSocket_palmSocket_L_parentSpace_cmpInIn";
      break;
    }
    case 414: {
      xfo = this.controls_LpalmSocket_palmSocket_L_globalSRT_cmpInIn.globalXfo;
      name = "controls_LpalmSocket_palmSocket_L_globalSRT_cmpInIn";
      break;
    }
    case 415: {
      xfo = this.controls_LpalmSocket_palmSocket_L_outputs_hrc.globalXfo;
      name = "controls_LpalmSocket_palmSocket_L_outputs_hrc";
      break;
    }
    case 416: {
      xfo = this.controls_LpalmSocket_palmSocket_L_socket_cmpOutOut.globalXfo;
      name = "controls_LpalmSocket_palmSocket_L_socket_cmpOutOut";
      break;
    }
    case 417: {
      xfo = this.controls_LpalmSocket_palmSocket_L_palmSocket_offset01_spaceSpace.globalXfo;
      name = "controls_LpalmSocket_palmSocket_L_palmSocket_offset01_spaceSpace";
      break;
    }
    case 418: {
      xfo = this.controls_LpalmSocket_L_palmSocket_offset_an.globalXfo;
      name = "controls_LpalmSocket_L_palmSocket_offset_an";
      break;
    }
    case 419: {
      xfo = this.controls_LpalmSocket_L_palmSocket_an.globalXfo;
      name = "controls_LpalmSocket_L_palmSocket_an";
      break;
    }
    case 420: {
      xfo = this.deformers_LpalmSocket_palmSocket_L_palmSocket_cmp.globalXfo;
      name = "deformers_LpalmSocket_palmSocket_L_palmSocket_cmp";
      break;
    }
    case 421: {
      xfo = this.deformers_LpalmSocket_palmSocket_L_palmSocket_def.globalXfo;
      name = "deformers_LpalmSocket_palmSocket_L_palmSocket_def";
      break;
    }
    case 422: {
      xfo = this.controls_RpalmSocket_palmSocket_R_palmSocket_cmp.globalXfo;
      name = "controls_RpalmSocket_palmSocket_R_palmSocket_cmp";
      break;
    }
    case 423: {
      xfo = this.controls_RpalmSocket_palmSocket_R_inputs_hrc.globalXfo;
      name = "controls_RpalmSocket_palmSocket_R_inputs_hrc";
      break;
    }
    case 424: {
      xfo = this.controls_RpalmSocket_palmSocket_R_parentSpace_cmpInIn.globalXfo;
      name = "controls_RpalmSocket_palmSocket_R_parentSpace_cmpInIn";
      break;
    }
    case 425: {
      xfo = this.controls_RpalmSocket_palmSocket_R_globalSRT_cmpInIn.globalXfo;
      name = "controls_RpalmSocket_palmSocket_R_globalSRT_cmpInIn";
      break;
    }
    case 426: {
      xfo = this.controls_RpalmSocket_palmSocket_R_outputs_hrc.globalXfo;
      name = "controls_RpalmSocket_palmSocket_R_outputs_hrc";
      break;
    }
    case 427: {
      xfo = this.controls_RpalmSocket_palmSocket_R_socket_cmpOutOut.globalXfo;
      name = "controls_RpalmSocket_palmSocket_R_socket_cmpOutOut";
      break;
    }
    case 428: {
      xfo = this.controls_RpalmSocket_palmSocket_R_palmSocket_offset01_spaceSpace.globalXfo;
      name = "controls_RpalmSocket_palmSocket_R_palmSocket_offset01_spaceSpace";
      break;
    }
    case 429: {
      xfo = this.controls_RpalmSocket_R_palmSocket_offset_an.globalXfo;
      name = "controls_RpalmSocket_R_palmSocket_offset_an";
      break;
    }
    case 430: {
      xfo = this.controls_RpalmSocket_R_palmSocket_an.globalXfo;
      name = "controls_RpalmSocket_R_palmSocket_an";
      break;
    }
    case 431: {
      xfo = this.deformers_RpalmSocket_palmSocket_R_palmSocket_cmp.globalXfo;
      name = "deformers_RpalmSocket_palmSocket_R_palmSocket_cmp";
      break;
    }
    case 432: {
      xfo = this.deformers_RpalmSocket_palmSocket_R_palmSocket_def.globalXfo;
      name = "deformers_RpalmSocket_palmSocket_R_palmSocket_def";
      break;
    }
    case 433: {
      xfo = this.controls_MheadSocket_headSocket_M_headSocket_cmp.globalXfo;
      name = "controls_MheadSocket_headSocket_M_headSocket_cmp";
      break;
    }
    case 434: {
      xfo = this.controls_MheadSocket_headSocket_M_inputs_hrc.globalXfo;
      name = "controls_MheadSocket_headSocket_M_inputs_hrc";
      break;
    }
    case 435: {
      xfo = this.controls_MheadSocket_headSocket_M_parentSpace_cmpInIn.globalXfo;
      name = "controls_MheadSocket_headSocket_M_parentSpace_cmpInIn";
      break;
    }
    case 436: {
      xfo = this.controls_MheadSocket_headSocket_M_globalSRT_cmpInIn.globalXfo;
      name = "controls_MheadSocket_headSocket_M_globalSRT_cmpInIn";
      break;
    }
    case 437: {
      xfo = this.controls_MheadSocket_headSocket_M_outputs_hrc.globalXfo;
      name = "controls_MheadSocket_headSocket_M_outputs_hrc";
      break;
    }
    case 438: {
      xfo = this.controls_MheadSocket_headSocket_M_socket_cmpOutOut.globalXfo;
      name = "controls_MheadSocket_headSocket_M_socket_cmpOutOut";
      break;
    }
    case 439: {
      xfo = this.controls_MheadSocket_headSocket_M_headSocket_offset01_spaceSpace.globalXfo;
      name = "controls_MheadSocket_headSocket_M_headSocket_offset01_spaceSpace";
      break;
    }
    case 440: {
      xfo = this.controls_MheadSocket_M_headSocket_offset_an.globalXfo;
      name = "controls_MheadSocket_M_headSocket_offset_an";
      break;
    }
    case 441: {
      xfo = this.controls_MheadSocket_M_headSocket_an.globalXfo;
      name = "controls_MheadSocket_M_headSocket_an";
      break;
    }
    case 442: {
      xfo = this.deformers_MheadSocket_headSocket_M_headSocket_cmp.globalXfo;
      name = "deformers_MheadSocket_headSocket_M_headSocket_cmp";
      break;
    }
    case 443: {
      xfo = this.deformers_MheadSocket_headSocket_M_headSocket_def.globalXfo;
      name = "deformers_MheadSocket_headSocket_M_headSocket_def";
      break;
    }
    case 444: {
      xfo = this.controls_MsocketA_socketA_M_socketA_cmp.globalXfo;
      name = "controls_MsocketA_socketA_M_socketA_cmp";
      break;
    }
    case 445: {
      xfo = this.controls_MsocketA_socketA_M_inputs_hrc.globalXfo;
      name = "controls_MsocketA_socketA_M_inputs_hrc";
      break;
    }
    case 446: {
      xfo = this.controls_MsocketA_socketA_M_parentSpace_cmpInIn.globalXfo;
      name = "controls_MsocketA_socketA_M_parentSpace_cmpInIn";
      break;
    }
    case 447: {
      xfo = this.controls_MsocketA_socketA_M_globalSRT_cmpInIn.globalXfo;
      name = "controls_MsocketA_socketA_M_globalSRT_cmpInIn";
      break;
    }
    case 448: {
      xfo = this.controls_MsocketA_socketA_M_outputs_hrc.globalXfo;
      name = "controls_MsocketA_socketA_M_outputs_hrc";
      break;
    }
    case 449: {
      xfo = this.controls_MsocketA_socketA_M_socket_cmpOutOut.globalXfo;
      name = "controls_MsocketA_socketA_M_socket_cmpOutOut";
      break;
    }
    case 450: {
      xfo = this.controls_MsocketA_socketA_M_socketA_offset01_spaceSpace.globalXfo;
      name = "controls_MsocketA_socketA_M_socketA_offset01_spaceSpace";
      break;
    }
    case 451: {
      xfo = this.controls_MsocketA_M_socketA_offset_an.globalXfo;
      name = "controls_MsocketA_M_socketA_offset_an";
      break;
    }
    case 452: {
      xfo = this.controls_MsocketA_M_socketA_an.globalXfo;
      name = "controls_MsocketA_M_socketA_an";
      break;
    }
    case 453: {
      xfo = this.deformers_MsocketA_socketA_M_socketA_cmp.globalXfo;
      name = "deformers_MsocketA_socketA_M_socketA_cmp";
      break;
    }
    case 454: {
      xfo = this.deformers_MsocketA_socketA_M_socketA_def.globalXfo;
      name = "deformers_MsocketA_socketA_M_socketA_def";
      break;
    }
    case 455: {
      xfo = this.controls_MsocketB_socketB_M_socketB_cmp.globalXfo;
      name = "controls_MsocketB_socketB_M_socketB_cmp";
      break;
    }
    case 456: {
      xfo = this.controls_MsocketB_socketB_M_inputs_hrc.globalXfo;
      name = "controls_MsocketB_socketB_M_inputs_hrc";
      break;
    }
    case 457: {
      xfo = this.controls_MsocketB_socketB_M_parentSpace_cmpInIn.globalXfo;
      name = "controls_MsocketB_socketB_M_parentSpace_cmpInIn";
      break;
    }
    case 458: {
      xfo = this.controls_MsocketB_socketB_M_globalSRT_cmpInIn.globalXfo;
      name = "controls_MsocketB_socketB_M_globalSRT_cmpInIn";
      break;
    }
    case 459: {
      xfo = this.controls_MsocketB_socketB_M_outputs_hrc.globalXfo;
      name = "controls_MsocketB_socketB_M_outputs_hrc";
      break;
    }
    case 460: {
      xfo = this.controls_MsocketB_socketB_M_socket_cmpOutOut.globalXfo;
      name = "controls_MsocketB_socketB_M_socket_cmpOutOut";
      break;
    }
    case 461: {
      xfo = this.controls_MsocketB_socketB_M_socketB_offset01_spaceSpace.globalXfo;
      name = "controls_MsocketB_socketB_M_socketB_offset01_spaceSpace";
      break;
    }
    case 462: {
      xfo = this.controls_MsocketB_M_socketB_offset_an.globalXfo;
      name = "controls_MsocketB_M_socketB_offset_an";
      break;
    }
    case 463: {
      xfo = this.controls_MsocketB_M_socketB_an.globalXfo;
      name = "controls_MsocketB_M_socketB_an";
      break;
    }
    case 464: {
      xfo = this.deformers_MsocketB_socketB_M_socketB_cmp.globalXfo;
      name = "deformers_MsocketB_socketB_M_socketB_cmp";
      break;
    }
    case 465: {
      xfo = this.deformers_MsocketB_socketB_M_socketB_def.globalXfo;
      name = "deformers_MsocketB_socketB_M_socketB_def";
      break;
    }
    case 466: {
      xfo = this.controls_MsocketC_socketC_M_socketC_cmp.globalXfo;
      name = "controls_MsocketC_socketC_M_socketC_cmp";
      break;
    }
    case 467: {
      xfo = this.controls_MsocketC_socketC_M_inputs_hrc.globalXfo;
      name = "controls_MsocketC_socketC_M_inputs_hrc";
      break;
    }
    case 468: {
      xfo = this.controls_MsocketC_socketC_M_parentSpace_cmpInIn.globalXfo;
      name = "controls_MsocketC_socketC_M_parentSpace_cmpInIn";
      break;
    }
    case 469: {
      xfo = this.controls_MsocketC_socketC_M_globalSRT_cmpInIn.globalXfo;
      name = "controls_MsocketC_socketC_M_globalSRT_cmpInIn";
      break;
    }
    case 470: {
      xfo = this.controls_MsocketC_socketC_M_outputs_hrc.globalXfo;
      name = "controls_MsocketC_socketC_M_outputs_hrc";
      break;
    }
    case 471: {
      xfo = this.controls_MsocketC_socketC_M_socket_cmpOutOut.globalXfo;
      name = "controls_MsocketC_socketC_M_socket_cmpOutOut";
      break;
    }
    case 472: {
      xfo = this.controls_MsocketC_socketC_M_socketC_offset01_spaceSpace.globalXfo;
      name = "controls_MsocketC_socketC_M_socketC_offset01_spaceSpace";
      break;
    }
    case 473: {
      xfo = this.controls_MsocketC_M_socketC_offset_an.globalXfo;
      name = "controls_MsocketC_M_socketC_offset_an";
      break;
    }
    case 474: {
      xfo = this.controls_MsocketC_M_socketC_an.globalXfo;
      name = "controls_MsocketC_M_socketC_an";
      break;
    }
    case 475: {
      xfo = this.deformers_MsocketC_socketC_M_socketC_cmp.globalXfo;
      name = "deformers_MsocketC_socketC_M_socketC_cmp";
      break;
    }
    case 476: {
      xfo = this.deformers_MsocketC_socketC_M_socketC_def.globalXfo;
      name = "deformers_MsocketC_socketC_M_socketC_def";
      break;
    }
    case 477: {
      xfo = this.controls_MchestSocket_chestSocket_M_chestSocket_cmp.globalXfo;
      name = "controls_MchestSocket_chestSocket_M_chestSocket_cmp";
      break;
    }
    case 478: {
      xfo = this.controls_MchestSocket_chestSocket_M_inputs_hrc.globalXfo;
      name = "controls_MchestSocket_chestSocket_M_inputs_hrc";
      break;
    }
    case 479: {
      xfo = this.controls_MchestSocket_chestSocket_M_parentSpace_cmpInIn.globalXfo;
      name = "controls_MchestSocket_chestSocket_M_parentSpace_cmpInIn";
      break;
    }
    case 480: {
      xfo = this.controls_MchestSocket_chestSocket_M_globalSRT_cmpInIn.globalXfo;
      name = "controls_MchestSocket_chestSocket_M_globalSRT_cmpInIn";
      break;
    }
    case 481: {
      xfo = this.controls_MchestSocket_chestSocket_M_outputs_hrc.globalXfo;
      name = "controls_MchestSocket_chestSocket_M_outputs_hrc";
      break;
    }
    case 482: {
      xfo = this.controls_MchestSocket_chestSocket_M_socket_cmpOutOut.globalXfo;
      name = "controls_MchestSocket_chestSocket_M_socket_cmpOutOut";
      break;
    }
    case 483: {
      xfo = this.controls_MchestSocket_chestSocket_M_chestSocket_offset01_spaceSpace.globalXfo;
      name = "controls_MchestSocket_chestSocket_M_chestSocket_offset01_spaceSpace";
      break;
    }
    case 484: {
      xfo = this.controls_MchestSocket_M_chestSocket_offset_an.globalXfo;
      name = "controls_MchestSocket_M_chestSocket_offset_an";
      break;
    }
    case 485: {
      xfo = this.controls_MchestSocket_M_chestSocket_an.globalXfo;
      name = "controls_MchestSocket_M_chestSocket_an";
      break;
    }
    case 486: {
      xfo = this.deformers_MchestSocket_chestSocket_M_chestSocket_cmp.globalXfo;
      name = "deformers_MchestSocket_chestSocket_M_chestSocket_cmp";
      break;
    }
    case 487: {
      xfo = this.deformers_MchestSocket_chestSocket_M_chestSocket_def.globalXfo;
      name = "deformers_MchestSocket_chestSocket_M_chestSocket_def";
      break;
    }
    case 488: {
      xfo = this.controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp.globalXfo;
      name = "controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp";
      break;
    }
    case 489: {
      xfo = this.controls_MhipsSocket_hipsSocket_M_inputs_hrc.globalXfo;
      name = "controls_MhipsSocket_hipsSocket_M_inputs_hrc";
      break;
    }
    case 490: {
      xfo = this.controls_MhipsSocket_hipsSocket_M_parentSpace_cmpInIn.globalXfo;
      name = "controls_MhipsSocket_hipsSocket_M_parentSpace_cmpInIn";
      break;
    }
    case 491: {
      xfo = this.controls_MhipsSocket_hipsSocket_M_globalSRT_cmpInIn.globalXfo;
      name = "controls_MhipsSocket_hipsSocket_M_globalSRT_cmpInIn";
      break;
    }
    case 492: {
      xfo = this.controls_MhipsSocket_hipsSocket_M_outputs_hrc.globalXfo;
      name = "controls_MhipsSocket_hipsSocket_M_outputs_hrc";
      break;
    }
    case 493: {
      xfo = this.controls_MhipsSocket_hipsSocket_M_socket_cmpOutOut.globalXfo;
      name = "controls_MhipsSocket_hipsSocket_M_socket_cmpOutOut";
      break;
    }
    case 494: {
      xfo = this.controls_MhipsSocket_hipsSocket_M_hipsSocket_offset01_spaceSpace.globalXfo;
      name = "controls_MhipsSocket_hipsSocket_M_hipsSocket_offset01_spaceSpace";
      break;
    }
    case 495: {
      xfo = this.controls_MhipsSocket_M_hipsSocket_offset_an.globalXfo;
      name = "controls_MhipsSocket_M_hipsSocket_offset_an";
      break;
    }
    case 496: {
      xfo = this.controls_MhipsSocket_M_hipsSocket_an.globalXfo;
      name = "controls_MhipsSocket_M_hipsSocket_an";
      break;
    }
    case 497: {
      xfo = this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_cmp.globalXfo;
      name = "deformers_MhipsSocket_hipsSocket_M_hipsSocket_cmp";
      break;
    }
    case 498: {
      xfo = this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_def.globalXfo;
      name = "deformers_MhipsSocket_hipsSocket_M_hipsSocket_def";
      break;
    }
  }
}

function KRK_biped_guide.resetPose!() {
  // reset objects
  this.biped_guide.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.bipedguide_biped_guide_controls.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.bipedguide_biped_guide_deformers.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_main_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_master_cmpOutOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_offset_cmpOutOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_cog_cmpOutOut.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_master01_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_M_master_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_offset01_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_M_offset_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_main_M_cog01_spaceSpace.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_M_cog_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mmain_M_vis_an.xfo = Xfo(Vec3(0.0000, 0.0000, 22.3214), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spine_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_hips_cmpOutOut.xfo = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spineBase_cmpOutOut.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.5000, 0.5000, 0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_pelvis_cmpOutOut.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spineEnd_cmpOutOut.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spine01_cmpOutOut.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.5000, 0.5000, 0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spine02_cmpOutOut.xfo = Xfo(Vec3(-0.0000, 75.3644, -0.0257), Quat(0.5003, 0.4997, 0.5003, 0.4997), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spine03_cmpOutOut.xfo = Xfo(Vec3(-0.0000, 81.7917, -0.0135), Quat(0.5005, 0.4995, 0.5005, 0.4995), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spine04_cmpOutOut.xfo = Xfo(Vec3(-0.0000, 87.9343, -0.0163), Quat(0.4982, 0.5018, 0.4982, 0.5018), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spine05_cmpOutOut.xfo = Xfo(Vec3(-0.0000, 94.5157, -0.3298), Quat(0.4780, 0.5211, 0.4780, 0.5211), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_spine06_cmpOutOut.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_hips01_spaceSpace.xfo = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_M_hips_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_pelvis_spaceSpace.xfo = Xfo(Vec3(0.0000, -7.7393, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_torso01_spaceSpace.xfo = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_M_torso_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_chest01_spaceSpace.xfo = Xfo(Vec3(-0.0000, 9.3221, 0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_M_chest_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_upChest01_spaceSpace.xfo = Xfo(Vec3(0.0000, 11.0526, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_M_upChest_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Mspine_spine_M_neck_spaceSpace.xfo = Xfo(Vec3(0.0000, 6.2169, -1.5247), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Mspine_spine_M_spine_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Mspine_spine_M_spine01_def.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.5000, 0.5000, 0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Mspine_spine_M_spine02_def.xfo = Xfo(Vec3(-0.0000, 75.3644, -0.0257), Quat(0.5003, 0.4997, 0.5003, 0.4997), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Mspine_spine_M_spine03_def.xfo = Xfo(Vec3(-0.0000, 81.7917, -0.0135), Quat(0.5005, 0.4995, 0.5005, 0.4995), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Mspine_spine_M_spine04_def.xfo = Xfo(Vec3(-0.0000, 87.9343, -0.0163), Quat(0.4982, 0.5018, 0.4982, 0.5018), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Mspine_spine_M_spine05_def.xfo = Xfo(Vec3(-0.0000, 94.5157, -0.3298), Quat(0.4780, 0.5211, 0.4780, 0.5211), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Mspine_spine_M_spine06_def.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_shoulder_L_shoulder_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_shoulder_L_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_shoulder_L_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_shoulder_L_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_shoulder_L_shldr_cmpOutOut.xfo = Xfo(Vec3(0.2526, 100.0091, -1.4864), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_shoulder_L_shldrEnd_cmpOutOut.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_shoulder_L_shldr01_spaceSpace.xfo = Xfo(Vec3(0.2526, 100.0091, -1.4864), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_L_shldr_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lshoulder_shoulder_L_shldrEnd_spaceSpace.xfo = Xfo(Vec3(8.0433, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lshoulder_shoulder_L_shoulder_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lshoulder_shoulder_L_shldr_def.xfo = Xfo(Vec3(0.2526, 100.0091, -1.4864), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_shoulder_R_shoulder_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_shoulder_R_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_shoulder_R_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_shoulder_R_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_shoulder_R_shldr_cmpOutOut.xfo = Xfo(Vec3(-0.2526, 100.0091, -1.4864), Quat(0.0011, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_shoulder_R_shldrEnd_cmpOutOut.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(0.0011, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_shoulder_R_shldr01_spaceSpace.xfo = Xfo(Vec3(-0.2526, 100.0091, -1.4864), Quat(0.0011, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_R_shldr_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rshoulder_shoulder_R_shldrEnd_spaceSpace.xfo = Xfo(Vec3(-8.0433, 0.0000, -0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rshoulder_shoulder_R_shoulder_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rshoulder_shoulder_R_shldr_def.xfo = Xfo(Vec3(-0.2526, 100.0091, -1.4864), Quat(0.0011, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_leg_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_ikGoalInput_cmpInIn.xfo = Xfo(Vec3(4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_uplimb_cmpOutOut.xfo = Xfo(Vec3(4.3470, 67.3301, -0.0319), Quat(0.0147, -0.0119, -0.7070, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_lolimb_cmpOutOut.xfo = Xfo(Vec3(4.3470, 36.0395, -0.1537), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_endlimb_cmpOutOut.xfo = Xfo(Vec3(4.3732, 3.5091, -0.9774), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_upLeg01_spaceSpace.xfo = Xfo(Vec3(4.3470, 67.3301, -0.0319), Quat(0.0147, -0.0119, -0.7070, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_L_upLeg_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_loLeg01_spaceSpace.xfo = Xfo(Vec3(31.2909, 0.0000, -0.0000), Quat(0.0000, 0.0107, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_L_loLeg_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_footIK_spaceSpace.xfo = Xfo(Vec3(4.3733, 3.5091, -0.9774), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_L_footIK_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_legUpV01_spaceSpace.xfo = Xfo(Vec3(1.9908, 34.4546, 62.3636), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_L_legUpV_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_legUpVIK_spaceSpace.xfo = Xfo(Vec3(1.9908, 34.4546, 62.3636), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lleg_leg_L_legIKMaster_spaceSpace.xfo = Xfo(Vec3(1.9908, 34.4546, 62.3636), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lleg_leg_L_leg_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lleg_leg_L_upLeg_def.xfo = Xfo(Vec3(4.3470, 67.3301, -0.0319), Quat(0.0147, -0.0119, -0.7070, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lleg_leg_L_loLeg_def.xfo = Xfo(Vec3(4.3470, 36.0395, -0.1537), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lleg_leg_L_legend_def.xfo = Xfo(Vec3(4.3732, 3.5091, -0.9774), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_foot_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_parentSpace_cmpInIn.xfo = Xfo(Vec3(4.3732, 3.5091, -0.9774), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_foot_cmpOutOut.xfo = Xfo(Vec3(4.3474, 3.5091, -0.9726), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_ball_cmpOutOut.xfo = Xfo(Vec3(4.3474, 1.1225, 7.0850), Quat(-0.5000, -0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_ikgoal_cmpOutOut.xfo = Xfo(Vec3(4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_footRockerFoot_out_xfo.xfo = Xfo(Vec3(4.3474, 3.5091, -0.9726), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_footRockerBall_out_xfo.xfo = Xfo(Vec3(4.3474, 1.1225, 7.0850), Quat(-0.5000, -0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_IKFootBlendKLOpFoot_out_xfo.xfo = Xfo(Vec3(4.3474, 3.5091, -0.9726), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_IKFootBlendKLOpBall_out_xfo.xfo = Xfo(Vec3(4.3474, 1.1225, 7.0850), Quat(-0.5000, -0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_foot01_spaceSpace.xfo = Xfo(Vec3(4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_foot_ik.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_ikGoalRef_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_ballJoint_xfo.xfo = Xfo(Vec3(0.0000, 1.1225, 9.9869), Quat(-0.5000, -0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_footJoint_xfo.xfo = Xfo(Vec3(0.0000, 3.5091, 1.9293), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_heelPivot_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_ballPivot_xfo.xfo = Xfo(Vec3(0.0000, 1.1225, 9.9869), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_ballTipPivot_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 16.0535), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_innerPivot_xfo.xfo = Xfo(Vec3(-1.5892, 0.0000, 10.0864), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_outerPivot_xfo.xfo = Xfo(Vec3(3.0663, 0.0000, 9.9695), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_foot02_spaceSpace.xfo = Xfo(Vec3(4.3474, 3.5091, -0.9726), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_foot_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_foot_L_ball01_spaceSpace.xfo = Xfo(Vec3(8.4037, -0.0000, 0.0000), Quat(-0.0000, -0.1435, -0.0000, 0.9897), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lfoot_L_ball_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lfoot_foot_L_foot_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lfoot_foot_L_foot_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lfoot_foot_L_ball_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_foot_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_parentSpace_cmpInIn.xfo = Xfo(Vec3(-4.3470, 3.5092, -0.9730), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_foot_cmpOutOut.xfo = Xfo(Vec3(-4.3474, 3.5091, -0.9726), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_ball_cmpOutOut.xfo = Xfo(Vec3(-4.3474, 1.1225, 7.0850), Quat(0.5000, 0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_ikgoal_cmpOutOut.xfo = Xfo(Vec3(-4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_footRockerFoot_out_xfo.xfo = Xfo(Vec3(-4.3474, 3.5091, -0.9726), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_footRockerBall_out_xfo.xfo = Xfo(Vec3(-4.3474, 1.1225, 7.0850), Quat(0.5000, 0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_IKFootBlendKLOpFoot_out_xfo.xfo = Xfo(Vec3(-4.3474, 3.5091, -0.9726), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_IKFootBlendKLOpBall_out_xfo.xfo = Xfo(Vec3(-4.3474, 1.1225, 7.0850), Quat(0.5000, 0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_foot01_spaceSpace.xfo = Xfo(Vec3(-4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_foot_ik.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_ikGoalRef_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_ballJoint_xfo.xfo = Xfo(Vec3(0.0000, 1.1225, 9.9869), Quat(0.5000, 0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_footJoint_xfo.xfo = Xfo(Vec3(0.0000, 3.5091, 1.9293), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_heelPivot_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_ballPivot_xfo.xfo = Xfo(Vec3(0.0000, 1.1225, 9.9869), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_ballTipPivot_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 16.0535), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_innerPivot_xfo.xfo = Xfo(Vec3(1.5892, 0.0000, 10.0864), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_outerPivot_xfo.xfo = Xfo(Vec3(-3.0663, 0.0000, 9.9695), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_foot02_spaceSpace.xfo = Xfo(Vec3(-4.3474, 3.5091, -0.9726), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_foot_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_foot_R_ball01_spaceSpace.xfo = Xfo(Vec3(-8.4037, 0.0000, -0.0000), Quat(0.0000, -0.1435, 0.0000, 0.9897), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rfoot_R_ball_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rfoot_foot_R_foot_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rfoot_foot_R_foot_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rfoot_foot_R_ball_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_leg_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_ikGoalInput_cmpInIn.xfo = Xfo(Vec3(-4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_uplimb_cmpOutOut.xfo = Xfo(Vec3(-4.3470, 67.3301, -0.0319), Quat(0.7071, 0.7071, 0.0014, -0.0014), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_lolimb_cmpOutOut.xfo = Xfo(Vec3(-4.3470, 36.0395, -0.1537), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_endlimb_cmpOutOut.xfo = Xfo(Vec3(-4.3470, 3.5092, -0.9730), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_upLeg01_spaceSpace.xfo = Xfo(Vec3(-4.3470, 67.3301, -0.0319), Quat(0.7071, 0.7071, 0.0014, -0.0014), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_R_upLeg_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_loLeg01_spaceSpace.xfo = Xfo(Vec3(-31.2909, -0.0000, 0.0000), Quat(-0.0000, 0.0106, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_R_loLeg_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_footIK_spaceSpace.xfo = Xfo(Vec3(-4.3470, 3.5091, -0.9726), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_R_footIK_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_legUpV01_spaceSpace.xfo = Xfo(Vec3(-4.3470, 34.4645, 62.4082), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_R_legUpV_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_legUpVIK_spaceSpace.xfo = Xfo(Vec3(-4.3470, 34.4645, 62.4082), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rleg_leg_R_legIKMaster_spaceSpace.xfo = Xfo(Vec3(-4.3470, 34.4645, 62.4082), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rleg_leg_R_leg_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rleg_leg_R_upLeg_def.xfo = Xfo(Vec3(-4.3470, 67.3301, -0.0319), Quat(0.7071, 0.7071, 0.0014, -0.0014), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rleg_leg_R_loLeg_def.xfo = Xfo(Vec3(-4.3470, 36.0395, -0.1537), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rleg_leg_R_legend_def.xfo = Xfo(Vec3(-4.3470, 3.5092, -0.9730), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_arm_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_parentSpace_cmpInIn.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(0.0011, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_ikGoalInput_cmpInIn.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_uplimb_cmpOutOut.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(0.0000, 0.0104, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_lolimb_cmpOutOut.xfo = Xfo(Vec3(-29.9201, 100.0007, -1.0390), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_endlimb_cmpOutOut.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_upArm01_spaceSpace.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(0.0000, 0.0104, -0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_R_upArm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_loArm01_spaceSpace.xfo = Xfo(Vec3(-21.6288, 0.0000, 0.0000), Quat(0.0000, 0.0005, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_R_loArm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_handIK_spaceSpace.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_R_handIK_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_armUpV01_spaceSpace.xfo = Xfo(Vec3(-30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_R_armUpV_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_armUpVIK_spaceSpace.xfo = Xfo(Vec3(-30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rarm_arm_R_armIKMaster_spaceSpace.xfo = Xfo(Vec3(-30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rarm_arm_R_arm_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rarm_arm_R_upArm_def.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(0.0000, 0.0104, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rarm_arm_R_loArm_def.xfo = Xfo(Vec3(-29.9201, 100.0007, -1.0390), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rarm_arm_R_armend_def.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_arm_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_parentSpace_cmpInIn.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_ikGoalInput_cmpInIn.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_uplimb_cmpOutOut.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(0.9999, 0.0000, 0.0104, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_lolimb_cmpOutOut.xfo = Xfo(Vec3(29.9201, 100.0007, -1.0390), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_endlimb_cmpOutOut.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_upArm01_spaceSpace.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(0.9999, 0.0000, 0.0104, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_L_upArm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_loArm01_spaceSpace.xfo = Xfo(Vec3(21.6288, 0.0000, -0.0000), Quat(0.0000, 0.0005, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_L_loArm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_handIK_spaceSpace.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_L_handIK_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_armUpV01_spaceSpace.xfo = Xfo(Vec3(30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_L_armUpV_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_armUpVIK_spaceSpace.xfo = Xfo(Vec3(30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Larm_arm_L_armIKMaster_spaceSpace.xfo = Xfo(Vec3(30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Larm_arm_L_arm_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Larm_arm_L_upArm_def.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(0.9999, 0.0000, 0.0104, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Larm_arm_L_loArm_def.xfo = Xfo(Vec3(29.9201, 100.0007, -1.0390), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Larm_arm_L_armend_def.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_hand_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_parentSpace_cmpInIn.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_hand_cmpOutOut.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(-0.7059, -0.0452, -0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_palm_cmpOutOut.xfo = Xfo(Vec3(57.1711, 100.0361, 0.2500), Quat(-0.7071, 0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_index_palm01_spaceSpace.xfo = Xfo(Vec3(-5.0192, -0.7313, -0.0736), Quat(-0.0012, -0.0177, -0.0705, 0.9974), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_index_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_index_base01_spaceSpace.xfo = Xfo(Vec3(5.5906, 0.0000, -0.0000), Quat(0.0002, 0.0178, 0.0156, 0.9997), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_index_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_index_mid01_spaceSpace.xfo = Xfo(Vec3(3.1504, -0.0000, 0.0000), Quat(0.0000, 0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_index_mid_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_index_tip01_spaceSpace.xfo = Xfo(Vec3(2.7266, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_index_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_middle_palm01_spaceSpace.xfo = Xfo(Vec3(-4.9419, 0.3024, -0.0702), Quat(-0.0003, -0.0157, 0.0040, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_middle_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_middle_base01_spaceSpace.xfo = Xfo(Vec3(5.5668, 0.0000, 0.0000), Quat(-0.0001, 0.0157, -0.0059, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_middle_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_middle_mid01_spaceSpace.xfo = Xfo(Vec3(3.7396, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_middle_mid_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_middle_tip01_spaceSpace.xfo = Xfo(Vec3(2.6936, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_middle_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_ring_palm01_spaceSpace.xfo = Xfo(Vec3(-5.1035, 1.4569, -0.0677), Quat(0.0002, -0.0144, 0.0547, 0.9984), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_ring_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_ring_base01_spaceSpace.xfo = Xfo(Vec3(5.4416, 0.0000, 0.0000), Quat(-0.0000, 0.0144, -0.0033, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_ring_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_ring_mid01_spaceSpace.xfo = Xfo(Vec3(3.6038, -0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_ring_mid_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_ring_tip01_spaceSpace.xfo = Xfo(Vec3(2.5582, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_ring_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_pinky_palm01_spaceSpace.xfo = Xfo(Vec3(-5.2746, 2.3531, -0.0607), Quat(0.0000, -0.0088, 0.0983, 0.9951), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_pinky_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_pinky_base01_spaceSpace.xfo = Xfo(Vec3(5.4749, 0.0000, -0.0000), Quat(0.0001, 0.0088, 0.0151, 0.9998), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_pinky_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_pinky_mid01_spaceSpace.xfo = Xfo(Vec3(3.1339, 0.0000, 0.0000), Quat(0.0000, -0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_pinky_mid_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_pinky_tip01_spaceSpace.xfo = Xfo(Vec3(2.0334, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_pinky_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_thumb_palm01_spaceSpace.xfo = Xfo(Vec3(-5.1516, -0.7724, -0.9577), Quat(0.0887, 0.1725, -0.4400, 0.8768), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_thumb_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_thumb_base01_spaceSpace.xfo = Xfo(Vec3(2.3875, -0.0000, 0.0000), Quat(-0.0018, 0.0199, 0.0041, 0.9998), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_thumb_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_thumb_tip01_spaceSpace.xfo = Xfo(Vec3(3.2506, -0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_thumb_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_ikgoal_cmpOutOut.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_IKHandBlendKLOpHand_out_xfo.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(-0.7059, -0.0452, -0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_IKHandBlendKLOpPalm_out_xfo.xfo = Xfo(Vec3(57.1711, 100.0361, 0.2500), Quat(-0.7071, 0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_hand01_spaceSpace.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_hand_ik.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_handIK_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(-0.7059, -0.0452, -0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_palmIK_spaceSpace.xfo = Xfo(Vec3(6.8608, 0.0000, 0.0000), Quat(0.0002, 0.0026, 0.0632, 0.9980), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_ikGoalRef_xfo.xfo = Xfo(Vec3(-50.3620, -100.0007, 0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_hand02_spaceSpace.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(-0.7059, -0.0452, -0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_hand_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_hand_L_palm01_spaceSpace.xfo = Xfo(Vec3(-50.4263, -6.7537, -99.7417), Quat(0.7059, 0.0452, 0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_palm_fk.xfo = Xfo(Vec3(57.1711, 100.0361, 0.2500), Quat(-0.7071, 0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_ikHand_xfo.xfo = Xfo(Vec3(-50.4263, -6.7537, -99.7417), Quat(0.7059, 0.0452, 0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Lhand_L_ikPalm_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_hand_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_hand_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_palm_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_index_palm_def.xfo = Xfo(Vec3(52.1546, 99.9626, 0.9998), Quat(-0.7062, -0.0611, -0.0360, 0.7045), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_index_base_def.xfo = Xfo(Vec3(57.6890, 100.1612, 1.7650), Quat(-0.7061, -0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_index_mid_def.xfo = Xfo(Vec3(60.8216, 100.1612, 2.0992), Quat(-0.7061, -0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_index_tip_def.xfo = Xfo(Vec3(63.5328, 100.1612, 2.3885), Quat(-0.7061, -0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_middle_palm_def.xfo = Xfo(Vec3(52.2281, 99.9660, -0.0343), Quat(-0.7072, -0.0070, 0.0153, 0.7068), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_middle_base_def.xfo = Xfo(Vec3(57.7918, 100.1413, -0.0997), Quat(-0.7073, 0.0000, 0.0000, 0.7069), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_middle_mid_def.xfo = Xfo(Vec3(61.5314, 100.1413, -0.0997), Quat(-0.7073, 0.0000, 0.0000, 0.7069), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_middle_tip_def.xfo = Xfo(Vec3(64.2250, 100.1413, -0.0997), Quat(-0.7073, 0.0000, 0.0000, 0.7069), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_ring_palm_def.xfo = Xfo(Vec3(52.0622, 99.9685, -1.1881), Quat(-0.7058, 0.0298, 0.0501, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_ring_base_def.xfo = Xfo(Vec3(57.4668, 100.1249, -1.8021), Quat(-0.7065, 0.0376, 0.0377, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_ring_mid_def.xfo = Xfo(Vec3(61.0502, 100.1249, -2.1852), Quat(-0.7065, 0.0376, 0.0377, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_ring_tip_def.xfo = Xfo(Vec3(63.5939, 100.1249, -2.4572), Quat(-0.7065, 0.0376, 0.0377, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_pinky_palm_def.xfo = Xfo(Vec3(51.8879, 99.9755, -2.0838), Quat(-0.7035, 0.0645, 0.0770, 0.7036), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_pinky_base_def.xfo = Xfo(Vec3(57.2523, 100.0718, -3.1742), Quat(-0.7030, 0.0813, 0.0815, 0.7018), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_pinky_mid_def.xfo = Xfo(Vec3(60.3031, 100.0718, -3.8909), Quat(-0.7030, 0.0813, 0.0815, 0.7018), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_pinky_tip_def.xfo = Xfo(Vec3(62.2826, 100.0718, -4.3559), Quat(-0.7030, 0.0813, 0.0815, 0.7018), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_thumb_palm_def.xfo = Xfo(Vec3(52.0223, 99.0784, 1.0413), Quat(-0.5581, -0.1879, -0.4321, 0.6830), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_thumb_base_def.xfo = Xfo(Vec3(53.3497, 98.1699, 2.8056), Quat(-0.5513, -0.1712, -0.4407, 0.6874), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Lhand_hand_L_thumb_tip_def.xfo = Xfo(Vec3(55.1474, 96.8142, 5.1501), Quat(-0.5513, -0.1712, -0.4407, 0.6874), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_hand_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_parentSpace_cmpInIn.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_hand_cmpOutOut.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.7057, 0.0416, -0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_palm_cmpOutOut.xfo = Xfo(Vec3(-57.1711, 100.0361, 0.2500), Quat(0.7071, -0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_index_palm01_spaceSpace.xfo = Xfo(Vec3(5.0192, 0.7313, 0.0736), Quat(-0.0012, -0.0177, -0.0705, 0.9974), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_index_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_index_base01_spaceSpace.xfo = Xfo(Vec3(-5.5906, 0.0000, 0.0000), Quat(0.0002, 0.0178, 0.0156, 0.9997), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_index_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_index_mid01_spaceSpace.xfo = Xfo(Vec3(-3.1504, 0.0000, 0.0000), Quat(0.0000, 0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_index_mid_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_index_tip01_spaceSpace.xfo = Xfo(Vec3(-2.7266, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_index_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_middle_palm01_spaceSpace.xfo = Xfo(Vec3(4.9419, -0.3024, 0.0702), Quat(-0.0003, -0.0157, 0.0040, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_middle_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_middle_base01_spaceSpace.xfo = Xfo(Vec3(-5.5668, -0.0000, 0.0000), Quat(-0.0001, 0.0157, -0.0059, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_middle_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_middle_mid01_spaceSpace.xfo = Xfo(Vec3(-3.7396, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_middle_mid_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_middle_tip01_spaceSpace.xfo = Xfo(Vec3(-2.6936, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_middle_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_ring_palm01_spaceSpace.xfo = Xfo(Vec3(5.1035, -1.4569, 0.0677), Quat(0.0002, -0.0144, 0.0547, 0.9984), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_ring_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_ring_base01_spaceSpace.xfo = Xfo(Vec3(-5.4416, 0.0000, 0.0000), Quat(-0.0000, 0.0144, -0.0033, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_ring_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_ring_mid01_spaceSpace.xfo = Xfo(Vec3(-3.6038, -0.0000, -0.0000), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_ring_mid_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_ring_tip01_spaceSpace.xfo = Xfo(Vec3(-2.5582, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_ring_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_pinky_palm01_spaceSpace.xfo = Xfo(Vec3(5.2746, -2.3531, 0.0607), Quat(0.0000, -0.0088, 0.0983, 0.9951), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_pinky_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_pinky_base01_spaceSpace.xfo = Xfo(Vec3(-5.4749, -0.0000, 0.0000), Quat(0.0001, 0.0088, 0.0151, 0.9998), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_pinky_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_pinky_mid01_spaceSpace.xfo = Xfo(Vec3(-3.1339, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_pinky_mid_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_pinky_tip01_spaceSpace.xfo = Xfo(Vec3(-2.0334, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_pinky_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_thumb_palm01_spaceSpace.xfo = Xfo(Vec3(5.1516, 0.7724, 0.9577), Quat(0.0887, 0.1725, -0.4400, 0.8768), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_thumb_palm_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_thumb_base01_spaceSpace.xfo = Xfo(Vec3(-2.3875, -0.0000, 0.0000), Quat(-0.0018, 0.0199, 0.0041, 0.9998), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_thumb_base_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_thumb_tip01_spaceSpace.xfo = Xfo(Vec3(-3.2506, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_thumb_tip_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_ikgoal_cmpOutOut.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_IKHandBlendKLOpHand_out_xfo.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.7057, 0.0416, -0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_IKHandBlendKLOpPalm_out_xfo.xfo = Xfo(Vec3(-57.1711, 100.0361, 0.2500), Quat(0.7071, -0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_hand01_spaceSpace.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_hand_ik.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_handIK_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.7057, 0.0416, -0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_palmIK_spaceSpace.xfo = Xfo(Vec3(-6.8608, 0.0000, 0.0000), Quat(0.0002, 0.0026, 0.0632, 0.9980), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_ikGoalRef_xfo.xfo = Xfo(Vec3(50.3620, -100.0007, 0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_hand02_spaceSpace.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.7057, 0.0416, -0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_hand_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_hand_R_palm01_spaceSpace.xfo = Xfo(Vec3(50.4263, 6.7537, 99.7417), Quat(-0.7057, -0.0416, 0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_palm_fk.xfo = Xfo(Vec3(-57.1711, 100.0361, 0.2500), Quat(0.7071, -0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_ikHand_xfo.xfo = Xfo(Vec3(50.4263, 6.7537, 99.7417), Quat(-0.7057, -0.0416, 0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_Rhand_R_ikPalm_xfo.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_hand_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_hand_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_palm_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_index_palm_def.xfo = Xfo(Vec3(-52.1546, 99.9626, 0.9998), Quat(0.7045, 0.0360, -0.0611, 0.7062), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_index_base_def.xfo = Xfo(Vec3(-57.6890, 100.1612, 1.7650), Quat(0.7061, 0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_index_mid_def.xfo = Xfo(Vec3(-60.8216, 100.1612, 2.0992), Quat(0.7061, 0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_index_tip_def.xfo = Xfo(Vec3(-63.5328, 100.1612, 2.3885), Quat(0.7061, 0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_middle_palm_def.xfo = Xfo(Vec3(-52.2281, 99.9660, -0.0343), Quat(0.7068, -0.0153, -0.0070, 0.7072), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_middle_base_def.xfo = Xfo(Vec3(-57.7918, 100.1413, -0.0997), Quat(0.7069, 0.0000, 0.0000, 0.7073), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_middle_mid_def.xfo = Xfo(Vec3(-61.5314, 100.1413, -0.0997), Quat(0.7069, 0.0000, 0.0000, 0.7073), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_middle_tip_def.xfo = Xfo(Vec3(-64.2250, 100.1413, -0.0997), Quat(0.7069, 0.0000, 0.0000, 0.7073), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_ring_palm_def.xfo = Xfo(Vec3(-52.0622, 99.9685, -1.1881), Quat(0.7061, -0.0501, 0.0298, 0.7058), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_ring_base_def.xfo = Xfo(Vec3(-57.4668, 100.1249, -1.8021), Quat(0.7057, -0.0377, 0.0376, 0.7065), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_ring_mid_def.xfo = Xfo(Vec3(-61.0502, 100.1249, -2.1852), Quat(0.7057, -0.0377, 0.0376, 0.7065), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_ring_tip_def.xfo = Xfo(Vec3(-63.5939, 100.1249, -2.4572), Quat(0.7057, -0.0377, 0.0376, 0.7065), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_pinky_palm_def.xfo = Xfo(Vec3(-51.8879, 99.9755, -2.0838), Quat(0.7036, -0.0770, 0.0645, 0.7035), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_pinky_base_def.xfo = Xfo(Vec3(-57.2523, 100.0718, -3.1742), Quat(0.7018, -0.0815, 0.0813, 0.7030), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_pinky_mid_def.xfo = Xfo(Vec3(-60.3031, 100.0718, -3.8909), Quat(0.7018, -0.0815, 0.0813, 0.7030), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_pinky_tip_def.xfo = Xfo(Vec3(-62.2826, 100.0718, -4.3559), Quat(0.7018, -0.0815, 0.0813, 0.7030), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_thumb_palm_def.xfo = Xfo(Vec3(-52.0223, 99.0784, 1.0413), Quat(0.6830, 0.4321, -0.1879, 0.5581), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_thumb_base_def.xfo = Xfo(Vec3(-53.3497, 98.1699, 2.8056), Quat(0.6874, 0.4407, -0.1712, 0.5513), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_Rhand_hand_R_thumb_tip_def.xfo = Xfo(Vec3(-55.1474, 96.8142, 5.1501), Quat(0.6874, 0.4407, -0.1712, 0.5513), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_headNeck_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_head_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_headIK_spaceSpace.xfo = Xfo(Vec3(0.0000, 119.2143, 32.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_M_head_ik.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_headUpV_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_M_headUpV_an.xfo = Xfo(Vec3(0.0000, 149.2143, 2.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_headWorld01_spaceSpace.xfo = Xfo(Vec3(0.0000, 119.2143, 2.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_M_headWorld_ik.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_neckBase_cmpOutOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_neckEnd_cmpOutOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_neck01_cmpOutOut.xfo = Xfo(Vec3(0.0000, 103.9993, -1.5492), Quat(0.5815, 0.4022, 0.5815, 0.4022), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_neck02_cmpOutOut.xfo = Xfo(Vec3(0.0000, 108.1888, -0.2648), Quat(0.5634, 0.4272, 0.5634, 0.4272), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_neck03_cmpOutOut.xfo = Xfo(Vec3(0.0000, 113.7607, 1.1308), Quat(0.5555, 0.4375, 0.5555, 0.4375), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_neck04_cmpOutOut.xfo = Xfo(Vec3(0.0000, 119.2143, 2.3427), Quat(0.5487, 0.4460, 0.5487, 0.4460), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_neck01_spaceSpace.xfo = Xfo(Vec3(0.0000, 103.9993, -1.5492), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_M_neck_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_head01_spaceSpace.xfo = Xfo(Vec3(0.0000, 15.2150, 3.8920), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_M_head_fk.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_headAlign_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_headHandle_spaceSpace.xfo = Xfo(Vec3(0.0000, -4.8943, -1.0217), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadNeck_headNeck_M_neckHandle_spaceSpace.xfo = Xfo(Vec3(0.0000, 2.9981, 1.1304), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MheadNeck_headNeck_M_headNeck_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MheadNeck_headNeck_M_neck01_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MheadNeck_headNeck_M_neck02_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MheadNeck_headNeck_M_neck03_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MheadNeck_headNeck_M_head_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_palmSocket_L_palmSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_palmSocket_L_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_palmSocket_L_parentSpace_cmpInIn.xfo = Xfo(Vec3(57.1711, 100.0361, 0.2500), Quat(-0.7071, 0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_palmSocket_L_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_palmSocket_L_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_palmSocket_L_socket_cmpOutOut.xfo = Xfo(Vec3(57.0000, 98.0000, 0.0000), Quat(0.0000, 0.0000, -0.7071, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_palmSocket_L_palmSocket_offset01_spaceSpace.xfo = Xfo(Vec3(57.0000, 98.0000, 0.0000), Quat(0.0000, 0.0000, -0.7071, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_L_palmSocket_offset_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_LpalmSocket_L_palmSocket_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_LpalmSocket_palmSocket_L_palmSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_LpalmSocket_palmSocket_L_palmSocket_def.xfo = Xfo(Vec3(57.0000, 98.0000, 0.0000), Quat(0.0000, 0.0000, -0.7071, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_palmSocket_R_palmSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_palmSocket_R_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_palmSocket_R_parentSpace_cmpInIn.xfo = Xfo(Vec3(-57.1711, 100.0361, 0.2500), Quat(0.7071, -0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_palmSocket_R_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_palmSocket_R_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_palmSocket_R_socket_cmpOutOut.xfo = Xfo(Vec3(-57.0000, 98.0000, 0.0000), Quat(0.7071, -0.7071, -0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_palmSocket_R_palmSocket_offset01_spaceSpace.xfo = Xfo(Vec3(-57.0000, 98.0000, 0.0000), Quat(0.7071, -0.7071, -0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_R_palmSocket_offset_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_RpalmSocket_R_palmSocket_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_RpalmSocket_palmSocket_R_palmSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_RpalmSocket_palmSocket_R_palmSocket_def.xfo = Xfo(Vec3(-57.0000, 98.0000, 0.0000), Quat(0.7071, -0.7071, -0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_headSocket_M_headSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_headSocket_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_headSocket_M_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_headSocket_M_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_headSocket_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_headSocket_M_socket_cmpOutOut.xfo = Xfo(Vec3(-0.0000, 136.5005, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_headSocket_M_headSocket_offset01_spaceSpace.xfo = Xfo(Vec3(-0.0000, 136.5005, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_M_headSocket_offset_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MheadSocket_M_headSocket_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MheadSocket_headSocket_M_headSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MheadSocket_headSocket_M_headSocket_def.xfo = Xfo(Vec3(-0.0000, 136.5005, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_socketA_M_socketA_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_socketA_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_socketA_M_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_socketA_M_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_socketA_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_socketA_M_socket_cmpOutOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_socketA_M_socketA_offset01_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_M_socketA_offset_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketA_M_socketA_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MsocketA_socketA_M_socketA_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MsocketA_socketA_M_socketA_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_socketB_M_socketB_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_socketB_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_socketB_M_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_socketB_M_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_socketB_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_socketB_M_socket_cmpOutOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_socketB_M_socketB_offset01_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_M_socketB_offset_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketB_M_socketB_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MsocketB_socketB_M_socketB_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MsocketB_socketB_M_socketB_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_socketC_M_socketC_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_socketC_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_socketC_M_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_socketC_M_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_socketC_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_socketC_M_socket_cmpOutOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_socketC_M_socketC_offset01_spaceSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_M_socketC_offset_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MsocketC_M_socketC_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MsocketC_socketC_M_socketC_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MsocketC_socketC_M_socketC_def.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_chestSocket_M_chestSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_chestSocket_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_chestSocket_M_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_chestSocket_M_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_chestSocket_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_chestSocket_M_socket_cmpOutOut.xfo = Xfo(Vec3(-0.0000, 95.8992, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_chestSocket_M_chestSocket_offset01_spaceSpace.xfo = Xfo(Vec3(-0.0000, 95.8992, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_M_chestSocket_offset_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MchestSocket_M_chestSocket_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MchestSocket_chestSocket_M_chestSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MchestSocket_chestSocket_M_chestSocket_def.xfo = Xfo(Vec3(-0.0000, 95.8992, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_hipsSocket_M_hipsSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_hipsSocket_M_inputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_hipsSocket_M_parentSpace_cmpInIn.xfo = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_hipsSocket_M_globalSRT_cmpInIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_hipsSocket_M_outputs_hrc.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_hipsSocket_M_socket_cmpOutOut.xfo = Xfo(Vec3(-0.0000, 73.3007, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_hipsSocket_M_hipsSocket_offset01_spaceSpace.xfo = Xfo(Vec3(-0.0000, 73.3007, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_M_hipsSocket_offset_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_MhipsSocket_M_hipsSocket_an.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_cmp.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_MhipsSocket_hipsSocket_M_hipsSocket_def.xfo = Xfo(Vec3(-0.0000, 73.3007, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  // reset attributes
  this.controls_main_M_outputs_outputs_rigScale.value = 1.000000;
  this.controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale.value = 1.000000;
  this.controls_spine_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_shoulder_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_shoulder_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_leg_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_leg_L_inputs_inputs_ikBlend.value = 1.000000;
  this.controls_leg_L_inputs_inputs_softDist.value = 0.000000;
  this.controls_leg_L_inputs_inputs_stretch.value = 0.000000;
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value = 31.290852;
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value = 32.540779;
  this.controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace.value = 0.500000;
  this.controls_foot_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_foot_L_outputs_outputs_ikBlend.value = 1.000000;
  this.controls_foot_L_outputs_outputs_limbMocap.value = 0.000000;
  this.controls_foot_L_outputs_outputs_softDist.value = 0.000000;
  this.controls_foot_L_outputs_outputs_stretch.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend.value = 1.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK.value = 1.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak.value = 45.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap.value = 0.000000;
  this.controls_foot_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_foot_R_outputs_outputs_ikBlend.value = 1.000000;
  this.controls_foot_R_outputs_outputs_limbMocap.value = 0.000000;
  this.controls_foot_R_outputs_outputs_softDist.value = 0.000000;
  this.controls_foot_R_outputs_outputs_stretch.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend.value = 1.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK.value = 1.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak.value = 45.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap.value = 0.000000;
  this.controls_leg_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_leg_R_inputs_inputs_ikBlend.value = 1.000000;
  this.controls_leg_R_inputs_inputs_softDist.value = 0.000000;
  this.controls_leg_R_inputs_inputs_stretch.value = 0.000000;
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value = 31.290852;
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value = 32.540649;
  this.controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace.value = 0.500000;
  this.controls_arm_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_arm_R_inputs_inputs_ikBlend.value = 1.000000;
  this.controls_arm_R_inputs_inputs_softDist.value = 0.000000;
  this.controls_arm_R_inputs_inputs_stretch.value = 0.000000;
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value = 21.628834;
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value = 20.446831;
  this.controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace.value = 0.500000;
  this.controls_arm_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_arm_L_inputs_inputs_ikBlend.value = 1.000000;
  this.controls_arm_L_inputs_inputs_softDist.value = 0.000000;
  this.controls_arm_L_inputs_inputs_stretch.value = 0.000000;
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value = 21.628834;
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value = 20.446831;
  this.controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace.value = 0.500000;
  this.controls_hand_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_hand_L_outputs_outputs_ikBlend.value = 1.000000;
  this.controls_hand_L_outputs_outputs_limbMocap.value = 0.000000;
  this.controls_hand_L_outputs_outputs_softDist.value = 0.000000;
  this.controls_hand_L_outputs_outputs_stretch.value = 0.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend.value = 1.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK.value = 0.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap.value = 0.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist.value = 0.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch.value = 0.000000;
  this.controls_hand_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_hand_R_outputs_outputs_ikBlend.value = 1.000000;
  this.controls_hand_R_outputs_outputs_limbMocap.value = 0.000000;
  this.controls_hand_R_outputs_outputs_softDist.value = 0.000000;
  this.controls_hand_R_outputs_outputs_stretch.value = 0.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend.value = 1.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK.value = 0.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap.value = 0.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist.value = 0.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch.value = 0.000000;
  this.controls_headNeck_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK.value = 1.000000;
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK.value = 0.000000;
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld.value = 0.000000;
  this.controls_palmSocket_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_palmSocket_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_headSocket_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_socketA_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_socketB_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_socketC_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_chestSocket_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_hipsSocket_M_inputs_inputs_rigScale.value = 1.000000;
}

function KRK_biped_guide.setClip!(KrakenClip clip) {
  this.clip = clip;
}

function KRK_biped_guide.evaluateClip!(KrakenClipContext context, Ref<KrakenClip> clip) {
  if(!clip)
    return;
  KrakenClip mutableClip = clip;
  for(UInt32 i=0;i<mutableClip.getChannelCount();i++) {
    switch(mutableClip.getChannelType(i)) {
      case KrakenClipChannel_Float32: {
        switch(mutableClip.getChannelName(i)) {
          case "controls_main_M_outputs_outputs_rigScale": {
            this.controls_main_M_outputs_outputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale": {
            this.controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_spine_M_inputs_inputs_rigScale": {
            this.controls_spine_M_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_shoulder_L_inputs_inputs_rigScale": {
            this.controls_shoulder_L_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_shoulder_R_inputs_inputs_rigScale": {
            this.controls_shoulder_R_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_inputs_inputs_rigScale": {
            this.controls_leg_L_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_inputs_inputs_ikBlend": {
            this.controls_leg_L_inputs_inputs_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_inputs_inputs_softDist": {
            this.controls_leg_L_inputs_inputs_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_inputs_inputs_stretch": {
            this.controls_leg_L_inputs_inputs_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len": {
            this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len": {
            this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace": {
            this.controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_inputs_inputs_rigScale": {
            this.controls_foot_L_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_outputs_outputs_ikBlend": {
            this.controls_foot_L_outputs_outputs_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_outputs_outputs_limbMocap": {
            this.controls_foot_L_outputs_outputs_limbMocap.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_outputs_outputs_softDist": {
            this.controls_foot_L_outputs_outputs_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_outputs_outputs_stretch": {
            this.controls_foot_L_outputs_outputs_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_inputs_inputs_rigScale": {
            this.controls_foot_R_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_outputs_outputs_ikBlend": {
            this.controls_foot_R_outputs_outputs_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_outputs_outputs_limbMocap": {
            this.controls_foot_R_outputs_outputs_limbMocap.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_outputs_outputs_softDist": {
            this.controls_foot_R_outputs_outputs_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_outputs_outputs_stretch": {
            this.controls_foot_R_outputs_outputs_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_inputs_inputs_rigScale": {
            this.controls_leg_R_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_inputs_inputs_ikBlend": {
            this.controls_leg_R_inputs_inputs_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_inputs_inputs_softDist": {
            this.controls_leg_R_inputs_inputs_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_inputs_inputs_stretch": {
            this.controls_leg_R_inputs_inputs_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len": {
            this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len": {
            this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace": {
            this.controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_inputs_inputs_rigScale": {
            this.controls_arm_R_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_inputs_inputs_ikBlend": {
            this.controls_arm_R_inputs_inputs_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_inputs_inputs_softDist": {
            this.controls_arm_R_inputs_inputs_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_inputs_inputs_stretch": {
            this.controls_arm_R_inputs_inputs_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len": {
            this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len": {
            this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace": {
            this.controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_inputs_inputs_rigScale": {
            this.controls_arm_L_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_inputs_inputs_ikBlend": {
            this.controls_arm_L_inputs_inputs_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_inputs_inputs_softDist": {
            this.controls_arm_L_inputs_inputs_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_inputs_inputs_stretch": {
            this.controls_arm_L_inputs_inputs_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len": {
            this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len": {
            this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace": {
            this.controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_inputs_inputs_rigScale": {
            this.controls_hand_L_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_outputs_outputs_ikBlend": {
            this.controls_hand_L_outputs_outputs_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_outputs_outputs_limbMocap": {
            this.controls_hand_L_outputs_outputs_limbMocap.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_outputs_outputs_softDist": {
            this.controls_hand_L_outputs_outputs_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_outputs_outputs_stretch": {
            this.controls_hand_L_outputs_outputs_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_inputs_inputs_rigScale": {
            this.controls_hand_R_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_outputs_outputs_ikBlend": {
            this.controls_hand_R_outputs_outputs_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_outputs_outputs_limbMocap": {
            this.controls_hand_R_outputs_outputs_limbMocap.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_outputs_outputs_softDist": {
            this.controls_hand_R_outputs_outputs_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_outputs_outputs_stretch": {
            this.controls_hand_R_outputs_outputs_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headNeck_M_inputs_inputs_rigScale": {
            this.controls_headNeck_M_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK": {
            this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK": {
            this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld": {
            this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_palmSocket_L_inputs_inputs_rigScale": {
            this.controls_palmSocket_L_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_palmSocket_R_inputs_inputs_rigScale": {
            this.controls_palmSocket_R_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headSocket_M_inputs_inputs_rigScale": {
            this.controls_headSocket_M_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_socketA_M_inputs_inputs_rigScale": {
            this.controls_socketA_M_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_socketB_M_inputs_inputs_rigScale": {
            this.controls_socketB_M_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_socketC_M_inputs_inputs_rigScale": {
            this.controls_socketC_M_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_chestSocket_M_inputs_inputs_rigScale": {
            this.controls_chestSocket_M_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hipsSocket_M_inputs_inputs_rigScale": {
            this.controls_hipsSocket_M_inputs_inputs_rigScale.value = mutableClip.evaluateFloat32(i, context);
            break;
          }
        }
        break;
      }
      case KrakenClipChannel_Xfo: {
        switch(mutableClip.getChannelName(i)) {
          case "controls_Mmain_M_master_fk": {
            this.controls_Mmain_M_master_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Mmain_M_offset_fk": {
            this.controls_Mmain_M_offset_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Mmain_M_cog_fk": {
            this.controls_Mmain_M_cog_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Mmain_M_vis_an": {
            this.controls_Mmain_M_vis_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Mspine_M_hips_fk": {
            this.controls_Mspine_M_hips_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Mspine_M_torso_fk": {
            this.controls_Mspine_M_torso_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Mspine_M_chest_fk": {
            this.controls_Mspine_M_chest_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Mspine_M_upChest_fk": {
            this.controls_Mspine_M_upChest_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lshoulder_L_shldr_fk": {
            this.controls_Lshoulder_L_shldr_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rshoulder_R_shldr_fk": {
            this.controls_Rshoulder_R_shldr_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lleg_L_upLeg_fk": {
            this.controls_Lleg_L_upLeg_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lleg_L_loLeg_fk": {
            this.controls_Lleg_L_loLeg_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lleg_L_legUpV_an": {
            this.controls_Lleg_L_legUpV_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lfoot_L_foot_ik": {
            this.controls_Lfoot_L_foot_ik.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lfoot_L_foot_fk": {
            this.controls_Lfoot_L_foot_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lfoot_L_ball_fk": {
            this.controls_Lfoot_L_ball_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rfoot_R_foot_ik": {
            this.controls_Rfoot_R_foot_ik.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rfoot_R_foot_fk": {
            this.controls_Rfoot_R_foot_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rfoot_R_ball_fk": {
            this.controls_Rfoot_R_ball_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rleg_R_upLeg_fk": {
            this.controls_Rleg_R_upLeg_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rleg_R_loLeg_fk": {
            this.controls_Rleg_R_loLeg_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rleg_R_legUpV_an": {
            this.controls_Rleg_R_legUpV_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rarm_R_upArm_fk": {
            this.controls_Rarm_R_upArm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rarm_R_loArm_fk": {
            this.controls_Rarm_R_loArm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rarm_R_armUpV_an": {
            this.controls_Rarm_R_armUpV_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Larm_L_upArm_fk": {
            this.controls_Larm_L_upArm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Larm_L_loArm_fk": {
            this.controls_Larm_L_loArm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Larm_L_armUpV_an": {
            this.controls_Larm_L_armUpV_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_index_palm_fk": {
            this.controls_Lhand_L_index_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_index_base_fk": {
            this.controls_Lhand_L_index_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_index_mid_fk": {
            this.controls_Lhand_L_index_mid_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_index_tip_fk": {
            this.controls_Lhand_L_index_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_middle_palm_fk": {
            this.controls_Lhand_L_middle_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_middle_base_fk": {
            this.controls_Lhand_L_middle_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_middle_mid_fk": {
            this.controls_Lhand_L_middle_mid_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_middle_tip_fk": {
            this.controls_Lhand_L_middle_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_ring_palm_fk": {
            this.controls_Lhand_L_ring_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_ring_base_fk": {
            this.controls_Lhand_L_ring_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_ring_mid_fk": {
            this.controls_Lhand_L_ring_mid_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_ring_tip_fk": {
            this.controls_Lhand_L_ring_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_pinky_palm_fk": {
            this.controls_Lhand_L_pinky_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_pinky_base_fk": {
            this.controls_Lhand_L_pinky_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_pinky_mid_fk": {
            this.controls_Lhand_L_pinky_mid_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_pinky_tip_fk": {
            this.controls_Lhand_L_pinky_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_thumb_palm_fk": {
            this.controls_Lhand_L_thumb_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_thumb_base_fk": {
            this.controls_Lhand_L_thumb_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_thumb_tip_fk": {
            this.controls_Lhand_L_thumb_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_hand_ik": {
            this.controls_Lhand_L_hand_ik.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_hand_fk": {
            this.controls_Lhand_L_hand_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Lhand_L_palm_fk": {
            this.controls_Lhand_L_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_index_palm_fk": {
            this.controls_Rhand_R_index_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_index_base_fk": {
            this.controls_Rhand_R_index_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_index_mid_fk": {
            this.controls_Rhand_R_index_mid_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_index_tip_fk": {
            this.controls_Rhand_R_index_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_middle_palm_fk": {
            this.controls_Rhand_R_middle_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_middle_base_fk": {
            this.controls_Rhand_R_middle_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_middle_mid_fk": {
            this.controls_Rhand_R_middle_mid_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_middle_tip_fk": {
            this.controls_Rhand_R_middle_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_ring_palm_fk": {
            this.controls_Rhand_R_ring_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_ring_base_fk": {
            this.controls_Rhand_R_ring_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_ring_mid_fk": {
            this.controls_Rhand_R_ring_mid_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_ring_tip_fk": {
            this.controls_Rhand_R_ring_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_pinky_palm_fk": {
            this.controls_Rhand_R_pinky_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_pinky_base_fk": {
            this.controls_Rhand_R_pinky_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_pinky_mid_fk": {
            this.controls_Rhand_R_pinky_mid_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_pinky_tip_fk": {
            this.controls_Rhand_R_pinky_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_thumb_palm_fk": {
            this.controls_Rhand_R_thumb_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_thumb_base_fk": {
            this.controls_Rhand_R_thumb_base_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_thumb_tip_fk": {
            this.controls_Rhand_R_thumb_tip_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_hand_ik": {
            this.controls_Rhand_R_hand_ik.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_hand_fk": {
            this.controls_Rhand_R_hand_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_Rhand_R_palm_fk": {
            this.controls_Rhand_R_palm_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MheadNeck_M_head_ik": {
            this.controls_MheadNeck_M_head_ik.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MheadNeck_M_headUpV_an": {
            this.controls_MheadNeck_M_headUpV_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MheadNeck_M_headWorld_ik": {
            this.controls_MheadNeck_M_headWorld_ik.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MheadNeck_M_neck_fk": {
            this.controls_MheadNeck_M_neck_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MheadNeck_M_head_fk": {
            this.controls_MheadNeck_M_head_fk.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_LpalmSocket_L_palmSocket_offset_an": {
            this.controls_LpalmSocket_L_palmSocket_offset_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_LpalmSocket_L_palmSocket_an": {
            this.controls_LpalmSocket_L_palmSocket_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_RpalmSocket_R_palmSocket_offset_an": {
            this.controls_RpalmSocket_R_palmSocket_offset_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_RpalmSocket_R_palmSocket_an": {
            this.controls_RpalmSocket_R_palmSocket_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MheadSocket_M_headSocket_offset_an": {
            this.controls_MheadSocket_M_headSocket_offset_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MheadSocket_M_headSocket_an": {
            this.controls_MheadSocket_M_headSocket_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MsocketA_M_socketA_offset_an": {
            this.controls_MsocketA_M_socketA_offset_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MsocketA_M_socketA_an": {
            this.controls_MsocketA_M_socketA_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MsocketB_M_socketB_offset_an": {
            this.controls_MsocketB_M_socketB_offset_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MsocketB_M_socketB_an": {
            this.controls_MsocketB_M_socketB_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MsocketC_M_socketC_offset_an": {
            this.controls_MsocketC_M_socketC_offset_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MsocketC_M_socketC_an": {
            this.controls_MsocketC_M_socketC_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MchestSocket_M_chestSocket_offset_an": {
            this.controls_MchestSocket_M_chestSocket_offset_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MchestSocket_M_chestSocket_an": {
            this.controls_MchestSocket_M_chestSocket_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MhipsSocket_M_hipsSocket_offset_an": {
            this.controls_MhipsSocket_M_hipsSocket_offset_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
          case "controls_MhipsSocket_M_hipsSocket_an": {
            this.controls_MhipsSocket_M_hipsSocket_an.xfo = mutableClip.evaluateXfo(i, context);
            break;
          }
        }
        break;
      }
    }
  }
}

function KRK_biped_guide.evaluateJoints!(KrakenClipContext context, io Xfo result[]) {
  this.evaluateClip(context, this.clip);
  this.solve();
  result = this.getJointXfos();
}

function KRK_biped_guide.evaluateJointsForUnreal!(KrakenClipContext context, io Float32 result<>) {
  Xfo xfos[];
  this.evaluateJoints(context, xfos);
  if(xfos.dataSize() != result.dataSize())
    throw("Provided float array has incorrect size. Should be "+xfos.size() * 10+" floats.");
  UInt32 offset = 0;
  for(Size i=0;i<xfos.size();i++) {
    Xfo xfo = xfos[i];
    // todo: unreal space conversion!
    result[offset++] = xfo.ori.v.x;
    result[offset++] = xfo.ori.v.y;
    result[offset++] = xfo.ori.v.z;
    result[offset++] = xfo.ori.w;
    result[offset++] = xfo.tr.x;
    result[offset++] = xfo.tr.y;
    result[offset++] = xfo.tr.z;
    result[offset++] = xfo.sc.x;
    result[offset++] = xfo.sc.y;
    result[offset++] = xfo.sc.z;
  }
}

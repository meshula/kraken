require Math;
require Geometry;
require Kraken;
require KrakenForCanvas;
require KrakenAnimation;
require OSS_Kraken;

object KRK_lucy_guide : KrakenClipEvaluator {
  Float64 solveTimeMs;
  KrakenClip clip; // the default clip of the rig
  KrakenTransform lucy_guide;
  KrakenTransform lucy_guide_controls;
  KrakenTransform lucy_guide_deformers;
  KrakenComponentGroup controls_main_M_main;
  KrakenHierarchyGroup controls_main_M_inputs;
  KrakenBoolAttribute controls_main_M_inputs_inputs_drawDebug;
  KrakenHierarchyGroup controls_main_M_outputs;
  KrakenScalarAttribute controls_main_M_outputs_outputs_rigScale;
  KrakenTransform controls_main_M_masterOut;
  KrakenTransform controls_main_M_offsetOut;
  KrakenTransform controls_main_M_cogOut;
  KrakenCtrlSpace controls_main_M_master01Space;
  KrakenCurve controls_main_M_master;
  KrakenScalarAttribute controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale;
  KrakenCtrlSpace controls_main_M_offset01Space;
  KrakenCurve controls_main_M_offset;
  KrakenCtrlSpace controls_main_M_cog01Space;
  KrakenCurve controls_main_M_cog;
  KrakenCurve controls_main_M_vis;
  KrakenComponentGroup controls_spine_M_spine;
  KrakenHierarchyGroup controls_spine_M_inputs;
  KrakenBoolAttribute controls_spine_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_spine_M_inputs_inputs_rigScale;
  KrakenTransform controls_spine_M_parentSpaceIn;
  KrakenHierarchyGroup controls_spine_M_outputs;
  KrakenTransform controls_spine_M_hipsOut;
  KrakenTransform controls_spine_M_spineBaseOut;
  KrakenTransform controls_spine_M_pelvisOut;
  KrakenTransform controls_spine_M_spineEndOut;
  KrakenTransform controls_spine_M_spine01Out;
  KrakenTransform controls_spine_M_spine02Out;
  KrakenTransform controls_spine_M_spine03Out;
  KrakenTransform controls_spine_M_spine04Out;
  KrakenTransform controls_spine_M_spine05Out;
  KrakenTransform controls_spine_M_spine06Out;
  KrakenCtrlSpace controls_spine_M_hips01Space;
  KrakenCurve controls_spine_M_hips;
  KrakenCtrlSpace controls_spine_M_pelvisSpace;
  KrakenCtrlSpace controls_spine_M_torso01Space;
  KrakenCurve controls_spine_M_torso;
  KrakenCtrlSpace controls_spine_M_chest01Space;
  KrakenCurve controls_spine_M_chest;
  KrakenCtrlSpace controls_spine_M_upChest01Space;
  KrakenCurve controls_spine_M_upChest;
  KrakenCtrlSpace controls_spine_M_neckSpace;
  KrakenComponentGroup deformers_spine_M_spine;
  KrakenJoint deformers_spine_M_spine01;
  KrakenJoint deformers_spine_M_spine02;
  KrakenJoint deformers_spine_M_spine03;
  KrakenJoint deformers_spine_M_spine04;
  KrakenJoint deformers_spine_M_spine05;
  KrakenJoint deformers_spine_M_spine06;
  KrakenComponentGroup controls_shoulder_L_shoulder;
  KrakenHierarchyGroup controls_shoulder_L_inputs;
  KrakenBoolAttribute controls_shoulder_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_shoulder_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_shoulder_L_inputs_inputs_rightSide;
  KrakenTransform controls_shoulder_L_parentSpaceIn;
  KrakenHierarchyGroup controls_shoulder_L_outputs;
  KrakenTransform controls_shoulder_L_shldrOut;
  KrakenTransform controls_shoulder_L_shldrEndOut;
  KrakenCtrlSpace controls_shoulder_L_shldr01Space;
  KrakenCurve controls_shoulder_L_shldr;
  KrakenCtrlSpace controls_shoulder_L_shldrEndSpace;
  KrakenComponentGroup deformers_shoulder_L_shoulder;
  KrakenJoint deformers_shoulder_L_shldr;
  KrakenComponentGroup controls_shoulder_R_shoulder;
  KrakenHierarchyGroup controls_shoulder_R_inputs;
  KrakenBoolAttribute controls_shoulder_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_shoulder_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_shoulder_R_inputs_inputs_rightSide;
  KrakenTransform controls_shoulder_R_parentSpaceIn;
  KrakenHierarchyGroup controls_shoulder_R_outputs;
  KrakenTransform controls_shoulder_R_shldrOut;
  KrakenTransform controls_shoulder_R_shldrEndOut;
  KrakenCtrlSpace controls_shoulder_R_shldr01Space;
  KrakenCurve controls_shoulder_R_shldr;
  KrakenCtrlSpace controls_shoulder_R_shldrEndSpace;
  KrakenComponentGroup deformers_shoulder_R_shoulder;
  KrakenJoint deformers_shoulder_R_shldr;
  KrakenComponentGroup controls_leg_L_leg;
  KrakenHierarchyGroup controls_leg_L_inputs;
  KrakenBoolAttribute controls_leg_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_leg_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_leg_L_inputs_inputs_rightSide;
  KrakenScalarAttribute controls_leg_L_inputs_inputs_ikBlend;
  KrakenScalarAttribute controls_leg_L_inputs_inputs_softDist;
  KrakenScalarAttribute controls_leg_L_inputs_inputs_stretch;
  KrakenTransform controls_leg_L_globalSRTIn;
  KrakenTransform controls_leg_L_parentSpaceIn;
  KrakenTransform controls_leg_L_ikGoalInputIn;
  KrakenHierarchyGroup controls_leg_L_outputs;
  KrakenBoolAttribute controls_leg_L_outputs_outputs_drawDebug;
  KrakenTransform controls_leg_L_uplimbOut;
  KrakenTransform controls_leg_L_lolimbOut;
  KrakenTransform controls_leg_L_endlimbOut;
  KrakenCtrlSpace controls_leg_L_upLeg01Space;
  KrakenCurve controls_leg_L_upLeg;
  KrakenCtrlSpace controls_leg_L_loLeg01Space;
  KrakenCurve controls_leg_L_loLeg;
  KrakenCtrlSpace controls_leg_L_footIKSpace;
  KrakenTransform controls_leg_L_footIK;
  KrakenScalarAttribute controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len;
  KrakenScalarAttribute controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len;
  KrakenBoolAttribute controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_drawDebug;
  KrakenCtrlSpace controls_leg_L_legUpV01Space;
  KrakenCurve controls_leg_L_legUpV;
  KrakenScalarAttribute controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace;
  KrakenCtrlSpace controls_leg_L_legUpVIKSpace;
  KrakenCtrlSpace controls_leg_L_legIKMasterSpace;
  KrakenComponentGroup deformers_leg_L_leg;
  KrakenJoint deformers_leg_L_upLeg;
  KrakenJoint deformers_leg_L_loLeg;
  KrakenJoint deformers_leg_L_legend;
  KrakenComponentGroup controls_foot_L_foot;
  KrakenHierarchyGroup controls_foot_L_inputs;
  KrakenBoolAttribute controls_foot_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_foot_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_foot_L_inputs_inputs_rightSide;
  KrakenTransform controls_foot_L_globalSRTIn;
  KrakenTransform controls_foot_L_parentSpaceIn;
  KrakenHierarchyGroup controls_foot_L_outputs;
  KrakenBoolAttribute controls_foot_L_outputs_outputs_drawDebug;
  KrakenScalarAttribute controls_foot_L_outputs_outputs_ikBlend;
  KrakenScalarAttribute controls_foot_L_outputs_outputs_limbMocap;
  KrakenScalarAttribute controls_foot_L_outputs_outputs_softDist;
  KrakenScalarAttribute controls_foot_L_outputs_outputs_stretch;
  KrakenTransform controls_foot_L_footOut;
  KrakenTransform controls_foot_L_ballOut;
  KrakenTransform controls_foot_L_ikgoalOut;
  KrakenTransform controls_foot_L_footRockerFoot_out;
  KrakenTransform controls_foot_L_footRockerBall_out;
  KrakenTransform controls_foot_L_IKFootBlendKLOpFoot_out;
  KrakenTransform controls_foot_L_IKFootBlendKLOpBall_out;
  KrakenCtrlSpace controls_foot_L_foot01Space;
  KrakenCurve controls_foot_L_foot2;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch;
  KrakenBoolAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_drawDebug;
  KrakenScalarAttribute controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap;
  KrakenTransform controls_foot_L_ikGoalRef;
  KrakenTransform controls_foot_L_ballJoint;
  KrakenTransform controls_foot_L_footJoint;
  KrakenTransform controls_foot_L_heelPivot;
  KrakenTransform controls_foot_L_ballPivot;
  KrakenTransform controls_foot_L_ballTipPivot;
  KrakenTransform controls_foot_L_innerPivot;
  KrakenTransform controls_foot_L_outerPivot;
  KrakenCtrlSpace controls_foot_L_foot02Space;
  KrakenCurve controls_foot_L_foot3;
  KrakenCtrlSpace controls_foot_L_ball01Space;
  KrakenCurve controls_foot_L_ball;
  KrakenComponentGroup deformers_foot_L_foot;
  KrakenJoint deformers_foot_L_foot2;
  KrakenJoint deformers_foot_L_ball;
  KrakenComponentGroup controls_foot_R_foot;
  KrakenHierarchyGroup controls_foot_R_inputs;
  KrakenBoolAttribute controls_foot_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_foot_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_foot_R_inputs_inputs_rightSide;
  KrakenTransform controls_foot_R_globalSRTIn;
  KrakenTransform controls_foot_R_parentSpaceIn;
  KrakenHierarchyGroup controls_foot_R_outputs;
  KrakenBoolAttribute controls_foot_R_outputs_outputs_drawDebug;
  KrakenScalarAttribute controls_foot_R_outputs_outputs_ikBlend;
  KrakenScalarAttribute controls_foot_R_outputs_outputs_limbMocap;
  KrakenScalarAttribute controls_foot_R_outputs_outputs_softDist;
  KrakenScalarAttribute controls_foot_R_outputs_outputs_stretch;
  KrakenTransform controls_foot_R_footOut;
  KrakenTransform controls_foot_R_ballOut;
  KrakenTransform controls_foot_R_ikgoalOut;
  KrakenTransform controls_foot_R_footRockerFoot_out;
  KrakenTransform controls_foot_R_footRockerBall_out;
  KrakenTransform controls_foot_R_IKFootBlendKLOpFoot_out;
  KrakenTransform controls_foot_R_IKFootBlendKLOpBall_out;
  KrakenCtrlSpace controls_foot_R_foot01Space;
  KrakenCurve controls_foot_R_foot2;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch;
  KrakenBoolAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_drawDebug;
  KrakenScalarAttribute controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap;
  KrakenTransform controls_foot_R_ikGoalRef;
  KrakenTransform controls_foot_R_ballJoint;
  KrakenTransform controls_foot_R_footJoint;
  KrakenTransform controls_foot_R_heelPivot;
  KrakenTransform controls_foot_R_ballPivot;
  KrakenTransform controls_foot_R_ballTipPivot;
  KrakenTransform controls_foot_R_innerPivot;
  KrakenTransform controls_foot_R_outerPivot;
  KrakenCtrlSpace controls_foot_R_foot02Space;
  KrakenCurve controls_foot_R_foot3;
  KrakenCtrlSpace controls_foot_R_ball01Space;
  KrakenCurve controls_foot_R_ball;
  KrakenComponentGroup deformers_foot_R_foot;
  KrakenJoint deformers_foot_R_foot2;
  KrakenJoint deformers_foot_R_ball;
  KrakenComponentGroup controls_leg_R_leg;
  KrakenHierarchyGroup controls_leg_R_inputs;
  KrakenBoolAttribute controls_leg_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_leg_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_leg_R_inputs_inputs_rightSide;
  KrakenScalarAttribute controls_leg_R_inputs_inputs_ikBlend;
  KrakenScalarAttribute controls_leg_R_inputs_inputs_softDist;
  KrakenScalarAttribute controls_leg_R_inputs_inputs_stretch;
  KrakenTransform controls_leg_R_globalSRTIn;
  KrakenTransform controls_leg_R_parentSpaceIn;
  KrakenTransform controls_leg_R_ikGoalInputIn;
  KrakenHierarchyGroup controls_leg_R_outputs;
  KrakenBoolAttribute controls_leg_R_outputs_outputs_drawDebug;
  KrakenTransform controls_leg_R_uplimbOut;
  KrakenTransform controls_leg_R_lolimbOut;
  KrakenTransform controls_leg_R_endlimbOut;
  KrakenCtrlSpace controls_leg_R_upLeg01Space;
  KrakenCurve controls_leg_R_upLeg;
  KrakenCtrlSpace controls_leg_R_loLeg01Space;
  KrakenCurve controls_leg_R_loLeg;
  KrakenCtrlSpace controls_leg_R_footIKSpace;
  KrakenTransform controls_leg_R_footIK;
  KrakenScalarAttribute controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len;
  KrakenScalarAttribute controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len;
  KrakenBoolAttribute controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_drawDebug;
  KrakenCtrlSpace controls_leg_R_legUpV01Space;
  KrakenCurve controls_leg_R_legUpV;
  KrakenScalarAttribute controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace;
  KrakenCtrlSpace controls_leg_R_legUpVIKSpace;
  KrakenCtrlSpace controls_leg_R_legIKMasterSpace;
  KrakenComponentGroup deformers_leg_R_leg;
  KrakenJoint deformers_leg_R_upLeg;
  KrakenJoint deformers_leg_R_loLeg;
  KrakenJoint deformers_leg_R_legend;
  KrakenComponentGroup controls_arm_R_arm;
  KrakenHierarchyGroup controls_arm_R_inputs;
  KrakenBoolAttribute controls_arm_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_arm_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_arm_R_inputs_inputs_rightSide;
  KrakenScalarAttribute controls_arm_R_inputs_inputs_ikBlend;
  KrakenScalarAttribute controls_arm_R_inputs_inputs_softDist;
  KrakenScalarAttribute controls_arm_R_inputs_inputs_stretch;
  KrakenTransform controls_arm_R_globalSRTIn;
  KrakenTransform controls_arm_R_parentSpaceIn;
  KrakenTransform controls_arm_R_ikGoalInputIn;
  KrakenHierarchyGroup controls_arm_R_outputs;
  KrakenBoolAttribute controls_arm_R_outputs_outputs_drawDebug;
  KrakenTransform controls_arm_R_uplimbOut;
  KrakenTransform controls_arm_R_lolimbOut;
  KrakenTransform controls_arm_R_endlimbOut;
  KrakenCtrlSpace controls_arm_R_upArm01Space;
  KrakenCurve controls_arm_R_upArm;
  KrakenCtrlSpace controls_arm_R_loArm01Space;
  KrakenCurve controls_arm_R_loArm;
  KrakenCtrlSpace controls_arm_R_handIKSpace;
  KrakenTransform controls_arm_R_handIK;
  KrakenScalarAttribute controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len;
  KrakenScalarAttribute controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len;
  KrakenBoolAttribute controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_drawDebug;
  KrakenCtrlSpace controls_arm_R_armUpV01Space;
  KrakenCurve controls_arm_R_armUpV;
  KrakenScalarAttribute controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace;
  KrakenCtrlSpace controls_arm_R_armUpVIKSpace;
  KrakenCtrlSpace controls_arm_R_armIKMasterSpace;
  KrakenComponentGroup deformers_arm_R_arm;
  KrakenJoint deformers_arm_R_upArm;
  KrakenJoint deformers_arm_R_loArm;
  KrakenJoint deformers_arm_R_armend;
  KrakenComponentGroup controls_arm_L_arm;
  KrakenHierarchyGroup controls_arm_L_inputs;
  KrakenBoolAttribute controls_arm_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_arm_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_arm_L_inputs_inputs_rightSide;
  KrakenScalarAttribute controls_arm_L_inputs_inputs_ikBlend;
  KrakenScalarAttribute controls_arm_L_inputs_inputs_softDist;
  KrakenScalarAttribute controls_arm_L_inputs_inputs_stretch;
  KrakenTransform controls_arm_L_globalSRTIn;
  KrakenTransform controls_arm_L_parentSpaceIn;
  KrakenTransform controls_arm_L_ikGoalInputIn;
  KrakenHierarchyGroup controls_arm_L_outputs;
  KrakenBoolAttribute controls_arm_L_outputs_outputs_drawDebug;
  KrakenTransform controls_arm_L_uplimbOut;
  KrakenTransform controls_arm_L_lolimbOut;
  KrakenTransform controls_arm_L_endlimbOut;
  KrakenCtrlSpace controls_arm_L_upArm01Space;
  KrakenCurve controls_arm_L_upArm;
  KrakenCtrlSpace controls_arm_L_loArm01Space;
  KrakenCurve controls_arm_L_loArm;
  KrakenCtrlSpace controls_arm_L_handIKSpace;
  KrakenTransform controls_arm_L_handIK;
  KrakenScalarAttribute controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len;
  KrakenScalarAttribute controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len;
  KrakenBoolAttribute controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_drawDebug;
  KrakenCtrlSpace controls_arm_L_armUpV01Space;
  KrakenCurve controls_arm_L_armUpV;
  KrakenScalarAttribute controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace;
  KrakenCtrlSpace controls_arm_L_armUpVIKSpace;
  KrakenCtrlSpace controls_arm_L_armIKMasterSpace;
  KrakenComponentGroup deformers_arm_L_arm;
  KrakenJoint deformers_arm_L_upArm;
  KrakenJoint deformers_arm_L_loArm;
  KrakenJoint deformers_arm_L_armend;
  KrakenComponentGroup controls_hand_L_hand;
  KrakenHierarchyGroup controls_hand_L_inputs;
  KrakenBoolAttribute controls_hand_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_hand_L_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_hand_L_inputs_inputs_rightSide;
  KrakenTransform controls_hand_L_globalSRTIn;
  KrakenTransform controls_hand_L_parentSpaceIn;
  KrakenHierarchyGroup controls_hand_L_outputs;
  KrakenBoolAttribute controls_hand_L_outputs_outputs_drawDebug;
  KrakenScalarAttribute controls_hand_L_outputs_outputs_ikBlend;
  KrakenScalarAttribute controls_hand_L_outputs_outputs_limbMocap;
  KrakenScalarAttribute controls_hand_L_outputs_outputs_softDist;
  KrakenScalarAttribute controls_hand_L_outputs_outputs_stretch;
  KrakenTransform controls_hand_L_handOut;
  KrakenTransform controls_hand_L_palmOut;
  KrakenCtrlSpace controls_hand_L_index_palm01Space;
  KrakenCurve controls_hand_L_index_palm;
  KrakenCtrlSpace controls_hand_L_index_base01Space;
  KrakenCurve controls_hand_L_index_base;
  KrakenCtrlSpace controls_hand_L_index_mid01Space;
  KrakenCurve controls_hand_L_index_mid;
  KrakenCtrlSpace controls_hand_L_index_tip01Space;
  KrakenCurve controls_hand_L_index_tip;
  KrakenCtrlSpace controls_hand_L_middle_palm01Space;
  KrakenCurve controls_hand_L_middle_palm;
  KrakenCtrlSpace controls_hand_L_middle_base01Space;
  KrakenCurve controls_hand_L_middle_base;
  KrakenCtrlSpace controls_hand_L_middle_mid01Space;
  KrakenCurve controls_hand_L_middle_mid;
  KrakenCtrlSpace controls_hand_L_middle_tip01Space;
  KrakenCurve controls_hand_L_middle_tip;
  KrakenCtrlSpace controls_hand_L_ring_palm01Space;
  KrakenCurve controls_hand_L_ring_palm;
  KrakenCtrlSpace controls_hand_L_ring_base01Space;
  KrakenCurve controls_hand_L_ring_base;
  KrakenCtrlSpace controls_hand_L_ring_mid01Space;
  KrakenCurve controls_hand_L_ring_mid;
  KrakenCtrlSpace controls_hand_L_ring_tip01Space;
  KrakenCurve controls_hand_L_ring_tip;
  KrakenCtrlSpace controls_hand_L_pinky_palm01Space;
  KrakenCurve controls_hand_L_pinky_palm;
  KrakenCtrlSpace controls_hand_L_pinky_base01Space;
  KrakenCurve controls_hand_L_pinky_base;
  KrakenCtrlSpace controls_hand_L_pinky_mid01Space;
  KrakenCurve controls_hand_L_pinky_mid;
  KrakenCtrlSpace controls_hand_L_pinky_tip01Space;
  KrakenCurve controls_hand_L_pinky_tip;
  KrakenCtrlSpace controls_hand_L_thumb_palm01Space;
  KrakenCurve controls_hand_L_thumb_palm;
  KrakenCtrlSpace controls_hand_L_thumb_base01Space;
  KrakenCurve controls_hand_L_thumb_base;
  KrakenCtrlSpace controls_hand_L_thumb_tip01Space;
  KrakenCurve controls_hand_L_thumb_tip;
  KrakenTransform controls_hand_L_ikgoalOut;
  KrakenTransform controls_hand_L_IKHandBlendKLOpHand_out;
  KrakenTransform controls_hand_L_IKHandBlendKLOpPalm_out;
  KrakenCtrlSpace controls_hand_L_hand01Space;
  KrakenCurve controls_hand_L_hand2;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist;
  KrakenScalarAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch;
  KrakenBoolAttribute controls_hand_L_hand01_hand_DisplayInfo_HandSettings_drawDebug;
  KrakenCtrlSpace controls_hand_L_handIKSpace;
  KrakenCtrlSpace controls_hand_L_palmIKSpace;
  KrakenTransform controls_hand_L_ikGoalRef;
  KrakenCtrlSpace controls_hand_L_hand02Space;
  KrakenCurve controls_hand_L_hand3;
  KrakenCtrlSpace controls_hand_L_palm01Space;
  KrakenCurve controls_hand_L_palm;
  KrakenTransform controls_hand_L_ikHand;
  KrakenTransform controls_hand_L_ikPalm;
  KrakenComponentGroup deformers_hand_L_hand;
  KrakenJoint deformers_hand_L_hand2;
  KrakenJoint deformers_hand_L_palm;
  KrakenJoint deformers_hand_L_index_palm;
  KrakenJoint deformers_hand_L_index_base;
  KrakenJoint deformers_hand_L_index_mid;
  KrakenJoint deformers_hand_L_index_tip;
  KrakenJoint deformers_hand_L_middle_palm;
  KrakenJoint deformers_hand_L_middle_base;
  KrakenJoint deformers_hand_L_middle_mid;
  KrakenJoint deformers_hand_L_middle_tip;
  KrakenJoint deformers_hand_L_ring_palm;
  KrakenJoint deformers_hand_L_ring_base;
  KrakenJoint deformers_hand_L_ring_mid;
  KrakenJoint deformers_hand_L_ring_tip;
  KrakenJoint deformers_hand_L_pinky_palm;
  KrakenJoint deformers_hand_L_pinky_base;
  KrakenJoint deformers_hand_L_pinky_mid;
  KrakenJoint deformers_hand_L_pinky_tip;
  KrakenJoint deformers_hand_L_thumb_palm;
  KrakenJoint deformers_hand_L_thumb_base;
  KrakenJoint deformers_hand_L_thumb_tip;
  KrakenComponentGroup controls_hand_R_hand;
  KrakenHierarchyGroup controls_hand_R_inputs;
  KrakenBoolAttribute controls_hand_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_hand_R_inputs_inputs_rigScale;
  KrakenBoolAttribute controls_hand_R_inputs_inputs_rightSide;
  KrakenTransform controls_hand_R_globalSRTIn;
  KrakenTransform controls_hand_R_parentSpaceIn;
  KrakenHierarchyGroup controls_hand_R_outputs;
  KrakenBoolAttribute controls_hand_R_outputs_outputs_drawDebug;
  KrakenScalarAttribute controls_hand_R_outputs_outputs_ikBlend;
  KrakenScalarAttribute controls_hand_R_outputs_outputs_limbMocap;
  KrakenScalarAttribute controls_hand_R_outputs_outputs_softDist;
  KrakenScalarAttribute controls_hand_R_outputs_outputs_stretch;
  KrakenTransform controls_hand_R_handOut;
  KrakenTransform controls_hand_R_palmOut;
  KrakenCtrlSpace controls_hand_R_index_palm01Space;
  KrakenCurve controls_hand_R_index_palm;
  KrakenCtrlSpace controls_hand_R_index_base01Space;
  KrakenCurve controls_hand_R_index_base;
  KrakenCtrlSpace controls_hand_R_index_mid01Space;
  KrakenCurve controls_hand_R_index_mid;
  KrakenCtrlSpace controls_hand_R_index_tip01Space;
  KrakenCurve controls_hand_R_index_tip;
  KrakenCtrlSpace controls_hand_R_middle_palm01Space;
  KrakenCurve controls_hand_R_middle_palm;
  KrakenCtrlSpace controls_hand_R_middle_base01Space;
  KrakenCurve controls_hand_R_middle_base;
  KrakenCtrlSpace controls_hand_R_middle_mid01Space;
  KrakenCurve controls_hand_R_middle_mid;
  KrakenCtrlSpace controls_hand_R_middle_tip01Space;
  KrakenCurve controls_hand_R_middle_tip;
  KrakenCtrlSpace controls_hand_R_ring_palm01Space;
  KrakenCurve controls_hand_R_ring_palm;
  KrakenCtrlSpace controls_hand_R_ring_base01Space;
  KrakenCurve controls_hand_R_ring_base;
  KrakenCtrlSpace controls_hand_R_ring_mid01Space;
  KrakenCurve controls_hand_R_ring_mid;
  KrakenCtrlSpace controls_hand_R_ring_tip01Space;
  KrakenCurve controls_hand_R_ring_tip;
  KrakenCtrlSpace controls_hand_R_pinky_palm01Space;
  KrakenCurve controls_hand_R_pinky_palm;
  KrakenCtrlSpace controls_hand_R_pinky_base01Space;
  KrakenCurve controls_hand_R_pinky_base;
  KrakenCtrlSpace controls_hand_R_pinky_mid01Space;
  KrakenCurve controls_hand_R_pinky_mid;
  KrakenCtrlSpace controls_hand_R_pinky_tip01Space;
  KrakenCurve controls_hand_R_pinky_tip;
  KrakenCtrlSpace controls_hand_R_thumb_palm01Space;
  KrakenCurve controls_hand_R_thumb_palm;
  KrakenCtrlSpace controls_hand_R_thumb_base01Space;
  KrakenCurve controls_hand_R_thumb_base;
  KrakenCtrlSpace controls_hand_R_thumb_tip01Space;
  KrakenCurve controls_hand_R_thumb_tip;
  KrakenTransform controls_hand_R_ikgoalOut;
  KrakenTransform controls_hand_R_IKHandBlendKLOpHand_out;
  KrakenTransform controls_hand_R_IKHandBlendKLOpPalm_out;
  KrakenCtrlSpace controls_hand_R_hand01Space;
  KrakenCurve controls_hand_R_hand2;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist;
  KrakenScalarAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch;
  KrakenBoolAttribute controls_hand_R_hand01_hand_DisplayInfo_HandSettings_drawDebug;
  KrakenCtrlSpace controls_hand_R_handIKSpace;
  KrakenCtrlSpace controls_hand_R_palmIKSpace;
  KrakenTransform controls_hand_R_ikGoalRef;
  KrakenCtrlSpace controls_hand_R_hand02Space;
  KrakenCurve controls_hand_R_hand3;
  KrakenCtrlSpace controls_hand_R_palm01Space;
  KrakenCurve controls_hand_R_palm;
  KrakenTransform controls_hand_R_ikHand;
  KrakenTransform controls_hand_R_ikPalm;
  KrakenComponentGroup deformers_hand_R_hand;
  KrakenJoint deformers_hand_R_hand2;
  KrakenJoint deformers_hand_R_palm;
  KrakenJoint deformers_hand_R_index_palm;
  KrakenJoint deformers_hand_R_index_base;
  KrakenJoint deformers_hand_R_index_mid;
  KrakenJoint deformers_hand_R_index_tip;
  KrakenJoint deformers_hand_R_middle_palm;
  KrakenJoint deformers_hand_R_middle_base;
  KrakenJoint deformers_hand_R_middle_mid;
  KrakenJoint deformers_hand_R_middle_tip;
  KrakenJoint deformers_hand_R_ring_palm;
  KrakenJoint deformers_hand_R_ring_base;
  KrakenJoint deformers_hand_R_ring_mid;
  KrakenJoint deformers_hand_R_ring_tip;
  KrakenJoint deformers_hand_R_pinky_palm;
  KrakenJoint deformers_hand_R_pinky_base;
  KrakenJoint deformers_hand_R_pinky_mid;
  KrakenJoint deformers_hand_R_pinky_tip;
  KrakenJoint deformers_hand_R_thumb_palm;
  KrakenJoint deformers_hand_R_thumb_base;
  KrakenJoint deformers_hand_R_thumb_tip;
  KrakenComponentGroup controls_headNeck_M_headNeck;
  KrakenHierarchyGroup controls_headNeck_M_inputs;
  KrakenBoolAttribute controls_headNeck_M_inputs_inputs_buildWithCanvasOps;
  KrakenBoolAttribute controls_headNeck_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_headNeck_M_inputs_inputs_rigScale;
  KrakenTransform controls_headNeck_M_globalSRTIn;
  KrakenCtrlSpace controls_headNeck_M_headSpace;
  KrakenCtrlSpace controls_headNeck_M_headIKSpace;
  KrakenCurve controls_headNeck_M_head;
  KrakenCtrlSpace controls_headNeck_M_headUpVSpace;
  KrakenCurve controls_headNeck_M_headUpV;
  KrakenCtrlSpace controls_headNeck_M_headWorld01Space;
  KrakenCurve controls_headNeck_M_headWorld;
  KrakenTransform controls_headNeck_M_parentSpaceIn;
  KrakenHierarchyGroup controls_headNeck_M_outputs;
  KrakenTransform controls_headNeck_M_neckBaseOut;
  KrakenTransform controls_headNeck_M_neckEndOut;
  KrakenTransform controls_headNeck_M_neck01Out;
  KrakenTransform controls_headNeck_M_neck02Out;
  KrakenTransform controls_headNeck_M_neck03Out;
  KrakenTransform controls_headNeck_M_neck04Out;
  KrakenCtrlSpace controls_headNeck_M_neck01Space;
  KrakenCurve controls_headNeck_M_neck;
  KrakenCtrlSpace controls_headNeck_M_head01Space;
  KrakenCurve controls_headNeck_M_head2;
  KrakenScalarAttribute controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK;
  KrakenScalarAttribute controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK;
  KrakenScalarAttribute controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld;
  KrakenCtrlSpace controls_headNeck_M_headAlignSpace;
  KrakenCtrlSpace controls_headNeck_M_headHandleSpace;
  KrakenCtrlSpace controls_headNeck_M_neckHandleSpace;
  KrakenComponentGroup deformers_headNeck_M_headNeck;
  KrakenJoint deformers_headNeck_M_neck01;
  KrakenJoint deformers_headNeck_M_neck02;
  KrakenJoint deformers_headNeck_M_neck03;
  KrakenJoint deformers_headNeck_M_head;
  KrakenComponentGroup controls_palmSocket_L_palmSocket;
  KrakenHierarchyGroup controls_palmSocket_L_inputs;
  KrakenBoolAttribute controls_palmSocket_L_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_palmSocket_L_inputs_inputs_rigScale;
  KrakenTransform controls_palmSocket_L_parentSpaceIn;
  KrakenTransform controls_palmSocket_L_globalSRTIn;
  KrakenHierarchyGroup controls_palmSocket_L_outputs;
  KrakenTransform controls_palmSocket_L_socketOut;
  KrakenCtrlSpace controls_palmSocket_L_palmSocket_offset01Space;
  KrakenCurve controls_palmSocket_L_palmSocket_offset;
  KrakenCurve controls_palmSocket_L_palmSocket2;
  KrakenComponentGroup deformers_palmSocket_L_palmSocket;
  KrakenJoint deformers_palmSocket_L_palmSocket2;
  KrakenComponentGroup controls_palmSocket_R_palmSocket;
  KrakenHierarchyGroup controls_palmSocket_R_inputs;
  KrakenBoolAttribute controls_palmSocket_R_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_palmSocket_R_inputs_inputs_rigScale;
  KrakenTransform controls_palmSocket_R_parentSpaceIn;
  KrakenTransform controls_palmSocket_R_globalSRTIn;
  KrakenHierarchyGroup controls_palmSocket_R_outputs;
  KrakenTransform controls_palmSocket_R_socketOut;
  KrakenCtrlSpace controls_palmSocket_R_palmSocket_offset01Space;
  KrakenCurve controls_palmSocket_R_palmSocket_offset;
  KrakenCurve controls_palmSocket_R_palmSocket2;
  KrakenComponentGroup deformers_palmSocket_R_palmSocket;
  KrakenJoint deformers_palmSocket_R_palmSocket2;
  KrakenComponentGroup controls_headSocket_M_headSocket;
  KrakenHierarchyGroup controls_headSocket_M_inputs;
  KrakenBoolAttribute controls_headSocket_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_headSocket_M_inputs_inputs_rigScale;
  KrakenTransform controls_headSocket_M_parentSpaceIn;
  KrakenTransform controls_headSocket_M_globalSRTIn;
  KrakenHierarchyGroup controls_headSocket_M_outputs;
  KrakenTransform controls_headSocket_M_socketOut;
  KrakenCtrlSpace controls_headSocket_M_headSocket_offset01Space;
  KrakenCurve controls_headSocket_M_headSocket_offset;
  KrakenCurve controls_headSocket_M_headSocket2;
  KrakenComponentGroup deformers_headSocket_M_headSocket;
  KrakenJoint deformers_headSocket_M_headSocket2;
  KrakenComponentGroup controls_socketA_M_socketA;
  KrakenHierarchyGroup controls_socketA_M_inputs;
  KrakenBoolAttribute controls_socketA_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_socketA_M_inputs_inputs_rigScale;
  KrakenTransform controls_socketA_M_parentSpaceIn;
  KrakenTransform controls_socketA_M_globalSRTIn;
  KrakenHierarchyGroup controls_socketA_M_outputs;
  KrakenTransform controls_socketA_M_socketOut;
  KrakenCtrlSpace controls_socketA_M_socketA_offset01Space;
  KrakenCurve controls_socketA_M_socketA_offset;
  KrakenCurve controls_socketA_M_socketA2;
  KrakenComponentGroup deformers_socketA_M_socketA;
  KrakenJoint deformers_socketA_M_socketA2;
  KrakenComponentGroup controls_socketB_M_socketB;
  KrakenHierarchyGroup controls_socketB_M_inputs;
  KrakenBoolAttribute controls_socketB_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_socketB_M_inputs_inputs_rigScale;
  KrakenTransform controls_socketB_M_parentSpaceIn;
  KrakenTransform controls_socketB_M_globalSRTIn;
  KrakenHierarchyGroup controls_socketB_M_outputs;
  KrakenTransform controls_socketB_M_socketOut;
  KrakenCtrlSpace controls_socketB_M_socketB_offset01Space;
  KrakenCurve controls_socketB_M_socketB_offset;
  KrakenCurve controls_socketB_M_socketB2;
  KrakenComponentGroup deformers_socketB_M_socketB;
  KrakenJoint deformers_socketB_M_socketB2;
  KrakenComponentGroup controls_socketC_M_socketC;
  KrakenHierarchyGroup controls_socketC_M_inputs;
  KrakenBoolAttribute controls_socketC_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_socketC_M_inputs_inputs_rigScale;
  KrakenTransform controls_socketC_M_parentSpaceIn;
  KrakenTransform controls_socketC_M_globalSRTIn;
  KrakenHierarchyGroup controls_socketC_M_outputs;
  KrakenTransform controls_socketC_M_socketOut;
  KrakenCtrlSpace controls_socketC_M_socketC_offset01Space;
  KrakenCurve controls_socketC_M_socketC_offset;
  KrakenCurve controls_socketC_M_socketC2;
  KrakenComponentGroup deformers_socketC_M_socketC;
  KrakenJoint deformers_socketC_M_socketC2;
  KrakenComponentGroup controls_chestSocket_M_chestSocket;
  KrakenHierarchyGroup controls_chestSocket_M_inputs;
  KrakenBoolAttribute controls_chestSocket_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_chestSocket_M_inputs_inputs_rigScale;
  KrakenTransform controls_chestSocket_M_parentSpaceIn;
  KrakenTransform controls_chestSocket_M_globalSRTIn;
  KrakenHierarchyGroup controls_chestSocket_M_outputs;
  KrakenTransform controls_chestSocket_M_socketOut;
  KrakenCtrlSpace controls_chestSocket_M_chestSocket_offset01Space;
  KrakenCurve controls_chestSocket_M_chestSocket_offset;
  KrakenCurve controls_chestSocket_M_chestSocket2;
  KrakenComponentGroup deformers_chestSocket_M_chestSocket;
  KrakenJoint deformers_chestSocket_M_chestSocket2;
  KrakenComponentGroup controls_hipsSocket_M_hipsSocket;
  KrakenHierarchyGroup controls_hipsSocket_M_inputs;
  KrakenBoolAttribute controls_hipsSocket_M_inputs_inputs_drawDebug;
  KrakenScalarAttribute controls_hipsSocket_M_inputs_inputs_rigScale;
  KrakenTransform controls_hipsSocket_M_parentSpaceIn;
  KrakenTransform controls_hipsSocket_M_globalSRTIn;
  KrakenHierarchyGroup controls_hipsSocket_M_outputs;
  KrakenTransform controls_hipsSocket_M_socketOut;
  KrakenCtrlSpace controls_hipsSocket_M_hipsSocket_offset01Space;
  KrakenCurve controls_hipsSocket_M_hipsSocket_offset;
  KrakenCurve controls_hipsSocket_M_hipsSocket2;
  KrakenComponentGroup deformers_hipsSocket_M_hipsSocket;
  KrakenJoint deformers_hipsSocket_M_hipsSocket2;
  KrakenPoseConstraint controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint;
  KrakenPoseConstraint controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint;
  KrakenPoseConstraint controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint;
  KrakenPoseConstraint controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint;
  KrakenPoseConstraint controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint;
  RigScaleSolver main_M_rigScaleKLOp;
  KrakenPoseConstraint controls_main_M_outputs_master_master_To_master_PoseConstraint;
  KrakenPoseConstraint controls_main_M_outputs_offset_offset_To_offset_PoseConstraint;
  KrakenPoseConstraint controls_main_M_outputs_cog_cog_To_cog_PoseConstraint;
  KrakenPoseConstraint controls_main_M_vis_vis_To_master_PoseConstraint;
  OSS_NURBSSpineKLSolver spine_M_NURBSSpineKLOp;
  MultiPoseConstraintSolver spine_M_spineMultiPoseConstraintKLOp;
  KrakenPoseConstraint controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint;
  PoseConstraintSolver shoulder_L_shldrDeformerKLOp;
  KrakenPoseConstraint controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint;
  PoseConstraintSolver shoulder_R_shldrDeformerKLOp;
  KrakenPoseConstraint controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint;
  KrakenPoseConstraint controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint;
  OSS_HierBlendSolver leg_L_LlegUpVSpace_HierBlendSolver;
  OSS_TwoBoneIKSolver leg_L_LlegIKFKTwoBoneIKSolver;
  MultiPoseConstraintSolver leg_L_LlegDeformerJointsKLOp;
  KrakenPoseConstraint controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint;
  OSS_FootRockerSystem foot_L_MfootFootRockerKLOp;
  OSS_IKFootBlendSolver foot_L_MfootIKFootBlendKLOp;
  MultiPoseConstraintSolver foot_L_MfootDeformerJointsKLOp;
  KrakenPoseConstraint controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint;
  OSS_FootRockerSystem foot_R_MfootFootRockerKLOp;
  OSS_IKFootBlendSolver foot_R_MfootIKFootBlendKLOp;
  MultiPoseConstraintSolver foot_R_MfootDeformerJointsKLOp;
  KrakenPoseConstraint controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint;
  OSS_HierBlendSolver leg_R_RlegUpVSpace_HierBlendSolver;
  OSS_TwoBoneIKSolver leg_R_RlegIKFKTwoBoneIKSolver;
  MultiPoseConstraintSolver leg_R_RlegDeformerJointsKLOp;
  KrakenPoseConstraint controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint;
  OSS_HierBlendSolver arm_R_RarmUpVSpace_HierBlendSolver;
  OSS_TwoBoneIKSolver arm_R_RarmIKFKTwoBoneIKSolver;
  MultiPoseConstraintSolver arm_R_RarmDeformerJointsKLOp;
  KrakenPoseConstraint controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint;
  OSS_HierBlendSolver arm_L_LarmUpVSpace_HierBlendSolver;
  OSS_TwoBoneIKSolver arm_L_LarmIKFKTwoBoneIKSolver;
  MultiPoseConstraintSolver arm_L_LarmDeformerJointsKLOp;
  KrakenPoseConstraint controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint;
  KrakenPoseConstraint controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint;
  OSS_IKFootBlendSolver hand_L_MhandIKHandBlendKLOp;
  MultiPoseConstraintSolver hand_L_LhandindexDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandmiddleDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandringDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandpinkyDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandthumbDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_L_LhandDeformerJointsKLOp;
  KrakenPoseConstraint controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint;
  OSS_IKFootBlendSolver hand_R_MhandIKHandBlendKLOp;
  MultiPoseConstraintSolver hand_R_RhandindexDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandmiddleDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandringDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandpinkyDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandthumbDeformerJointsKLOp;
  MultiPoseConstraintSolver hand_R_RhandDeformerJointsKLOp;
  KrakenPoseConstraint controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint;
  KrakenPoseConstraint controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint;
  OSS_NURBSSpineKLSolver headNeck_M_NURBSNeckKLOp;
  MultiPoseConstraintSolver headNeck_M_neckDeformerKLOp;
  KrakenPositionConstraint controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint;
  KrakenPositionConstraint controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint;
  KrakenPoseConstraint controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint;
  KrakenPoseConstraint controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint;
  KrakenPoseConstraint controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint;
  KrakenPoseConstraint controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint;
  KrakenPoseConstraint controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint;
  KrakenPoseConstraint controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint;
  KrakenPoseConstraint controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint;
  KrakenPoseConstraint controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint;
  KrakenPoseConstraint controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint;
  KrakenPoseConstraint controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint;
  KrakenPoseConstraint controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint;
  KrakenPoseConstraint controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint;
  KrakenPoseConstraint controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint;
  KrakenPoseConstraint controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint;
  KrakenPoseConstraint controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint;
  KrakenPoseConstraint controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint;
  KrakenPoseConstraint deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint;
};

function KRK_lucy_guide() {
  Float32 floatAnimation[String];

  this.resetPose();

  // build constraints
  this.controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint.offset = Xfo();
  this.controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.offset = Xfo();
  this.controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.offset = Xfo();
  this.controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.offset = Xfo();
  this.controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.offset = Xfo();
  this.controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.offset = Xfo();
  this.controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.offset = Xfo();
  this.controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.offset = Xfo();
  this.controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.offset = Xfo();
  this.controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.offset = Xfo();
  this.controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.offset = Xfo();
  this.controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.offset = Xfo();
  this.controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.offset = Xfo();
  this.controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.offset = Xfo();
  this.controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.offset = Xfo();
  this.controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.offset = Xfo();
  this.controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.offset = Xfo();
  this.controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.offset = Xfo();
  this.controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.offset = Xfo();
  this.controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.constrainers.resize(1);
  this.controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint.offset = Xfo();
  this.controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint.constrainers.resize(1);
  this.controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.offset = Xfo();
  this.controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.offset = Xfo();
  this.controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.offset = Xfo();
  this.controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.offset = Xfo();
  this.controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers.resize(1);
  this.controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint.offset = Xfo();
  this.controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint.constrainers.resize(1);
  this.controls_main_M_outputs_master_master_To_master_PoseConstraint.offset = Xfo();
  this.controls_main_M_outputs_master_master_To_master_PoseConstraint.constrainers.resize(1);
  this.controls_main_M_outputs_offset_offset_To_offset_PoseConstraint.offset = Xfo();
  this.controls_main_M_outputs_offset_offset_To_offset_PoseConstraint.constrainers.resize(1);
  this.controls_main_M_outputs_cog_cog_To_cog_PoseConstraint.offset = Xfo();
  this.controls_main_M_outputs_cog_cog_To_cog_PoseConstraint.constrainers.resize(1);
  this.controls_main_M_vis_vis_To_master_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 22.3214), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_vis_vis_To_master_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint.offset = Xfo();
  this.controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint.offset = Xfo();
  this.controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint.offset = Xfo();
  this.controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint.offset = Xfo();
  this.controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 7.7393, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 7.7393, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint.offset = Xfo();
  this.controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.offset = Xfo();
  this.controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-1.6134, -0.3563, 0.2526), Quat(0.5531, -0.4408, 0.5533, 0.4401), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint.offset = Xfo();
  this.controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.offset = Xfo();
  this.controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.constrainers.resize(1);
  this.controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-1.6134, -0.3563, -0.2526), Quat(-0.4375, -0.5558, -0.4367, 0.5560), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(4.3470, 0.0000, 0.0000), Quat(0.0147, -0.0119, -0.7070, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(4.3733, 3.5091, -0.9774), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0259, 3.5091, 1.9246), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(-2.3566, 34.4546, 65.2655), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(1.9908, 34.4546, 62.3636), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.offset = Xfo();
  this.controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.offset = Xfo();
  this.controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0001, -0.0257, 0.0057), Quat(-0.0152, -0.6083, 0.0111, 0.7935), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.offset = Xfo();
  this.controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.offset = Xfo();
  this.controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0000, -0.0004, -0.0004), Quat(-0.0000, -0.6084, -0.0000, 0.7937), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-4.3470, 0.0000, 0.0000), Quat(0.7071, 0.7071, 0.0014, -0.0014), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-4.3470, 3.5091, -0.9726), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0004, 3.5091, 1.9293), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0004, 34.4645, 65.3101), Quat(0.0000, -0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-4.3470, 34.4645, 62.4082), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0012, 0.0107, -0.0005, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(19.4926, 0.0000, -43.6960), Quat(0.0000, -0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0073, 0.0107, -0.0004, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.offset = Xfo(Vec3(-19.4926, 0.0000, -43.6960), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.constrainers.resize(1);
  this.controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.offset = Xfo();
  this.controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.offset = Xfo();
  this.controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.offset = Xfo();
  this.controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0000, 0.0000, 0.0000), Quat(-0.7061, -0.0338, 0.0375, -0.7063), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.offset = Xfo();
  this.controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.offset = Xfo();
  this.controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.offset = Xfo();
  this.controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint.offset = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint.constrainers.resize(1);
  this.controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.7061, 0.0338, -0.0375, 0.7063), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint.offset = Xfo(Vec3(0.0000, -119.2143, -2.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint.constrainers.resize(1);
  this.controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint.constrainers.resize(1);
  this.controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint.constrainers.resize(1);
  this.controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(2.2768, 0.5331, 0.0000), Quat(-0.4364, -0.5564, -0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint.offset = Xfo();
  this.controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.1701, 0.2506, -2.0361), Quat(0.5009, 0.4991, -0.5009, 0.4991), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint.offset = Xfo();
  this.deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint.offset = Xfo();
  this.controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint.constrainers.resize(1);
  this.controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.1701, -0.2506, 2.0361), Quat(0.4991, -0.5009, 0.4991, 0.5009), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint.offset = Xfo();
  this.deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint.constrainers.resize(1);
  this.controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint.offset = Xfo();
  this.controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint.constrainers.resize(1);
  this.controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0000, 136.5005, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint.offset = Xfo();
  this.deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint.constrainers.resize(1);
  this.controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint.offset = Xfo();
  this.controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint.constrainers.resize(1);
  this.controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint.offset = Xfo();
  this.deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint.constrainers.resize(1);
  this.controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint.offset = Xfo();
  this.controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint.constrainers.resize(1);
  this.controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint.offset = Xfo();
  this.deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint.constrainers.resize(1);
  this.controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint.offset = Xfo();
  this.controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint.constrainers.resize(1);
  this.controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint.offset = Xfo();
  this.deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint.constrainers.resize(1);
  this.controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint.offset = Xfo();
  this.controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint.constrainers.resize(1);
  this.controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-6.8299, 3.6590, 0.0000), Quat(-0.4364, -0.5564, -0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint.offset = Xfo();
  this.deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint.constrainers.resize(1);
  this.controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint.offset = Xfo();
  this.controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint.constrainers.resize(1);
  this.controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint.offset = Xfo(Vec3(-0.0000, -1.7687, 3.6876), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint.constrainers.resize(1);
  this.deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint.offset = Xfo();
  this.deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint.constrainers.resize(1);

  // build kl solvers
  this.main_M_rigScaleKLOp = RigScaleSolver();
  this.spine_M_NURBSSpineKLOp = OSS_NURBSSpineKLSolver();
  this.spine_M_spineMultiPoseConstraintKLOp = MultiPoseConstraintSolver();
  this.shoulder_L_shldrDeformerKLOp = PoseConstraintSolver();
  this.shoulder_R_shldrDeformerKLOp = PoseConstraintSolver();
  this.leg_L_LlegUpVSpace_HierBlendSolver = OSS_HierBlendSolver();
  this.leg_L_LlegIKFKTwoBoneIKSolver = OSS_TwoBoneIKSolver();
  this.leg_L_LlegDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.foot_L_MfootFootRockerKLOp = OSS_FootRockerSystem();
  this.foot_L_MfootIKFootBlendKLOp = OSS_IKFootBlendSolver();
  this.foot_L_MfootDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.foot_R_MfootFootRockerKLOp = OSS_FootRockerSystem();
  this.foot_R_MfootIKFootBlendKLOp = OSS_IKFootBlendSolver();
  this.foot_R_MfootDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.leg_R_RlegUpVSpace_HierBlendSolver = OSS_HierBlendSolver();
  this.leg_R_RlegIKFKTwoBoneIKSolver = OSS_TwoBoneIKSolver();
  this.leg_R_RlegDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.arm_R_RarmUpVSpace_HierBlendSolver = OSS_HierBlendSolver();
  this.arm_R_RarmIKFKTwoBoneIKSolver = OSS_TwoBoneIKSolver();
  this.arm_R_RarmDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.arm_L_LarmUpVSpace_HierBlendSolver = OSS_HierBlendSolver();
  this.arm_L_LarmIKFKTwoBoneIKSolver = OSS_TwoBoneIKSolver();
  this.arm_L_LarmDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_MhandIKHandBlendKLOp = OSS_IKFootBlendSolver();
  this.hand_L_LhandindexDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandmiddleDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandringDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandpinkyDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandthumbDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_L_LhandDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_MhandIKHandBlendKLOp = OSS_IKFootBlendSolver();
  this.hand_R_RhandindexDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandmiddleDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandringDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandpinkyDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandthumbDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.hand_R_RhandDeformerJointsKLOp = MultiPoseConstraintSolver();
  this.headNeck_M_NURBSNeckKLOp = OSS_NURBSSpineKLSolver();
  this.headNeck_M_neckDeformerKLOp = MultiPoseConstraintSolver();

  // build kl canvas ops

  // build attributes
  this.controls_main_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_main_M_outputs_outputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale = KrakenScalarAttribute("", "", true, true, 0.1, 100.0, 1.000000, floatAnimation);
  this.controls_spine_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_spine_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_shoulder_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_shoulder_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_shoulder_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_shoulder_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_shoulder_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_shoulder_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_leg_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_inputs_inputs_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_leg_L_inputs_inputs_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_leg_L_inputs_inputs_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_leg_L_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len = KrakenScalarAttribute("", "", true, true, 0.0, 93.8725547791, 31.290852, floatAnimation);
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len = KrakenScalarAttribute("", "", true, true, 0.0, 97.6223373413, 32.540779, floatAnimation);
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.500000, floatAnimation);
  this.controls_foot_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_foot_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_L_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_L_outputs_outputs_ikBlend = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_foot_L_outputs_outputs_limbMocap = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_L_outputs_outputs_softDist = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_L_outputs_outputs_stretch = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker = KrakenScalarAttribute("", "", true, true, -180.0, 180.0, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak = KrakenScalarAttribute("", "", true, true, 0, 90.0, 45.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt = KrakenScalarAttribute("", "", true, true, -180, 180.0, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_foot_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_foot_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, true);
  this.controls_foot_R_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_R_outputs_outputs_ikBlend = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_foot_R_outputs_outputs_limbMocap = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_R_outputs_outputs_softDist = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_R_outputs_outputs_stretch = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker = KrakenScalarAttribute("", "", true, true, -180.0, 180.0, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak = KrakenScalarAttribute("", "", true, true, 0, 90.0, 45.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt = KrakenScalarAttribute("", "", true, true, -180, 180.0, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_leg_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_leg_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, true);
  this.controls_leg_R_inputs_inputs_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_leg_R_inputs_inputs_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_leg_R_inputs_inputs_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_leg_R_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len = KrakenScalarAttribute("", "", true, true, 0.0, 93.8725547791, 31.290852, floatAnimation);
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len = KrakenScalarAttribute("", "", true, true, 0.0, 97.6219482422, 32.540649, floatAnimation);
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.500000, floatAnimation);
  this.controls_arm_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_arm_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, true);
  this.controls_arm_R_inputs_inputs_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_arm_R_inputs_inputs_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_arm_R_inputs_inputs_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_arm_R_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len = KrakenScalarAttribute("", "", true, true, 0.0, 64.8865013123, 21.628834, floatAnimation);
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len = KrakenScalarAttribute("", "", true, true, 0.0, 61.3404922485, 20.446831, floatAnimation);
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.500000, floatAnimation);
  this.controls_arm_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_arm_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_L_inputs_inputs_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_arm_L_inputs_inputs_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_arm_L_inputs_inputs_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_arm_L_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len = KrakenScalarAttribute("", "", true, true, 0.0, 64.8865013123, 21.628834, floatAnimation);
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len = KrakenScalarAttribute("", "", true, true, 0.0, 61.3404922485, 20.446831, floatAnimation);
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.500000, floatAnimation);
  this.controls_hand_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hand_L_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_L_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_L_outputs_outputs_ikBlend = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hand_L_outputs_outputs_limbMocap = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_L_outputs_outputs_softDist = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_L_outputs_outputs_stretch = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hand_R_inputs_inputs_rightSide = KrakenBoolAttribute("", "", true, true, true);
  this.controls_hand_R_outputs_outputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hand_R_outputs_outputs_ikBlend = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hand_R_outputs_outputs_limbMocap = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_R_outputs_outputs_softDist = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_R_outputs_outputs_stretch = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist = KrakenScalarAttribute("", "", true, true, 0.0, SCALAR_INFINITE, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_headNeck_M_inputs_inputs_buildWithCanvasOps = KrakenBoolAttribute("", "", true, true, false);
  this.controls_headNeck_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_headNeck_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 1.000000, floatAnimation);
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld = KrakenScalarAttribute("", "", true, true, 0.0, 1.0, 0.000000, floatAnimation);
  this.controls_palmSocket_L_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_palmSocket_L_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_palmSocket_R_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_palmSocket_R_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_headSocket_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_headSocket_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_socketA_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_socketA_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_socketB_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_socketB_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_socketC_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_socketC_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_chestSocket_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_chestSocket_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);
  this.controls_hipsSocket_M_inputs_inputs_drawDebug = KrakenBoolAttribute("", "", true, true, false);
  this.controls_hipsSocket_M_inputs_inputs_rigScale = KrakenScalarAttribute("", "", true, true, -SCALAR_INFINITE, SCALAR_INFINITE, 1.000000, floatAnimation);

}

function KRK_lucy_guide.solve!() {
  UInt64 timerStart = getCurrentTicks();
  this.controls_main_M_outputs_outputs_rigScale.value = this.controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale.value;
  this.controls_spine_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_shoulder_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_shoulder_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_leg_L_inputs_inputs_drawDebug.value = this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_drawDebug.value;
  this.controls_leg_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_leg_L_inputs_inputs_ikBlend.value = this.controls_foot_L_outputs_outputs_ikBlend.value;
  this.controls_leg_L_inputs_inputs_softDist.value = this.controls_foot_L_outputs_outputs_softDist.value;
  this.controls_leg_L_inputs_inputs_stretch.value = this.controls_foot_L_outputs_outputs_stretch.value;
  this.controls_foot_L_inputs_inputs_drawDebug.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_drawDebug.value;
  this.controls_foot_L_outputs_outputs_ikBlend.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend.value;
  this.controls_foot_L_outputs_outputs_limbMocap.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap.value;
  this.controls_foot_L_outputs_outputs_softDist.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist.value;
  this.controls_foot_L_outputs_outputs_stretch.value = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch.value;
  this.controls_foot_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_foot_R_inputs_inputs_drawDebug.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_drawDebug.value;
  this.controls_foot_R_outputs_outputs_ikBlend.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend.value;
  this.controls_foot_R_outputs_outputs_limbMocap.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap.value;
  this.controls_foot_R_outputs_outputs_softDist.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist.value;
  this.controls_foot_R_outputs_outputs_stretch.value = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch.value;
  this.controls_foot_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_leg_R_inputs_inputs_drawDebug.value = this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_drawDebug.value;
  this.controls_leg_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_leg_R_inputs_inputs_ikBlend.value = this.controls_foot_R_outputs_outputs_ikBlend.value;
  this.controls_leg_R_inputs_inputs_softDist.value = this.controls_foot_R_outputs_outputs_softDist.value;
  this.controls_leg_R_inputs_inputs_stretch.value = this.controls_foot_R_outputs_outputs_stretch.value;
  this.controls_arm_R_inputs_inputs_drawDebug.value = this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_drawDebug.value;
  this.controls_arm_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_arm_R_inputs_inputs_ikBlend.value = this.controls_hand_R_outputs_outputs_ikBlend.value;
  this.controls_arm_R_inputs_inputs_softDist.value = this.controls_hand_R_outputs_outputs_softDist.value;
  this.controls_arm_R_inputs_inputs_stretch.value = this.controls_hand_R_outputs_outputs_stretch.value;
  this.controls_arm_L_inputs_inputs_drawDebug.value = this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_drawDebug.value;
  this.controls_arm_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_arm_L_inputs_inputs_ikBlend.value = this.controls_hand_L_outputs_outputs_ikBlend.value;
  this.controls_arm_L_inputs_inputs_softDist.value = this.controls_hand_L_outputs_outputs_softDist.value;
  this.controls_arm_L_inputs_inputs_stretch.value = this.controls_hand_L_outputs_outputs_stretch.value;
  this.controls_hand_L_inputs_inputs_drawDebug.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_drawDebug.value;
  this.controls_hand_L_outputs_outputs_ikBlend.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend.value;
  this.controls_hand_L_outputs_outputs_limbMocap.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap.value;
  this.controls_hand_L_outputs_outputs_softDist.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist.value;
  this.controls_hand_L_outputs_outputs_stretch.value = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch.value;
  this.controls_hand_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_hand_R_inputs_inputs_drawDebug.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_drawDebug.value;
  this.controls_hand_R_outputs_outputs_ikBlend.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend.value;
  this.controls_hand_R_outputs_outputs_limbMocap.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap.value;
  this.controls_hand_R_outputs_outputs_softDist.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist.value;
  this.controls_hand_R_outputs_outputs_stretch.value = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch.value;
  this.controls_hand_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_headNeck_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_palmSocket_L_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_palmSocket_R_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_headSocket_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_socketA_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_socketB_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;
  this.controls_socketC_M_inputs_inputs_rigScale.value = this.controls_main_M_outputs_outputs_rigScale.value;

  // solving global transform lucy_guide
  this.lucy_guide.globalXfo = this.lucy_guide.xfo;

  // solving parent child constraint lucy_guide_controls
  this.lucy_guide_controls.globalXfo = this.lucy_guide.globalXfo * this.lucy_guide_controls.xfo;

  // solving parent child constraint lucy_guide_deformers
  this.lucy_guide_deformers.globalXfo = this.lucy_guide.globalXfo * this.lucy_guide_deformers.xfo;

  // solving parent child constraint controls_main_M_main
  this.controls_main_M_main.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_main_M_main.xfo;

  // solving parent child constraint controls_main_M_inputs
  this.controls_main_M_inputs.globalXfo = this.controls_main_M_main.globalXfo * this.controls_main_M_inputs.xfo;

  // solving parent child constraint controls_main_M_outputs
  this.controls_main_M_outputs.globalXfo = this.controls_main_M_main.globalXfo * this.controls_main_M_outputs.xfo;

  // solving KLSolver main_M_rigScaleKLOp
  Boolean main_M_rigScaleKLOp_drawDebug = this.controls_main_M_inputs_inputs_drawDebug.value;
  Scalar main_M_rigScaleKLOp_rigScale = this.controls_main_M_outputs_outputs_rigScale.value;
  Mat44 main_M_rigScaleKLOp_target;
  this.main_M_rigScaleKLOp.solve(
    main_M_rigScaleKLOp_drawDebug,
    main_M_rigScaleKLOp_rigScale,
    main_M_rigScaleKLOp_target
  );

  // retrieving value for controls_main_M_master01Space from solver main_M_rigScaleKLOp
  this.controls_main_M_master01Space.globalXfo = main_M_rigScaleKLOp_target;

  // solving parent child constraint controls_main_M_master
  this.controls_main_M_master.globalXfo = this.controls_main_M_master01Space.globalXfo * this.controls_main_M_master.xfo;

  // solving PoseConstraint constraint controls_main_M_outputs_master_master_To_master_PoseConstraint
  this.controls_main_M_outputs_master_master_To_master_PoseConstraint.constrainers[0] = this.controls_main_M_master.globalXfo;
  this.controls_main_M_masterOut.globalXfo = this.controls_main_M_outputs_master_master_To_master_PoseConstraint.compute(this.controls_main_M_masterOut.globalXfo);

  // solving parent child constraint controls_main_M_offset01Space
  this.controls_main_M_offset01Space.globalXfo = this.controls_main_M_master.globalXfo * this.controls_main_M_offset01Space.xfo;

  // solving parent child constraint controls_main_M_offset
  this.controls_main_M_offset.globalXfo = this.controls_main_M_offset01Space.globalXfo * this.controls_main_M_offset.xfo;

  // solving PoseConstraint constraint controls_main_M_outputs_offset_offset_To_offset_PoseConstraint
  this.controls_main_M_outputs_offset_offset_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offset.globalXfo;
  this.controls_main_M_offsetOut.globalXfo = this.controls_main_M_outputs_offset_offset_To_offset_PoseConstraint.compute(this.controls_main_M_offsetOut.globalXfo);

  // solving parent child constraint controls_main_M_cog01Space
  this.controls_main_M_cog01Space.globalXfo = this.controls_main_M_offset.globalXfo * this.controls_main_M_cog01Space.xfo;

  // solving parent child constraint controls_main_M_cog
  this.controls_main_M_cog.globalXfo = this.controls_main_M_cog01Space.globalXfo * this.controls_main_M_cog.xfo;

  // solving PoseConstraint constraint controls_main_M_outputs_cog_cog_To_cog_PoseConstraint
  this.controls_main_M_outputs_cog_cog_To_cog_PoseConstraint.constrainers[0] = this.controls_main_M_cog.globalXfo;
  this.controls_main_M_cogOut.globalXfo = this.controls_main_M_outputs_cog_cog_To_cog_PoseConstraint.compute(this.controls_main_M_cogOut.globalXfo);

  // solving PoseConstraint constraint controls_main_M_vis_vis_To_master_PoseConstraint
  this.controls_main_M_vis_vis_To_master_PoseConstraint.constrainers[0] = this.controls_main_M_master.globalXfo;
  this.controls_main_M_vis.globalXfo = this.controls_main_M_vis_vis_To_master_PoseConstraint.compute(this.controls_main_M_vis.globalXfo);

  // solving parent child constraint controls_spine_M_spine
  this.controls_spine_M_spine.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_spine_M_spine.xfo;

  // solving parent child constraint controls_spine_M_inputs
  this.controls_spine_M_inputs.globalXfo = this.controls_spine_M_spine.globalXfo * this.controls_spine_M_inputs.xfo;

  // solving PoseConstraint constraint controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint
  this.controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint.constrainers[0] = this.controls_main_M_cogOut.globalXfo;
  this.controls_spine_M_parentSpaceIn.globalXfo = this.controls_spine_M_inputs_parentSpace_parentSpace_To_cog_PoseConstraint.compute(this.controls_spine_M_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_spine_M_outputs
  this.controls_spine_M_outputs.globalXfo = this.controls_spine_M_spine.globalXfo * this.controls_spine_M_outputs.xfo;

  // solving PoseConstraint constraint controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint
  this.controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_spine_M_parentSpaceIn.globalXfo;
  this.controls_spine_M_hips01Space.globalXfo = this.controls_spine_M_hips01_hips01_To_parentSpace_PoseConstraint.compute(this.controls_spine_M_hips01Space.globalXfo);

  // solving parent child constraint controls_spine_M_hips
  this.controls_spine_M_hips.globalXfo = this.controls_spine_M_hips01Space.globalXfo * this.controls_spine_M_hips.xfo;

  // solving PoseConstraint constraint controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint
  this.controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint.constrainers[0] = this.controls_spine_M_hips.globalXfo;
  this.controls_spine_M_hipsOut.globalXfo = this.controls_spine_M_outputs_hips_hips_To_hips_PoseConstraint.compute(this.controls_spine_M_hipsOut.globalXfo);

  // solving KLSolver spine_M_NURBSSpineKLOp
  Boolean spine_M_NURBSSpineKLOp_drawDebug = this.controls_spine_M_inputs_inputs_drawDebug.value;
  Scalar spine_M_NURBSSpineKLOp_rigScale = this.controls_spine_M_inputs_inputs_rigScale.value;
  UInt32 spine_M_NURBSSpineKLOp_numDeformers = 6;
  Scalar spine_M_NURBSSpineKLOp_compressionAmt = 0.4;
  Mat44 spine_M_NURBSSpineKLOp_controlsRest[](5);
  spine_M_NURBSSpineKLOp_controlsRest[0] = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  spine_M_NURBSSpineKLOp_controlsRest[1] = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  spine_M_NURBSSpineKLOp_controlsRest[2] = Xfo(Vec3(-0.0000, 84.3915, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  spine_M_NURBSSpineKLOp_controlsRest[3] = Xfo(Vec3(0.0000, 95.4441, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  spine_M_NURBSSpineKLOp_controlsRest[4] = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  Mat44 spine_M_NURBSSpineKLOp_controls[](5);

  // solving parent child constraint controls_spine_M_pelvisSpace
  this.controls_spine_M_pelvisSpace.globalXfo = this.controls_spine_M_hips.globalXfo * this.controls_spine_M_pelvisSpace.xfo;
  spine_M_NURBSSpineKLOp_controls[0] = this.controls_spine_M_pelvisSpace.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint
  this.controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_spine_M_parentSpaceIn.globalXfo;
  this.controls_spine_M_torso01Space.globalXfo = this.controls_spine_M_torso01_torso01_To_parentSpace_PoseConstraint.compute(this.controls_spine_M_torso01Space.globalXfo);

  // solving parent child constraint controls_spine_M_torso
  this.controls_spine_M_torso.globalXfo = this.controls_spine_M_torso01Space.globalXfo * this.controls_spine_M_torso.xfo;
  spine_M_NURBSSpineKLOp_controls[1] = this.controls_spine_M_torso.globalXfo.toMat44();

  // solving parent child constraint controls_spine_M_chest01Space
  this.controls_spine_M_chest01Space.globalXfo = this.controls_spine_M_torso.globalXfo * this.controls_spine_M_chest01Space.xfo;

  // solving parent child constraint controls_spine_M_chest
  this.controls_spine_M_chest.globalXfo = this.controls_spine_M_chest01Space.globalXfo * this.controls_spine_M_chest.xfo;
  spine_M_NURBSSpineKLOp_controls[2] = this.controls_spine_M_chest.globalXfo.toMat44();

  // solving parent child constraint controls_spine_M_upChest01Space
  this.controls_spine_M_upChest01Space.globalXfo = this.controls_spine_M_chest.globalXfo * this.controls_spine_M_upChest01Space.xfo;

  // solving parent child constraint controls_spine_M_upChest
  this.controls_spine_M_upChest.globalXfo = this.controls_spine_M_upChest01Space.globalXfo * this.controls_spine_M_upChest.xfo;
  spine_M_NURBSSpineKLOp_controls[3] = this.controls_spine_M_upChest.globalXfo.toMat44();

  // solving parent child constraint controls_spine_M_neckSpace
  this.controls_spine_M_neckSpace.globalXfo = this.controls_spine_M_upChest.globalXfo * this.controls_spine_M_neckSpace.xfo;
  spine_M_NURBSSpineKLOp_controls[4] = this.controls_spine_M_neckSpace.globalXfo.toMat44();
  Mat44 spine_M_NURBSSpineKLOp_outputs[](6);
  this.spine_M_NURBSSpineKLOp.solve(
    spine_M_NURBSSpineKLOp_drawDebug,
    spine_M_NURBSSpineKLOp_rigScale,
    spine_M_NURBSSpineKLOp_numDeformers,
    spine_M_NURBSSpineKLOp_compressionAmt,
    spine_M_NURBSSpineKLOp_controlsRest,
    spine_M_NURBSSpineKLOp_controls,
    spine_M_NURBSSpineKLOp_outputs
  );

  // retrieving value for controls_spine_M_spine01Out from solver spine_M_NURBSSpineKLOp
  this.controls_spine_M_spine01Out.globalXfo = spine_M_NURBSSpineKLOp_outputs[0];

  // retrieving value for controls_spine_M_spine02Out from solver spine_M_NURBSSpineKLOp
  this.controls_spine_M_spine02Out.globalXfo = spine_M_NURBSSpineKLOp_outputs[1];

  // retrieving value for controls_spine_M_spine03Out from solver spine_M_NURBSSpineKLOp
  this.controls_spine_M_spine03Out.globalXfo = spine_M_NURBSSpineKLOp_outputs[2];

  // retrieving value for controls_spine_M_spine04Out from solver spine_M_NURBSSpineKLOp
  this.controls_spine_M_spine04Out.globalXfo = spine_M_NURBSSpineKLOp_outputs[3];

  // retrieving value for controls_spine_M_spine05Out from solver spine_M_NURBSSpineKLOp
  this.controls_spine_M_spine05Out.globalXfo = spine_M_NURBSSpineKLOp_outputs[4];

  // retrieving value for controls_spine_M_spine06Out from solver spine_M_NURBSSpineKLOp
  this.controls_spine_M_spine06Out.globalXfo = spine_M_NURBSSpineKLOp_outputs[5];

  // solving PoseConstraint constraint controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint
  this.controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint.constrainers[0] = this.controls_spine_M_spine01Out.globalXfo;
  this.controls_spine_M_spineBaseOut.globalXfo = this.controls_spine_M_outputs_spineBase_spineBase_To_spine01_PoseConstraint.compute(this.controls_spine_M_spineBaseOut.globalXfo);

  // solving PoseConstraint constraint controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint
  this.controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint.constrainers[0] = this.controls_spine_M_pelvisSpace.globalXfo;
  this.controls_spine_M_pelvisOut.globalXfo = this.controls_spine_M_outputs_pelvis_pelvis_To_pelvis_PoseConstraint.compute(this.controls_spine_M_pelvisOut.globalXfo);

  // solving PoseConstraint constraint controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint
  this.controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint.constrainers[0] = this.controls_spine_M_spine06Out.globalXfo;
  this.controls_spine_M_spineEndOut.globalXfo = this.controls_spine_M_outputs_spineEnd_spineEnd_To_spine06_PoseConstraint.compute(this.controls_spine_M_spineEndOut.globalXfo);

  // solving parent child constraint deformers_spine_M_spine
  this.deformers_spine_M_spine.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_spine_M_spine.xfo;

  // solving KLSolver spine_M_spineMultiPoseConstraintKLOp
  Boolean spine_M_spineMultiPoseConstraintKLOp_drawDebug = this.controls_spine_M_inputs_inputs_drawDebug.value;
  Scalar spine_M_spineMultiPoseConstraintKLOp_rigScale = this.controls_spine_M_inputs_inputs_rigScale.value;
  Mat44 spine_M_spineMultiPoseConstraintKLOp_constrainers[](6);
  spine_M_spineMultiPoseConstraintKLOp_constrainers[0] = this.controls_spine_M_spine01Out.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[1] = this.controls_spine_M_spine02Out.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[2] = this.controls_spine_M_spine03Out.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[3] = this.controls_spine_M_spine04Out.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[4] = this.controls_spine_M_spine05Out.globalXfo.toMat44();
  spine_M_spineMultiPoseConstraintKLOp_constrainers[5] = this.controls_spine_M_spine06Out.globalXfo.toMat44();
  Mat44 spine_M_spineMultiPoseConstraintKLOp_constrainees[](6);
  this.spine_M_spineMultiPoseConstraintKLOp.solve(
    spine_M_spineMultiPoseConstraintKLOp_drawDebug,
    spine_M_spineMultiPoseConstraintKLOp_rigScale,
    spine_M_spineMultiPoseConstraintKLOp_constrainers,
    spine_M_spineMultiPoseConstraintKLOp_constrainees
  );

  // retrieving value for deformers_spine_M_spine01 from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_spine_M_spine01.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[0];

  // retrieving value for deformers_spine_M_spine02 from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_spine_M_spine02.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[1];

  // retrieving value for deformers_spine_M_spine03 from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_spine_M_spine03.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[2];

  // retrieving value for deformers_spine_M_spine04 from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_spine_M_spine04.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[3];

  // retrieving value for deformers_spine_M_spine05 from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_spine_M_spine05.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[4];

  // retrieving value for deformers_spine_M_spine06 from solver spine_M_spineMultiPoseConstraintKLOp
  this.deformers_spine_M_spine06.globalXfo = spine_M_spineMultiPoseConstraintKLOp_constrainees[5];

  // solving parent child constraint controls_shoulder_L_shoulder
  this.controls_shoulder_L_shoulder.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_shoulder_L_shoulder.xfo;

  // solving parent child constraint controls_shoulder_L_inputs
  this.controls_shoulder_L_inputs.globalXfo = this.controls_shoulder_L_shoulder.globalXfo * this.controls_shoulder_L_inputs.xfo;

  // solving PoseConstraint constraint controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint
  this.controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers[0] = this.controls_spine_M_spineEndOut.globalXfo;
  this.controls_shoulder_L_parentSpaceIn.globalXfo = this.controls_shoulder_L_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.compute(this.controls_shoulder_L_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_shoulder_L_outputs
  this.controls_shoulder_L_outputs.globalXfo = this.controls_shoulder_L_shoulder.globalXfo * this.controls_shoulder_L_outputs.xfo;

  // solving PoseConstraint constraint controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint
  this.controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_shoulder_L_parentSpaceIn.globalXfo;
  this.controls_shoulder_L_shldr01Space.globalXfo = this.controls_shoulder_L_shldr01_shldr01_To_parentSpace_PoseConstraint.compute(this.controls_shoulder_L_shldr01Space.globalXfo);

  // solving parent child constraint controls_shoulder_L_shldr
  this.controls_shoulder_L_shldr.globalXfo = this.controls_shoulder_L_shldr01Space.globalXfo * this.controls_shoulder_L_shldr.xfo;

  // solving PoseConstraint constraint controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint
  this.controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint.constrainers[0] = this.controls_shoulder_L_shldr.globalXfo;
  this.controls_shoulder_L_shldrOut.globalXfo = this.controls_shoulder_L_outputs_shldr_shldr_To_shldr_PoseConstraint.compute(this.controls_shoulder_L_shldrOut.globalXfo);

  // solving parent child constraint controls_shoulder_L_shldrEndSpace
  this.controls_shoulder_L_shldrEndSpace.globalXfo = this.controls_shoulder_L_shldr.globalXfo * this.controls_shoulder_L_shldrEndSpace.xfo;

  // solving PoseConstraint constraint controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint
  this.controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.constrainers[0] = this.controls_shoulder_L_shldrEndSpace.globalXfo;
  this.controls_shoulder_L_shldrEndOut.globalXfo = this.controls_shoulder_L_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.compute(this.controls_shoulder_L_shldrEndOut.globalXfo);

  // solving parent child constraint deformers_shoulder_L_shoulder
  this.deformers_shoulder_L_shoulder.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_shoulder_L_shoulder.xfo;

  // solving KLSolver shoulder_L_shldrDeformerKLOp
  Boolean shoulder_L_shldrDeformerKLOp_drawDebug = this.controls_shoulder_L_inputs_inputs_drawDebug.value;
  Scalar shoulder_L_shldrDeformerKLOp_rigScale = this.controls_shoulder_L_inputs_inputs_rigScale.value;
  Mat44 shoulder_L_shldrDeformerKLOp_constrainer = this.controls_shoulder_L_shldrOut.globalXfo.toMat44();
  Mat44 shoulder_L_shldrDeformerKLOp_constrainee;
  this.shoulder_L_shldrDeformerKLOp.solve(
    shoulder_L_shldrDeformerKLOp_drawDebug,
    shoulder_L_shldrDeformerKLOp_rigScale,
    shoulder_L_shldrDeformerKLOp_constrainer,
    shoulder_L_shldrDeformerKLOp_constrainee
  );

  // retrieving value for deformers_shoulder_L_shldr from solver shoulder_L_shldrDeformerKLOp
  this.deformers_shoulder_L_shldr.globalXfo = shoulder_L_shldrDeformerKLOp_constrainee;

  // solving parent child constraint controls_shoulder_R_shoulder
  this.controls_shoulder_R_shoulder.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_shoulder_R_shoulder.xfo;

  // solving parent child constraint controls_shoulder_R_inputs
  this.controls_shoulder_R_inputs.globalXfo = this.controls_shoulder_R_shoulder.globalXfo * this.controls_shoulder_R_inputs.xfo;

  // solving PoseConstraint constraint controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint
  this.controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers[0] = this.controls_spine_M_spineEndOut.globalXfo;
  this.controls_shoulder_R_parentSpaceIn.globalXfo = this.controls_shoulder_R_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.compute(this.controls_shoulder_R_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_shoulder_R_outputs
  this.controls_shoulder_R_outputs.globalXfo = this.controls_shoulder_R_shoulder.globalXfo * this.controls_shoulder_R_outputs.xfo;

  // solving PoseConstraint constraint controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint
  this.controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_shoulder_R_parentSpaceIn.globalXfo;
  this.controls_shoulder_R_shldr01Space.globalXfo = this.controls_shoulder_R_shldr01_shldr01_To_parentSpace_PoseConstraint.compute(this.controls_shoulder_R_shldr01Space.globalXfo);

  // solving parent child constraint controls_shoulder_R_shldr
  this.controls_shoulder_R_shldr.globalXfo = this.controls_shoulder_R_shldr01Space.globalXfo * this.controls_shoulder_R_shldr.xfo;

  // solving PoseConstraint constraint controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint
  this.controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint.constrainers[0] = this.controls_shoulder_R_shldr.globalXfo;
  this.controls_shoulder_R_shldrOut.globalXfo = this.controls_shoulder_R_outputs_shldr_shldr_To_shldr_PoseConstraint.compute(this.controls_shoulder_R_shldrOut.globalXfo);

  // solving parent child constraint controls_shoulder_R_shldrEndSpace
  this.controls_shoulder_R_shldrEndSpace.globalXfo = this.controls_shoulder_R_shldr.globalXfo * this.controls_shoulder_R_shldrEndSpace.xfo;

  // solving PoseConstraint constraint controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint
  this.controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.constrainers[0] = this.controls_shoulder_R_shldrEndSpace.globalXfo;
  this.controls_shoulder_R_shldrEndOut.globalXfo = this.controls_shoulder_R_outputs_shldrEnd_shldrEnd_To_shldrEnd_PoseConstraint.compute(this.controls_shoulder_R_shldrEndOut.globalXfo);

  // solving parent child constraint deformers_shoulder_R_shoulder
  this.deformers_shoulder_R_shoulder.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_shoulder_R_shoulder.xfo;

  // solving KLSolver shoulder_R_shldrDeformerKLOp
  Boolean shoulder_R_shldrDeformerKLOp_drawDebug = this.controls_shoulder_R_inputs_inputs_drawDebug.value;
  Scalar shoulder_R_shldrDeformerKLOp_rigScale = this.controls_shoulder_R_inputs_inputs_rigScale.value;
  Mat44 shoulder_R_shldrDeformerKLOp_constrainer = this.controls_shoulder_R_shldrOut.globalXfo.toMat44();
  Mat44 shoulder_R_shldrDeformerKLOp_constrainee;
  this.shoulder_R_shldrDeformerKLOp.solve(
    shoulder_R_shldrDeformerKLOp_drawDebug,
    shoulder_R_shldrDeformerKLOp_rigScale,
    shoulder_R_shldrDeformerKLOp_constrainer,
    shoulder_R_shldrDeformerKLOp_constrainee
  );

  // retrieving value for deformers_shoulder_R_shldr from solver shoulder_R_shldrDeformerKLOp
  this.deformers_shoulder_R_shldr.globalXfo = shoulder_R_shldrDeformerKLOp_constrainee;

  // solving parent child constraint controls_leg_L_leg
  this.controls_leg_L_leg.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_leg_L_leg.xfo;

  // solving parent child constraint controls_leg_L_inputs
  this.controls_leg_L_inputs.globalXfo = this.controls_leg_L_leg.globalXfo * this.controls_leg_L_inputs.xfo;

  // solving PoseConstraint constraint controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_leg_L_globalSRTIn.globalXfo = this.controls_leg_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_leg_L_globalSRTIn.globalXfo);

  // solving PoseConstraint constraint controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint
  this.controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.constrainers[0] = this.controls_spine_M_pelvisOut.globalXfo;
  this.controls_leg_L_parentSpaceIn.globalXfo = this.controls_leg_L_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.compute(this.controls_leg_L_parentSpaceIn.globalXfo);

  // solving KLSolver foot_L_MfootFootRockerKLOp
  Boolean foot_L_MfootFootRockerKLOp_drawDebug = this.controls_foot_L_inputs_inputs_drawDebug.value;
  Scalar foot_L_MfootFootRockerKLOp_rigScale = this.controls_foot_L_inputs_inputs_rigScale.value;
  Boolean foot_L_MfootFootRockerKLOp_rightSide = this.controls_foot_L_inputs_inputs_rightSide.value;
  Scalar foot_L_MfootFootRockerKLOp_footRocker = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker.value;
  Scalar foot_L_MfootFootRockerKLOp_ballBreak = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak.value;
  Scalar foot_L_MfootFootRockerKLOp_footTilt = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt.value;

  // solving PoseConstraint constraint controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_foot_L_globalSRTIn.globalXfo = this.controls_foot_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_foot_L_globalSRTIn.globalXfo);

  // solving PoseConstraint constraint controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint
  this.controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_foot_L_globalSRTIn.globalXfo;
  this.controls_foot_L_foot01Space.globalXfo = this.controls_foot_L_foot01_foot01_To_globalSRT_PoseConstraint.compute(this.controls_foot_L_foot01Space.globalXfo);

  // solving parent child constraint controls_foot_L_foot2
  this.controls_foot_L_foot2.globalXfo = this.controls_foot_L_foot01Space.globalXfo * this.controls_foot_L_foot2.xfo;

  // solving parent child constraint controls_foot_L_ikGoalRef
  this.controls_foot_L_ikGoalRef.globalXfo = this.controls_foot_L_foot2.globalXfo * this.controls_foot_L_ikGoalRef.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_ikCtrl = this.controls_foot_L_ikGoalRef.globalXfo.toMat44();

  // solving parent child constraint controls_foot_L_heelPivot
  this.controls_foot_L_heelPivot.globalXfo = this.controls_foot_L_foot2.globalXfo * this.controls_foot_L_heelPivot.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_heelPivot = this.controls_foot_L_heelPivot.globalXfo.toMat44();

  // solving parent child constraint controls_foot_L_ballPivot
  this.controls_foot_L_ballPivot.globalXfo = this.controls_foot_L_foot2.globalXfo * this.controls_foot_L_ballPivot.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_ballPivot = this.controls_foot_L_ballPivot.globalXfo.toMat44();

  // solving parent child constraint controls_foot_L_ballTipPivot
  this.controls_foot_L_ballTipPivot.globalXfo = this.controls_foot_L_foot2.globalXfo * this.controls_foot_L_ballTipPivot.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_toePivot = this.controls_foot_L_ballTipPivot.globalXfo.toMat44();

  // solving parent child constraint controls_foot_L_footJoint
  this.controls_foot_L_footJoint.globalXfo = this.controls_foot_L_foot2.globalXfo * this.controls_foot_L_footJoint.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_footJointLoc = this.controls_foot_L_footJoint.globalXfo.toMat44();

  // solving parent child constraint controls_foot_L_ballJoint
  this.controls_foot_L_ballJoint.globalXfo = this.controls_foot_L_foot2.globalXfo * this.controls_foot_L_ballJoint.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_ballJointLoc = this.controls_foot_L_ballJoint.globalXfo.toMat44();

  // solving parent child constraint controls_foot_L_innerPivot
  this.controls_foot_L_innerPivot.globalXfo = this.controls_foot_L_foot2.globalXfo * this.controls_foot_L_innerPivot.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_innerPivotLoc = this.controls_foot_L_innerPivot.globalXfo.toMat44();

  // solving parent child constraint controls_foot_L_outerPivot
  this.controls_foot_L_outerPivot.globalXfo = this.controls_foot_L_foot2.globalXfo * this.controls_foot_L_outerPivot.xfo;
  Mat44 foot_L_MfootFootRockerKLOp_outerPivotLoc = this.controls_foot_L_outerPivot.globalXfo.toMat44();
  Mat44 foot_L_MfootFootRockerKLOp_footJoint;
  Mat44 foot_L_MfootFootRockerKLOp_ballJoint;
  Mat44 foot_L_MfootFootRockerKLOp_ikGoal;
  this.foot_L_MfootFootRockerKLOp.solve(
    foot_L_MfootFootRockerKLOp_drawDebug,
    foot_L_MfootFootRockerKLOp_rigScale,
    foot_L_MfootFootRockerKLOp_rightSide,
    foot_L_MfootFootRockerKLOp_footRocker,
    foot_L_MfootFootRockerKLOp_ballBreak,
    foot_L_MfootFootRockerKLOp_footTilt,
    foot_L_MfootFootRockerKLOp_ikCtrl,
    foot_L_MfootFootRockerKLOp_heelPivot,
    foot_L_MfootFootRockerKLOp_ballPivot,
    foot_L_MfootFootRockerKLOp_toePivot,
    foot_L_MfootFootRockerKLOp_footJointLoc,
    foot_L_MfootFootRockerKLOp_ballJointLoc,
    foot_L_MfootFootRockerKLOp_innerPivotLoc,
    foot_L_MfootFootRockerKLOp_outerPivotLoc,
    foot_L_MfootFootRockerKLOp_footJoint,
    foot_L_MfootFootRockerKLOp_ballJoint,
    foot_L_MfootFootRockerKLOp_ikGoal
  );

  // retrieving value for controls_foot_L_footRockerFoot_out from solver foot_L_MfootFootRockerKLOp
  this.controls_foot_L_footRockerFoot_out.globalXfo = foot_L_MfootFootRockerKLOp_footJoint;

  // retrieving value for controls_foot_L_footRockerBall_out from solver foot_L_MfootFootRockerKLOp
  this.controls_foot_L_footRockerBall_out.globalXfo = foot_L_MfootFootRockerKLOp_ballJoint;

  // retrieving value for controls_foot_L_ikgoalOut from solver foot_L_MfootFootRockerKLOp
  this.controls_foot_L_ikgoalOut.globalXfo = foot_L_MfootFootRockerKLOp_ikGoal;

  // solving PoseConstraint constraint controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint
  this.controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers[0] = this.controls_foot_L_ikgoalOut.globalXfo;
  this.controls_leg_L_ikGoalInputIn.globalXfo = this.controls_leg_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.compute(this.controls_leg_L_ikGoalInputIn.globalXfo);

  // solving parent child constraint controls_leg_L_outputs
  this.controls_leg_L_outputs.globalXfo = this.controls_leg_L_leg.globalXfo * this.controls_leg_L_outputs.xfo;

  // solving KLSolver leg_L_LlegIKFKTwoBoneIKSolver
  Boolean leg_L_LlegIKFKTwoBoneIKSolver_drawDebug = this.controls_leg_L_inputs_inputs_drawDebug.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_rigScale = this.controls_leg_L_inputs_inputs_rigScale.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_ikBlend = this.controls_leg_L_inputs_inputs_ikBlend.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_softDist = this.controls_leg_L_inputs_inputs_softDist.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_stretch = this.controls_leg_L_inputs_inputs_stretch.value;

  // solving PoseConstraint constraint controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint
  this.controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_leg_L_parentSpaceIn.globalXfo;
  this.controls_leg_L_upLeg01Space.globalXfo = this.controls_leg_L_upLeg01_upLeg01_To_parentSpace_PoseConstraint.compute(this.controls_leg_L_upLeg01Space.globalXfo);
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_root = this.controls_leg_L_upLeg01Space.globalXfo.toMat44();

  // solving parent child constraint controls_leg_L_upLeg
  this.controls_leg_L_upLeg.globalXfo = this.controls_leg_L_upLeg01Space.globalXfo * this.controls_leg_L_upLeg.xfo;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone0FK = this.controls_leg_L_upLeg.globalXfo.toMat44();

  // solving parent child constraint controls_leg_L_loLeg01Space
  this.controls_leg_L_loLeg01Space.globalXfo = this.controls_leg_L_upLeg.globalXfo * this.controls_leg_L_loLeg01Space.xfo;

  // solving parent child constraint controls_leg_L_loLeg
  this.controls_leg_L_loLeg.globalXfo = this.controls_leg_L_loLeg01Space.globalXfo * this.controls_leg_L_loLeg.xfo;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone1FK = this.controls_leg_L_loLeg.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint
  this.controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_leg_L_ikGoalInputIn.globalXfo;
  this.controls_leg_L_footIK.globalXfo = this.controls_leg_L_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.compute(this.controls_leg_L_footIK.globalXfo);
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_ikHandle = this.controls_leg_L_footIK.globalXfo.toMat44();

  // solving KLSolver leg_L_LlegUpVSpace_HierBlendSolver
  Boolean leg_L_LlegUpVSpace_HierBlendSolver_drawDebug = this.controls_leg_L_inputs_inputs_drawDebug.value;
  Scalar leg_L_LlegUpVSpace_HierBlendSolver_rigScale = this.controls_leg_L_inputs_inputs_rigScale.value;
  Mat44 leg_L_LlegUpVSpace_HierBlendSolver_hierA[](1);

  // solving PoseConstraint constraint controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint
  this.controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_leg_L_globalSRTIn.globalXfo;
  this.controls_leg_L_legIKMasterSpace.globalXfo = this.controls_leg_L_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.compute(this.controls_leg_L_legIKMasterSpace.globalXfo);
  leg_L_LlegUpVSpace_HierBlendSolver_hierA[0] = this.controls_leg_L_legIKMasterSpace.globalXfo.toMat44();
  Mat44 leg_L_LlegUpVSpace_HierBlendSolver_hierB[](1);

  // solving PoseConstraint constraint controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint
  this.controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_leg_L_ikGoalInputIn.globalXfo;
  this.controls_leg_L_legUpVIKSpace.globalXfo = this.controls_leg_L_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.compute(this.controls_leg_L_legUpVIKSpace.globalXfo);
  leg_L_LlegUpVSpace_HierBlendSolver_hierB[0] = this.controls_leg_L_legUpVIKSpace.globalXfo.toMat44();
  Integer leg_L_LlegUpVSpace_HierBlendSolver_parentIndexes[](1);
  leg_L_LlegUpVSpace_HierBlendSolver_parentIndexes[0] = -1;
  Scalar leg_L_LlegUpVSpace_HierBlendSolver_blend = this.controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace.value;
  Mat44 leg_L_LlegUpVSpace_HierBlendSolver_hierOut[](1);
  this.leg_L_LlegUpVSpace_HierBlendSolver.solve(
    leg_L_LlegUpVSpace_HierBlendSolver_drawDebug,
    leg_L_LlegUpVSpace_HierBlendSolver_rigScale,
    leg_L_LlegUpVSpace_HierBlendSolver_hierA,
    leg_L_LlegUpVSpace_HierBlendSolver_hierB,
    leg_L_LlegUpVSpace_HierBlendSolver_parentIndexes,
    leg_L_LlegUpVSpace_HierBlendSolver_blend,
    leg_L_LlegUpVSpace_HierBlendSolver_hierOut
  );

  // retrieving value for controls_leg_L_legUpV01Space from solver leg_L_LlegUpVSpace_HierBlendSolver
  this.controls_leg_L_legUpV01Space.globalXfo = leg_L_LlegUpVSpace_HierBlendSolver_hierOut[0];

  // solving parent child constraint controls_leg_L_legUpV
  this.controls_leg_L_legUpV.globalXfo = this.controls_leg_L_legUpV01Space.globalXfo * this.controls_leg_L_legUpV.xfo;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_upV = this.controls_leg_L_legUpV.globalXfo.toMat44();
  UInt32 leg_L_LlegIKFKTwoBoneIKSolver_boneAxis = 0;
  UInt32 leg_L_LlegIKFKTwoBoneIKSolver_upAxis = 2;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_bone0Len = this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value;
  Scalar leg_L_LlegIKFKTwoBoneIKSolver_bone1Len = this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone0Out;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone1Out;
  Mat44 leg_L_LlegIKFKTwoBoneIKSolver_bone2Out;
  this.leg_L_LlegIKFKTwoBoneIKSolver.solve(
    leg_L_LlegIKFKTwoBoneIKSolver_drawDebug,
    leg_L_LlegIKFKTwoBoneIKSolver_rigScale,
    leg_L_LlegIKFKTwoBoneIKSolver_ikBlend,
    leg_L_LlegIKFKTwoBoneIKSolver_softDist,
    leg_L_LlegIKFKTwoBoneIKSolver_stretch,
    leg_L_LlegIKFKTwoBoneIKSolver_root,
    leg_L_LlegIKFKTwoBoneIKSolver_bone0FK,
    leg_L_LlegIKFKTwoBoneIKSolver_bone1FK,
    leg_L_LlegIKFKTwoBoneIKSolver_ikHandle,
    leg_L_LlegIKFKTwoBoneIKSolver_upV,
    leg_L_LlegIKFKTwoBoneIKSolver_boneAxis,
    leg_L_LlegIKFKTwoBoneIKSolver_upAxis,
    leg_L_LlegIKFKTwoBoneIKSolver_bone0Len,
    leg_L_LlegIKFKTwoBoneIKSolver_bone1Len,
    leg_L_LlegIKFKTwoBoneIKSolver_bone0Out,
    leg_L_LlegIKFKTwoBoneIKSolver_bone1Out,
    leg_L_LlegIKFKTwoBoneIKSolver_bone2Out
  );

  // retrieving value for controls_leg_L_uplimbOut from solver leg_L_LlegIKFKTwoBoneIKSolver
  this.controls_leg_L_uplimbOut.globalXfo = leg_L_LlegIKFKTwoBoneIKSolver_bone0Out;

  // retrieving value for controls_leg_L_lolimbOut from solver leg_L_LlegIKFKTwoBoneIKSolver
  this.controls_leg_L_lolimbOut.globalXfo = leg_L_LlegIKFKTwoBoneIKSolver_bone1Out;

  // retrieving value for controls_leg_L_endlimbOut from solver leg_L_LlegIKFKTwoBoneIKSolver
  this.controls_leg_L_endlimbOut.globalXfo = leg_L_LlegIKFKTwoBoneIKSolver_bone2Out;

  // solving PoseConstraint constraint controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint
  this.controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_leg_L_globalSRTIn.globalXfo;
  this.controls_leg_L_footIKSpace.globalXfo = this.controls_leg_L_footIK_footIK_To_globalSRT_PoseConstraint.compute(this.controls_leg_L_footIKSpace.globalXfo);

  // solving parent child constraint deformers_leg_L_leg
  this.deformers_leg_L_leg.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_leg_L_leg.xfo;

  // solving KLSolver leg_L_LlegDeformerJointsKLOp
  Boolean leg_L_LlegDeformerJointsKLOp_drawDebug = this.controls_leg_L_inputs_inputs_drawDebug.value;
  Scalar leg_L_LlegDeformerJointsKLOp_rigScale = this.controls_leg_L_inputs_inputs_rigScale.value;
  Mat44 leg_L_LlegDeformerJointsKLOp_constrainers[](3);
  leg_L_LlegDeformerJointsKLOp_constrainers[0] = this.controls_leg_L_uplimbOut.globalXfo.toMat44();
  leg_L_LlegDeformerJointsKLOp_constrainers[1] = this.controls_leg_L_lolimbOut.globalXfo.toMat44();
  leg_L_LlegDeformerJointsKLOp_constrainers[2] = this.controls_leg_L_endlimbOut.globalXfo.toMat44();
  Mat44 leg_L_LlegDeformerJointsKLOp_constrainees[](3);
  this.leg_L_LlegDeformerJointsKLOp.solve(
    leg_L_LlegDeformerJointsKLOp_drawDebug,
    leg_L_LlegDeformerJointsKLOp_rigScale,
    leg_L_LlegDeformerJointsKLOp_constrainers,
    leg_L_LlegDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_leg_L_upLeg from solver leg_L_LlegDeformerJointsKLOp
  this.deformers_leg_L_upLeg.globalXfo = leg_L_LlegDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_leg_L_loLeg from solver leg_L_LlegDeformerJointsKLOp
  this.deformers_leg_L_loLeg.globalXfo = leg_L_LlegDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_leg_L_legend from solver leg_L_LlegDeformerJointsKLOp
  this.deformers_leg_L_legend.globalXfo = leg_L_LlegDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_foot_L_foot
  this.controls_foot_L_foot.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_foot_L_foot.xfo;

  // solving parent child constraint controls_foot_L_inputs
  this.controls_foot_L_inputs.globalXfo = this.controls_foot_L_foot.globalXfo * this.controls_foot_L_inputs.xfo;

  // solving PoseConstraint constraint controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint
  this.controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers[0] = this.controls_leg_L_endlimbOut.globalXfo;
  this.controls_foot_L_parentSpaceIn.globalXfo = this.controls_foot_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.compute(this.controls_foot_L_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_foot_L_outputs
  this.controls_foot_L_outputs.globalXfo = this.controls_foot_L_foot.globalXfo * this.controls_foot_L_outputs.xfo;

  // solving KLSolver foot_L_MfootIKFootBlendKLOp
  Boolean foot_L_MfootIKFootBlendKLOp_drawDebug = this.controls_foot_L_inputs_inputs_drawDebug.value;
  Scalar foot_L_MfootIKFootBlendKLOp_rigScale = this.controls_foot_L_inputs_inputs_rigScale.value;
  Scalar foot_L_MfootIKFootBlendKLOp_blend = this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK.value;
  Mat44 foot_L_MfootIKFootBlendKLOp_ikFoot = this.controls_foot_L_footRockerFoot_out.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint
  this.controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_foot_L_parentSpaceIn.globalXfo;
  this.controls_foot_L_foot02Space.globalXfo = this.controls_foot_L_foot02_foot02_To_parentSpace_PoseConstraint.compute(this.controls_foot_L_foot02Space.globalXfo);

  // solving parent child constraint controls_foot_L_foot3
  this.controls_foot_L_foot3.globalXfo = this.controls_foot_L_foot02Space.globalXfo * this.controls_foot_L_foot3.xfo;
  Mat44 foot_L_MfootIKFootBlendKLOp_fkFoot = this.controls_foot_L_foot3.globalXfo.toMat44();
  Mat44 foot_L_MfootIKFootBlendKLOp_ikBall = this.controls_foot_L_footRockerBall_out.globalXfo.toMat44();

  // solving parent child constraint controls_foot_L_ball01Space
  this.controls_foot_L_ball01Space.globalXfo = this.controls_foot_L_foot3.globalXfo * this.controls_foot_L_ball01Space.xfo;

  // solving parent child constraint controls_foot_L_ball
  this.controls_foot_L_ball.globalXfo = this.controls_foot_L_ball01Space.globalXfo * this.controls_foot_L_ball.xfo;
  Mat44 foot_L_MfootIKFootBlendKLOp_fkBall = this.controls_foot_L_ball.globalXfo.toMat44();
  Mat44 foot_L_MfootIKFootBlendKLOp_foot;
  Mat44 foot_L_MfootIKFootBlendKLOp_ball;
  this.foot_L_MfootIKFootBlendKLOp.solve(
    foot_L_MfootIKFootBlendKLOp_drawDebug,
    foot_L_MfootIKFootBlendKLOp_rigScale,
    foot_L_MfootIKFootBlendKLOp_blend,
    foot_L_MfootIKFootBlendKLOp_ikFoot,
    foot_L_MfootIKFootBlendKLOp_fkFoot,
    foot_L_MfootIKFootBlendKLOp_ikBall,
    foot_L_MfootIKFootBlendKLOp_fkBall,
    foot_L_MfootIKFootBlendKLOp_foot,
    foot_L_MfootIKFootBlendKLOp_ball
  );

  // retrieving value for controls_foot_L_IKFootBlendKLOpFoot_out from solver foot_L_MfootIKFootBlendKLOp
  this.controls_foot_L_IKFootBlendKLOpFoot_out.globalXfo = foot_L_MfootIKFootBlendKLOp_foot;

  // retrieving value for controls_foot_L_IKFootBlendKLOpBall_out from solver foot_L_MfootIKFootBlendKLOp
  this.controls_foot_L_IKFootBlendKLOpBall_out.globalXfo = foot_L_MfootIKFootBlendKLOp_ball;

  // solving PoseConstraint constraint controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint
  this.controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.constrainers[0] = this.controls_foot_L_IKFootBlendKLOpFoot_out.globalXfo;
  this.controls_foot_L_footOut.globalXfo = this.controls_foot_L_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.compute(this.controls_foot_L_footOut.globalXfo);

  // solving PoseConstraint constraint controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint
  this.controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.constrainers[0] = this.controls_foot_L_IKFootBlendKLOpBall_out.globalXfo;
  this.controls_foot_L_ballOut.globalXfo = this.controls_foot_L_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.compute(this.controls_foot_L_ballOut.globalXfo);

  // solving parent child constraint deformers_foot_L_foot
  this.deformers_foot_L_foot.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_foot_L_foot.xfo;

  // solving KLSolver foot_L_MfootDeformerJointsKLOp
  Boolean foot_L_MfootDeformerJointsKLOp_drawDebug = this.controls_foot_L_inputs_inputs_drawDebug.value;
  Scalar foot_L_MfootDeformerJointsKLOp_rigScale = this.controls_foot_L_inputs_inputs_rigScale.value;
  Mat44 foot_L_MfootDeformerJointsKLOp_constrainers[](2);
  foot_L_MfootDeformerJointsKLOp_constrainers[0] = this.controls_foot_L_footOut.globalXfo.toMat44();
  foot_L_MfootDeformerJointsKLOp_constrainers[1] = this.controls_foot_L_ballOut.globalXfo.toMat44();
  Mat44 foot_L_MfootDeformerJointsKLOp_constrainees[](2);
  this.foot_L_MfootDeformerJointsKLOp.solve(
    foot_L_MfootDeformerJointsKLOp_drawDebug,
    foot_L_MfootDeformerJointsKLOp_rigScale,
    foot_L_MfootDeformerJointsKLOp_constrainers,
    foot_L_MfootDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_foot_L_foot2 from solver foot_L_MfootDeformerJointsKLOp
  this.deformers_foot_L_foot2.globalXfo = foot_L_MfootDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_foot_L_ball from solver foot_L_MfootDeformerJointsKLOp
  this.deformers_foot_L_ball.globalXfo = foot_L_MfootDeformerJointsKLOp_constrainees[1];

  // solving parent child constraint controls_foot_R_foot
  this.controls_foot_R_foot.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_foot_R_foot.xfo;

  // solving parent child constraint controls_foot_R_inputs
  this.controls_foot_R_inputs.globalXfo = this.controls_foot_R_foot.globalXfo * this.controls_foot_R_inputs.xfo;

  // solving PoseConstraint constraint controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_foot_R_globalSRTIn.globalXfo = this.controls_foot_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_foot_R_globalSRTIn.globalXfo);

  // solving KLSolver leg_R_RlegIKFKTwoBoneIKSolver
  Boolean leg_R_RlegIKFKTwoBoneIKSolver_drawDebug = this.controls_leg_R_inputs_inputs_drawDebug.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_rigScale = this.controls_leg_R_inputs_inputs_rigScale.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_ikBlend = this.controls_leg_R_inputs_inputs_ikBlend.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_softDist = this.controls_leg_R_inputs_inputs_softDist.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_stretch = this.controls_leg_R_inputs_inputs_stretch.value;

  // solving PoseConstraint constraint controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint
  this.controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.constrainers[0] = this.controls_spine_M_pelvisOut.globalXfo;
  this.controls_leg_R_parentSpaceIn.globalXfo = this.controls_leg_R_inputs_parentSpace_parentSpace_To_pelvis_PoseConstraint.compute(this.controls_leg_R_parentSpaceIn.globalXfo);

  // solving PoseConstraint constraint controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint
  this.controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_leg_R_parentSpaceIn.globalXfo;
  this.controls_leg_R_upLeg01Space.globalXfo = this.controls_leg_R_upLeg01_upLeg01_To_parentSpace_PoseConstraint.compute(this.controls_leg_R_upLeg01Space.globalXfo);
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_root = this.controls_leg_R_upLeg01Space.globalXfo.toMat44();

  // solving parent child constraint controls_leg_R_upLeg
  this.controls_leg_R_upLeg.globalXfo = this.controls_leg_R_upLeg01Space.globalXfo * this.controls_leg_R_upLeg.xfo;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone0FK = this.controls_leg_R_upLeg.globalXfo.toMat44();

  // solving parent child constraint controls_leg_R_loLeg01Space
  this.controls_leg_R_loLeg01Space.globalXfo = this.controls_leg_R_upLeg.globalXfo * this.controls_leg_R_loLeg01Space.xfo;

  // solving parent child constraint controls_leg_R_loLeg
  this.controls_leg_R_loLeg.globalXfo = this.controls_leg_R_loLeg01Space.globalXfo * this.controls_leg_R_loLeg.xfo;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone1FK = this.controls_leg_R_loLeg.globalXfo.toMat44();

  // solving KLSolver foot_R_MfootFootRockerKLOp
  Boolean foot_R_MfootFootRockerKLOp_drawDebug = this.controls_foot_R_inputs_inputs_drawDebug.value;
  Scalar foot_R_MfootFootRockerKLOp_rigScale = this.controls_foot_R_inputs_inputs_rigScale.value;
  Boolean foot_R_MfootFootRockerKLOp_rightSide = this.controls_foot_R_inputs_inputs_rightSide.value;
  Scalar foot_R_MfootFootRockerKLOp_footRocker = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker.value;
  Scalar foot_R_MfootFootRockerKLOp_ballBreak = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak.value;
  Scalar foot_R_MfootFootRockerKLOp_footTilt = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt.value;

  // solving PoseConstraint constraint controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint
  this.controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_foot_R_globalSRTIn.globalXfo;
  this.controls_foot_R_foot01Space.globalXfo = this.controls_foot_R_foot01_foot01_To_globalSRT_PoseConstraint.compute(this.controls_foot_R_foot01Space.globalXfo);

  // solving parent child constraint controls_foot_R_foot2
  this.controls_foot_R_foot2.globalXfo = this.controls_foot_R_foot01Space.globalXfo * this.controls_foot_R_foot2.xfo;

  // solving parent child constraint controls_foot_R_ikGoalRef
  this.controls_foot_R_ikGoalRef.globalXfo = this.controls_foot_R_foot2.globalXfo * this.controls_foot_R_ikGoalRef.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_ikCtrl = this.controls_foot_R_ikGoalRef.globalXfo.toMat44();

  // solving parent child constraint controls_foot_R_heelPivot
  this.controls_foot_R_heelPivot.globalXfo = this.controls_foot_R_foot2.globalXfo * this.controls_foot_R_heelPivot.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_heelPivot = this.controls_foot_R_heelPivot.globalXfo.toMat44();

  // solving parent child constraint controls_foot_R_ballPivot
  this.controls_foot_R_ballPivot.globalXfo = this.controls_foot_R_foot2.globalXfo * this.controls_foot_R_ballPivot.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_ballPivot = this.controls_foot_R_ballPivot.globalXfo.toMat44();

  // solving parent child constraint controls_foot_R_ballTipPivot
  this.controls_foot_R_ballTipPivot.globalXfo = this.controls_foot_R_foot2.globalXfo * this.controls_foot_R_ballTipPivot.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_toePivot = this.controls_foot_R_ballTipPivot.globalXfo.toMat44();

  // solving parent child constraint controls_foot_R_footJoint
  this.controls_foot_R_footJoint.globalXfo = this.controls_foot_R_foot2.globalXfo * this.controls_foot_R_footJoint.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_footJointLoc = this.controls_foot_R_footJoint.globalXfo.toMat44();

  // solving parent child constraint controls_foot_R_ballJoint
  this.controls_foot_R_ballJoint.globalXfo = this.controls_foot_R_foot2.globalXfo * this.controls_foot_R_ballJoint.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_ballJointLoc = this.controls_foot_R_ballJoint.globalXfo.toMat44();

  // solving parent child constraint controls_foot_R_innerPivot
  this.controls_foot_R_innerPivot.globalXfo = this.controls_foot_R_foot2.globalXfo * this.controls_foot_R_innerPivot.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_innerPivotLoc = this.controls_foot_R_innerPivot.globalXfo.toMat44();

  // solving parent child constraint controls_foot_R_outerPivot
  this.controls_foot_R_outerPivot.globalXfo = this.controls_foot_R_foot2.globalXfo * this.controls_foot_R_outerPivot.xfo;
  Mat44 foot_R_MfootFootRockerKLOp_outerPivotLoc = this.controls_foot_R_outerPivot.globalXfo.toMat44();
  Mat44 foot_R_MfootFootRockerKLOp_footJoint;
  Mat44 foot_R_MfootFootRockerKLOp_ballJoint;
  Mat44 foot_R_MfootFootRockerKLOp_ikGoal;
  this.foot_R_MfootFootRockerKLOp.solve(
    foot_R_MfootFootRockerKLOp_drawDebug,
    foot_R_MfootFootRockerKLOp_rigScale,
    foot_R_MfootFootRockerKLOp_rightSide,
    foot_R_MfootFootRockerKLOp_footRocker,
    foot_R_MfootFootRockerKLOp_ballBreak,
    foot_R_MfootFootRockerKLOp_footTilt,
    foot_R_MfootFootRockerKLOp_ikCtrl,
    foot_R_MfootFootRockerKLOp_heelPivot,
    foot_R_MfootFootRockerKLOp_ballPivot,
    foot_R_MfootFootRockerKLOp_toePivot,
    foot_R_MfootFootRockerKLOp_footJointLoc,
    foot_R_MfootFootRockerKLOp_ballJointLoc,
    foot_R_MfootFootRockerKLOp_innerPivotLoc,
    foot_R_MfootFootRockerKLOp_outerPivotLoc,
    foot_R_MfootFootRockerKLOp_footJoint,
    foot_R_MfootFootRockerKLOp_ballJoint,
    foot_R_MfootFootRockerKLOp_ikGoal
  );

  // retrieving value for controls_foot_R_footRockerFoot_out from solver foot_R_MfootFootRockerKLOp
  this.controls_foot_R_footRockerFoot_out.globalXfo = foot_R_MfootFootRockerKLOp_footJoint;

  // retrieving value for controls_foot_R_footRockerBall_out from solver foot_R_MfootFootRockerKLOp
  this.controls_foot_R_footRockerBall_out.globalXfo = foot_R_MfootFootRockerKLOp_ballJoint;

  // retrieving value for controls_foot_R_ikgoalOut from solver foot_R_MfootFootRockerKLOp
  this.controls_foot_R_ikgoalOut.globalXfo = foot_R_MfootFootRockerKLOp_ikGoal;

  // solving PoseConstraint constraint controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint
  this.controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers[0] = this.controls_foot_R_ikgoalOut.globalXfo;
  this.controls_leg_R_ikGoalInputIn.globalXfo = this.controls_leg_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.compute(this.controls_leg_R_ikGoalInputIn.globalXfo);

  // solving PoseConstraint constraint controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint
  this.controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_leg_R_ikGoalInputIn.globalXfo;
  this.controls_leg_R_footIK.globalXfo = this.controls_leg_R_footIK_footIK_footIK_To_ikGoalInput_PoseConstraint.compute(this.controls_leg_R_footIK.globalXfo);
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_ikHandle = this.controls_leg_R_footIK.globalXfo.toMat44();

  // solving KLSolver leg_R_RlegUpVSpace_HierBlendSolver
  Boolean leg_R_RlegUpVSpace_HierBlendSolver_drawDebug = this.controls_leg_R_inputs_inputs_drawDebug.value;
  Scalar leg_R_RlegUpVSpace_HierBlendSolver_rigScale = this.controls_leg_R_inputs_inputs_rigScale.value;
  Mat44 leg_R_RlegUpVSpace_HierBlendSolver_hierA[](1);

  // solving PoseConstraint constraint controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_leg_R_globalSRTIn.globalXfo = this.controls_leg_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_leg_R_globalSRTIn.globalXfo);

  // solving PoseConstraint constraint controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint
  this.controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_leg_R_globalSRTIn.globalXfo;
  this.controls_leg_R_legIKMasterSpace.globalXfo = this.controls_leg_R_legIKMaster_legIKMaster_To_globalSRT_PoseConstraint.compute(this.controls_leg_R_legIKMasterSpace.globalXfo);
  leg_R_RlegUpVSpace_HierBlendSolver_hierA[0] = this.controls_leg_R_legIKMasterSpace.globalXfo.toMat44();
  Mat44 leg_R_RlegUpVSpace_HierBlendSolver_hierB[](1);

  // solving PoseConstraint constraint controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint
  this.controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_leg_R_ikGoalInputIn.globalXfo;
  this.controls_leg_R_legUpVIKSpace.globalXfo = this.controls_leg_R_legUpVIK_legUpVIK_To_ikGoalInput_PoseConstraint.compute(this.controls_leg_R_legUpVIKSpace.globalXfo);
  leg_R_RlegUpVSpace_HierBlendSolver_hierB[0] = this.controls_leg_R_legUpVIKSpace.globalXfo.toMat44();
  Integer leg_R_RlegUpVSpace_HierBlendSolver_parentIndexes[](1);
  leg_R_RlegUpVSpace_HierBlendSolver_parentIndexes[0] = -1;
  Scalar leg_R_RlegUpVSpace_HierBlendSolver_blend = this.controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace.value;
  Mat44 leg_R_RlegUpVSpace_HierBlendSolver_hierOut[](1);
  this.leg_R_RlegUpVSpace_HierBlendSolver.solve(
    leg_R_RlegUpVSpace_HierBlendSolver_drawDebug,
    leg_R_RlegUpVSpace_HierBlendSolver_rigScale,
    leg_R_RlegUpVSpace_HierBlendSolver_hierA,
    leg_R_RlegUpVSpace_HierBlendSolver_hierB,
    leg_R_RlegUpVSpace_HierBlendSolver_parentIndexes,
    leg_R_RlegUpVSpace_HierBlendSolver_blend,
    leg_R_RlegUpVSpace_HierBlendSolver_hierOut
  );

  // retrieving value for controls_leg_R_legUpV01Space from solver leg_R_RlegUpVSpace_HierBlendSolver
  this.controls_leg_R_legUpV01Space.globalXfo = leg_R_RlegUpVSpace_HierBlendSolver_hierOut[0];

  // solving parent child constraint controls_leg_R_legUpV
  this.controls_leg_R_legUpV.globalXfo = this.controls_leg_R_legUpV01Space.globalXfo * this.controls_leg_R_legUpV.xfo;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_upV = this.controls_leg_R_legUpV.globalXfo.toMat44();
  UInt32 leg_R_RlegIKFKTwoBoneIKSolver_boneAxis = 3;
  UInt32 leg_R_RlegIKFKTwoBoneIKSolver_upAxis = 5;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_bone0Len = this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value;
  Scalar leg_R_RlegIKFKTwoBoneIKSolver_bone1Len = this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone0Out;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone1Out;
  Mat44 leg_R_RlegIKFKTwoBoneIKSolver_bone2Out;
  this.leg_R_RlegIKFKTwoBoneIKSolver.solve(
    leg_R_RlegIKFKTwoBoneIKSolver_drawDebug,
    leg_R_RlegIKFKTwoBoneIKSolver_rigScale,
    leg_R_RlegIKFKTwoBoneIKSolver_ikBlend,
    leg_R_RlegIKFKTwoBoneIKSolver_softDist,
    leg_R_RlegIKFKTwoBoneIKSolver_stretch,
    leg_R_RlegIKFKTwoBoneIKSolver_root,
    leg_R_RlegIKFKTwoBoneIKSolver_bone0FK,
    leg_R_RlegIKFKTwoBoneIKSolver_bone1FK,
    leg_R_RlegIKFKTwoBoneIKSolver_ikHandle,
    leg_R_RlegIKFKTwoBoneIKSolver_upV,
    leg_R_RlegIKFKTwoBoneIKSolver_boneAxis,
    leg_R_RlegIKFKTwoBoneIKSolver_upAxis,
    leg_R_RlegIKFKTwoBoneIKSolver_bone0Len,
    leg_R_RlegIKFKTwoBoneIKSolver_bone1Len,
    leg_R_RlegIKFKTwoBoneIKSolver_bone0Out,
    leg_R_RlegIKFKTwoBoneIKSolver_bone1Out,
    leg_R_RlegIKFKTwoBoneIKSolver_bone2Out
  );

  // retrieving value for controls_leg_R_uplimbOut from solver leg_R_RlegIKFKTwoBoneIKSolver
  this.controls_leg_R_uplimbOut.globalXfo = leg_R_RlegIKFKTwoBoneIKSolver_bone0Out;

  // retrieving value for controls_leg_R_lolimbOut from solver leg_R_RlegIKFKTwoBoneIKSolver
  this.controls_leg_R_lolimbOut.globalXfo = leg_R_RlegIKFKTwoBoneIKSolver_bone1Out;

  // retrieving value for controls_leg_R_endlimbOut from solver leg_R_RlegIKFKTwoBoneIKSolver
  this.controls_leg_R_endlimbOut.globalXfo = leg_R_RlegIKFKTwoBoneIKSolver_bone2Out;

  // solving PoseConstraint constraint controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint
  this.controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers[0] = this.controls_leg_R_endlimbOut.globalXfo;
  this.controls_foot_R_parentSpaceIn.globalXfo = this.controls_foot_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.compute(this.controls_foot_R_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_foot_R_outputs
  this.controls_foot_R_outputs.globalXfo = this.controls_foot_R_foot.globalXfo * this.controls_foot_R_outputs.xfo;

  // solving KLSolver foot_R_MfootIKFootBlendKLOp
  Boolean foot_R_MfootIKFootBlendKLOp_drawDebug = this.controls_foot_R_inputs_inputs_drawDebug.value;
  Scalar foot_R_MfootIKFootBlendKLOp_rigScale = this.controls_foot_R_inputs_inputs_rigScale.value;
  Scalar foot_R_MfootIKFootBlendKLOp_blend = this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK.value;
  Mat44 foot_R_MfootIKFootBlendKLOp_ikFoot = this.controls_foot_R_footRockerFoot_out.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint
  this.controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_foot_R_parentSpaceIn.globalXfo;
  this.controls_foot_R_foot02Space.globalXfo = this.controls_foot_R_foot02_foot02_To_parentSpace_PoseConstraint.compute(this.controls_foot_R_foot02Space.globalXfo);

  // solving parent child constraint controls_foot_R_foot3
  this.controls_foot_R_foot3.globalXfo = this.controls_foot_R_foot02Space.globalXfo * this.controls_foot_R_foot3.xfo;
  Mat44 foot_R_MfootIKFootBlendKLOp_fkFoot = this.controls_foot_R_foot3.globalXfo.toMat44();
  Mat44 foot_R_MfootIKFootBlendKLOp_ikBall = this.controls_foot_R_footRockerBall_out.globalXfo.toMat44();

  // solving parent child constraint controls_foot_R_ball01Space
  this.controls_foot_R_ball01Space.globalXfo = this.controls_foot_R_foot3.globalXfo * this.controls_foot_R_ball01Space.xfo;

  // solving parent child constraint controls_foot_R_ball
  this.controls_foot_R_ball.globalXfo = this.controls_foot_R_ball01Space.globalXfo * this.controls_foot_R_ball.xfo;
  Mat44 foot_R_MfootIKFootBlendKLOp_fkBall = this.controls_foot_R_ball.globalXfo.toMat44();
  Mat44 foot_R_MfootIKFootBlendKLOp_foot;
  Mat44 foot_R_MfootIKFootBlendKLOp_ball;
  this.foot_R_MfootIKFootBlendKLOp.solve(
    foot_R_MfootIKFootBlendKLOp_drawDebug,
    foot_R_MfootIKFootBlendKLOp_rigScale,
    foot_R_MfootIKFootBlendKLOp_blend,
    foot_R_MfootIKFootBlendKLOp_ikFoot,
    foot_R_MfootIKFootBlendKLOp_fkFoot,
    foot_R_MfootIKFootBlendKLOp_ikBall,
    foot_R_MfootIKFootBlendKLOp_fkBall,
    foot_R_MfootIKFootBlendKLOp_foot,
    foot_R_MfootIKFootBlendKLOp_ball
  );

  // retrieving value for controls_foot_R_IKFootBlendKLOpFoot_out from solver foot_R_MfootIKFootBlendKLOp
  this.controls_foot_R_IKFootBlendKLOpFoot_out.globalXfo = foot_R_MfootIKFootBlendKLOp_foot;

  // retrieving value for controls_foot_R_IKFootBlendKLOpBall_out from solver foot_R_MfootIKFootBlendKLOp
  this.controls_foot_R_IKFootBlendKLOpBall_out.globalXfo = foot_R_MfootIKFootBlendKLOp_ball;

  // solving PoseConstraint constraint controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint
  this.controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.constrainers[0] = this.controls_foot_R_IKFootBlendKLOpFoot_out.globalXfo;
  this.controls_foot_R_footOut.globalXfo = this.controls_foot_R_outputs_foot_foot_To_IKFootBlendKLOpFoot_out_PoseConstraint.compute(this.controls_foot_R_footOut.globalXfo);

  // solving PoseConstraint constraint controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint
  this.controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.constrainers[0] = this.controls_foot_R_IKFootBlendKLOpBall_out.globalXfo;
  this.controls_foot_R_ballOut.globalXfo = this.controls_foot_R_outputs_ball_ball_To_IKFootBlendKLOpBall_out_PoseConstraint.compute(this.controls_foot_R_ballOut.globalXfo);

  // solving parent child constraint deformers_foot_R_foot
  this.deformers_foot_R_foot.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_foot_R_foot.xfo;

  // solving KLSolver foot_R_MfootDeformerJointsKLOp
  Boolean foot_R_MfootDeformerJointsKLOp_drawDebug = this.controls_foot_R_inputs_inputs_drawDebug.value;
  Scalar foot_R_MfootDeformerJointsKLOp_rigScale = this.controls_foot_R_inputs_inputs_rigScale.value;
  Mat44 foot_R_MfootDeformerJointsKLOp_constrainers[](2);
  foot_R_MfootDeformerJointsKLOp_constrainers[0] = this.controls_foot_R_footOut.globalXfo.toMat44();
  foot_R_MfootDeformerJointsKLOp_constrainers[1] = this.controls_foot_R_ballOut.globalXfo.toMat44();
  Mat44 foot_R_MfootDeformerJointsKLOp_constrainees[](2);
  this.foot_R_MfootDeformerJointsKLOp.solve(
    foot_R_MfootDeformerJointsKLOp_drawDebug,
    foot_R_MfootDeformerJointsKLOp_rigScale,
    foot_R_MfootDeformerJointsKLOp_constrainers,
    foot_R_MfootDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_foot_R_foot2 from solver foot_R_MfootDeformerJointsKLOp
  this.deformers_foot_R_foot2.globalXfo = foot_R_MfootDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_foot_R_ball from solver foot_R_MfootDeformerJointsKLOp
  this.deformers_foot_R_ball.globalXfo = foot_R_MfootDeformerJointsKLOp_constrainees[1];

  // solving parent child constraint controls_leg_R_leg
  this.controls_leg_R_leg.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_leg_R_leg.xfo;

  // solving parent child constraint controls_leg_R_inputs
  this.controls_leg_R_inputs.globalXfo = this.controls_leg_R_leg.globalXfo * this.controls_leg_R_inputs.xfo;

  // solving parent child constraint controls_leg_R_outputs
  this.controls_leg_R_outputs.globalXfo = this.controls_leg_R_leg.globalXfo * this.controls_leg_R_outputs.xfo;

  // solving PoseConstraint constraint controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint
  this.controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_leg_R_globalSRTIn.globalXfo;
  this.controls_leg_R_footIKSpace.globalXfo = this.controls_leg_R_footIK_footIK_To_globalSRT_PoseConstraint.compute(this.controls_leg_R_footIKSpace.globalXfo);

  // solving parent child constraint deformers_leg_R_leg
  this.deformers_leg_R_leg.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_leg_R_leg.xfo;

  // solving KLSolver leg_R_RlegDeformerJointsKLOp
  Boolean leg_R_RlegDeformerJointsKLOp_drawDebug = this.controls_leg_R_inputs_inputs_drawDebug.value;
  Scalar leg_R_RlegDeformerJointsKLOp_rigScale = this.controls_leg_R_inputs_inputs_rigScale.value;
  Mat44 leg_R_RlegDeformerJointsKLOp_constrainers[](3);
  leg_R_RlegDeformerJointsKLOp_constrainers[0] = this.controls_leg_R_uplimbOut.globalXfo.toMat44();
  leg_R_RlegDeformerJointsKLOp_constrainers[1] = this.controls_leg_R_lolimbOut.globalXfo.toMat44();
  leg_R_RlegDeformerJointsKLOp_constrainers[2] = this.controls_leg_R_endlimbOut.globalXfo.toMat44();
  Mat44 leg_R_RlegDeformerJointsKLOp_constrainees[](3);
  this.leg_R_RlegDeformerJointsKLOp.solve(
    leg_R_RlegDeformerJointsKLOp_drawDebug,
    leg_R_RlegDeformerJointsKLOp_rigScale,
    leg_R_RlegDeformerJointsKLOp_constrainers,
    leg_R_RlegDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_leg_R_upLeg from solver leg_R_RlegDeformerJointsKLOp
  this.deformers_leg_R_upLeg.globalXfo = leg_R_RlegDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_leg_R_loLeg from solver leg_R_RlegDeformerJointsKLOp
  this.deformers_leg_R_loLeg.globalXfo = leg_R_RlegDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_leg_R_legend from solver leg_R_RlegDeformerJointsKLOp
  this.deformers_leg_R_legend.globalXfo = leg_R_RlegDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_arm_R_arm
  this.controls_arm_R_arm.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_arm_R_arm.xfo;

  // solving parent child constraint controls_arm_R_inputs
  this.controls_arm_R_inputs.globalXfo = this.controls_arm_R_arm.globalXfo * this.controls_arm_R_inputs.xfo;

  // solving PoseConstraint constraint controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_arm_R_globalSRTIn.globalXfo = this.controls_arm_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_arm_R_globalSRTIn.globalXfo);

  // solving PoseConstraint constraint controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint
  this.controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.constrainers[0] = this.controls_shoulder_R_shldrEndOut.globalXfo;
  this.controls_arm_R_parentSpaceIn.globalXfo = this.controls_arm_R_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.compute(this.controls_arm_R_parentSpaceIn.globalXfo);

  // solving PoseConstraint constraint controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_hand_R_globalSRTIn.globalXfo = this.controls_hand_R_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_hand_R_globalSRTIn.globalXfo);

  // solving PoseConstraint constraint controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint
  this.controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_hand_R_globalSRTIn.globalXfo;
  this.controls_hand_R_hand01Space.globalXfo = this.controls_hand_R_hand01_hand01_To_globalSRT_PoseConstraint.compute(this.controls_hand_R_hand01Space.globalXfo);

  // solving parent child constraint controls_hand_R_hand2
  this.controls_hand_R_hand2.globalXfo = this.controls_hand_R_hand01Space.globalXfo * this.controls_hand_R_hand2.xfo;

  // solving PoseConstraint constraint controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint
  this.controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.constrainers[0] = this.controls_hand_R_hand2.globalXfo;
  this.controls_hand_R_ikgoalOut.globalXfo = this.controls_hand_R_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.compute(this.controls_hand_R_ikgoalOut.globalXfo);

  // solving PoseConstraint constraint controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint
  this.controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers[0] = this.controls_hand_R_ikgoalOut.globalXfo;
  this.controls_arm_R_ikGoalInputIn.globalXfo = this.controls_arm_R_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.compute(this.controls_arm_R_ikGoalInputIn.globalXfo);

  // solving parent child constraint controls_arm_R_outputs
  this.controls_arm_R_outputs.globalXfo = this.controls_arm_R_arm.globalXfo * this.controls_arm_R_outputs.xfo;

  // solving KLSolver arm_R_RarmIKFKTwoBoneIKSolver
  Boolean arm_R_RarmIKFKTwoBoneIKSolver_drawDebug = this.controls_arm_R_inputs_inputs_drawDebug.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_rigScale = this.controls_arm_R_inputs_inputs_rigScale.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_ikBlend = this.controls_arm_R_inputs_inputs_ikBlend.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_softDist = this.controls_arm_R_inputs_inputs_softDist.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_stretch = this.controls_arm_R_inputs_inputs_stretch.value;

  // solving PoseConstraint constraint controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint
  this.controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_arm_R_parentSpaceIn.globalXfo;
  this.controls_arm_R_upArm01Space.globalXfo = this.controls_arm_R_upArm01_upArm01_To_parentSpace_PoseConstraint.compute(this.controls_arm_R_upArm01Space.globalXfo);
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_root = this.controls_arm_R_upArm01Space.globalXfo.toMat44();

  // solving parent child constraint controls_arm_R_upArm
  this.controls_arm_R_upArm.globalXfo = this.controls_arm_R_upArm01Space.globalXfo * this.controls_arm_R_upArm.xfo;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone0FK = this.controls_arm_R_upArm.globalXfo.toMat44();

  // solving parent child constraint controls_arm_R_loArm01Space
  this.controls_arm_R_loArm01Space.globalXfo = this.controls_arm_R_upArm.globalXfo * this.controls_arm_R_loArm01Space.xfo;

  // solving parent child constraint controls_arm_R_loArm
  this.controls_arm_R_loArm.globalXfo = this.controls_arm_R_loArm01Space.globalXfo * this.controls_arm_R_loArm.xfo;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone1FK = this.controls_arm_R_loArm.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint
  this.controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_arm_R_ikGoalInputIn.globalXfo;
  this.controls_arm_R_handIK.globalXfo = this.controls_arm_R_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.compute(this.controls_arm_R_handIK.globalXfo);
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_ikHandle = this.controls_arm_R_handIK.globalXfo.toMat44();

  // solving KLSolver arm_R_RarmUpVSpace_HierBlendSolver
  Boolean arm_R_RarmUpVSpace_HierBlendSolver_drawDebug = this.controls_arm_R_inputs_inputs_drawDebug.value;
  Scalar arm_R_RarmUpVSpace_HierBlendSolver_rigScale = this.controls_arm_R_inputs_inputs_rigScale.value;
  Mat44 arm_R_RarmUpVSpace_HierBlendSolver_hierA[](1);

  // solving PoseConstraint constraint controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint
  this.controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_arm_R_globalSRTIn.globalXfo;
  this.controls_arm_R_armIKMasterSpace.globalXfo = this.controls_arm_R_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.compute(this.controls_arm_R_armIKMasterSpace.globalXfo);
  arm_R_RarmUpVSpace_HierBlendSolver_hierA[0] = this.controls_arm_R_armIKMasterSpace.globalXfo.toMat44();
  Mat44 arm_R_RarmUpVSpace_HierBlendSolver_hierB[](1);

  // solving PoseConstraint constraint controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint
  this.controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_arm_R_ikGoalInputIn.globalXfo;
  this.controls_arm_R_armUpVIKSpace.globalXfo = this.controls_arm_R_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.compute(this.controls_arm_R_armUpVIKSpace.globalXfo);
  arm_R_RarmUpVSpace_HierBlendSolver_hierB[0] = this.controls_arm_R_armUpVIKSpace.globalXfo.toMat44();
  Integer arm_R_RarmUpVSpace_HierBlendSolver_parentIndexes[](1);
  arm_R_RarmUpVSpace_HierBlendSolver_parentIndexes[0] = -1;
  Scalar arm_R_RarmUpVSpace_HierBlendSolver_blend = this.controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace.value;
  Mat44 arm_R_RarmUpVSpace_HierBlendSolver_hierOut[](1);
  this.arm_R_RarmUpVSpace_HierBlendSolver.solve(
    arm_R_RarmUpVSpace_HierBlendSolver_drawDebug,
    arm_R_RarmUpVSpace_HierBlendSolver_rigScale,
    arm_R_RarmUpVSpace_HierBlendSolver_hierA,
    arm_R_RarmUpVSpace_HierBlendSolver_hierB,
    arm_R_RarmUpVSpace_HierBlendSolver_parentIndexes,
    arm_R_RarmUpVSpace_HierBlendSolver_blend,
    arm_R_RarmUpVSpace_HierBlendSolver_hierOut
  );

  // retrieving value for controls_arm_R_armUpV01Space from solver arm_R_RarmUpVSpace_HierBlendSolver
  this.controls_arm_R_armUpV01Space.globalXfo = arm_R_RarmUpVSpace_HierBlendSolver_hierOut[0];

  // solving parent child constraint controls_arm_R_armUpV
  this.controls_arm_R_armUpV.globalXfo = this.controls_arm_R_armUpV01Space.globalXfo * this.controls_arm_R_armUpV.xfo;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_upV = this.controls_arm_R_armUpV.globalXfo.toMat44();
  UInt32 arm_R_RarmIKFKTwoBoneIKSolver_boneAxis = 3;
  UInt32 arm_R_RarmIKFKTwoBoneIKSolver_upAxis = 5;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_bone0Len = this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value;
  Scalar arm_R_RarmIKFKTwoBoneIKSolver_bone1Len = this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone0Out;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone1Out;
  Mat44 arm_R_RarmIKFKTwoBoneIKSolver_bone2Out;
  this.arm_R_RarmIKFKTwoBoneIKSolver.solve(
    arm_R_RarmIKFKTwoBoneIKSolver_drawDebug,
    arm_R_RarmIKFKTwoBoneIKSolver_rigScale,
    arm_R_RarmIKFKTwoBoneIKSolver_ikBlend,
    arm_R_RarmIKFKTwoBoneIKSolver_softDist,
    arm_R_RarmIKFKTwoBoneIKSolver_stretch,
    arm_R_RarmIKFKTwoBoneIKSolver_root,
    arm_R_RarmIKFKTwoBoneIKSolver_bone0FK,
    arm_R_RarmIKFKTwoBoneIKSolver_bone1FK,
    arm_R_RarmIKFKTwoBoneIKSolver_ikHandle,
    arm_R_RarmIKFKTwoBoneIKSolver_upV,
    arm_R_RarmIKFKTwoBoneIKSolver_boneAxis,
    arm_R_RarmIKFKTwoBoneIKSolver_upAxis,
    arm_R_RarmIKFKTwoBoneIKSolver_bone0Len,
    arm_R_RarmIKFKTwoBoneIKSolver_bone1Len,
    arm_R_RarmIKFKTwoBoneIKSolver_bone0Out,
    arm_R_RarmIKFKTwoBoneIKSolver_bone1Out,
    arm_R_RarmIKFKTwoBoneIKSolver_bone2Out
  );

  // retrieving value for controls_arm_R_uplimbOut from solver arm_R_RarmIKFKTwoBoneIKSolver
  this.controls_arm_R_uplimbOut.globalXfo = arm_R_RarmIKFKTwoBoneIKSolver_bone0Out;

  // retrieving value for controls_arm_R_lolimbOut from solver arm_R_RarmIKFKTwoBoneIKSolver
  this.controls_arm_R_lolimbOut.globalXfo = arm_R_RarmIKFKTwoBoneIKSolver_bone1Out;

  // retrieving value for controls_arm_R_endlimbOut from solver arm_R_RarmIKFKTwoBoneIKSolver
  this.controls_arm_R_endlimbOut.globalXfo = arm_R_RarmIKFKTwoBoneIKSolver_bone2Out;

  // solving PoseConstraint constraint controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint
  this.controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_arm_R_globalSRTIn.globalXfo;
  this.controls_arm_R_handIKSpace.globalXfo = this.controls_arm_R_handIK_handIK_To_globalSRT_PoseConstraint.compute(this.controls_arm_R_handIKSpace.globalXfo);

  // solving parent child constraint deformers_arm_R_arm
  this.deformers_arm_R_arm.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_arm_R_arm.xfo;

  // solving KLSolver arm_R_RarmDeformerJointsKLOp
  Boolean arm_R_RarmDeformerJointsKLOp_drawDebug = this.controls_arm_R_inputs_inputs_drawDebug.value;
  Scalar arm_R_RarmDeformerJointsKLOp_rigScale = this.controls_arm_R_inputs_inputs_rigScale.value;
  Mat44 arm_R_RarmDeformerJointsKLOp_constrainers[](3);
  arm_R_RarmDeformerJointsKLOp_constrainers[0] = this.controls_arm_R_uplimbOut.globalXfo.toMat44();
  arm_R_RarmDeformerJointsKLOp_constrainers[1] = this.controls_arm_R_lolimbOut.globalXfo.toMat44();
  arm_R_RarmDeformerJointsKLOp_constrainers[2] = this.controls_arm_R_endlimbOut.globalXfo.toMat44();
  Mat44 arm_R_RarmDeformerJointsKLOp_constrainees[](3);
  this.arm_R_RarmDeformerJointsKLOp.solve(
    arm_R_RarmDeformerJointsKLOp_drawDebug,
    arm_R_RarmDeformerJointsKLOp_rigScale,
    arm_R_RarmDeformerJointsKLOp_constrainers,
    arm_R_RarmDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_arm_R_upArm from solver arm_R_RarmDeformerJointsKLOp
  this.deformers_arm_R_upArm.globalXfo = arm_R_RarmDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_arm_R_loArm from solver arm_R_RarmDeformerJointsKLOp
  this.deformers_arm_R_loArm.globalXfo = arm_R_RarmDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_arm_R_armend from solver arm_R_RarmDeformerJointsKLOp
  this.deformers_arm_R_armend.globalXfo = arm_R_RarmDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_arm_L_arm
  this.controls_arm_L_arm.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_arm_L_arm.xfo;

  // solving parent child constraint controls_arm_L_inputs
  this.controls_arm_L_inputs.globalXfo = this.controls_arm_L_arm.globalXfo * this.controls_arm_L_inputs.xfo;

  // solving PoseConstraint constraint controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_arm_L_globalSRTIn.globalXfo = this.controls_arm_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_arm_L_globalSRTIn.globalXfo);

  // solving PoseConstraint constraint controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint
  this.controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.constrainers[0] = this.controls_shoulder_L_shldrEndOut.globalXfo;
  this.controls_arm_L_parentSpaceIn.globalXfo = this.controls_arm_L_inputs_parentSpace_parentSpace_To_shldrEnd_PoseConstraint.compute(this.controls_arm_L_parentSpaceIn.globalXfo);

  // solving PoseConstraint constraint controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_hand_L_globalSRTIn.globalXfo = this.controls_hand_L_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_hand_L_globalSRTIn.globalXfo);

  // solving PoseConstraint constraint controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint
  this.controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_hand_L_globalSRTIn.globalXfo;
  this.controls_hand_L_hand01Space.globalXfo = this.controls_hand_L_hand01_hand01_To_globalSRT_PoseConstraint.compute(this.controls_hand_L_hand01Space.globalXfo);

  // solving parent child constraint controls_hand_L_hand2
  this.controls_hand_L_hand2.globalXfo = this.controls_hand_L_hand01Space.globalXfo * this.controls_hand_L_hand2.xfo;

  // solving PoseConstraint constraint controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint
  this.controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.constrainers[0] = this.controls_hand_L_hand2.globalXfo;
  this.controls_hand_L_ikgoalOut.globalXfo = this.controls_hand_L_outputs_ikgoal_ikgoal_To_hand_PoseConstraint.compute(this.controls_hand_L_ikgoalOut.globalXfo);

  // solving PoseConstraint constraint controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint
  this.controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.constrainers[0] = this.controls_hand_L_ikgoalOut.globalXfo;
  this.controls_arm_L_ikGoalInputIn.globalXfo = this.controls_arm_L_inputs_ikGoalInput_ikGoalInput_To_ikgoal_PoseConstraint.compute(this.controls_arm_L_ikGoalInputIn.globalXfo);

  // solving parent child constraint controls_arm_L_outputs
  this.controls_arm_L_outputs.globalXfo = this.controls_arm_L_arm.globalXfo * this.controls_arm_L_outputs.xfo;

  // solving KLSolver arm_L_LarmIKFKTwoBoneIKSolver
  Boolean arm_L_LarmIKFKTwoBoneIKSolver_drawDebug = this.controls_arm_L_inputs_inputs_drawDebug.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_rigScale = this.controls_arm_L_inputs_inputs_rigScale.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_ikBlend = this.controls_arm_L_inputs_inputs_ikBlend.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_softDist = this.controls_arm_L_inputs_inputs_softDist.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_stretch = this.controls_arm_L_inputs_inputs_stretch.value;

  // solving PoseConstraint constraint controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint
  this.controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_arm_L_parentSpaceIn.globalXfo;
  this.controls_arm_L_upArm01Space.globalXfo = this.controls_arm_L_upArm01_upArm01_To_parentSpace_PoseConstraint.compute(this.controls_arm_L_upArm01Space.globalXfo);
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_root = this.controls_arm_L_upArm01Space.globalXfo.toMat44();

  // solving parent child constraint controls_arm_L_upArm
  this.controls_arm_L_upArm.globalXfo = this.controls_arm_L_upArm01Space.globalXfo * this.controls_arm_L_upArm.xfo;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone0FK = this.controls_arm_L_upArm.globalXfo.toMat44();

  // solving parent child constraint controls_arm_L_loArm01Space
  this.controls_arm_L_loArm01Space.globalXfo = this.controls_arm_L_upArm.globalXfo * this.controls_arm_L_loArm01Space.xfo;

  // solving parent child constraint controls_arm_L_loArm
  this.controls_arm_L_loArm.globalXfo = this.controls_arm_L_loArm01Space.globalXfo * this.controls_arm_L_loArm.xfo;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone1FK = this.controls_arm_L_loArm.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint
  this.controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_arm_L_ikGoalInputIn.globalXfo;
  this.controls_arm_L_handIK.globalXfo = this.controls_arm_L_handIK_handIK_handIK_To_ikGoalInput_PoseConstraint.compute(this.controls_arm_L_handIK.globalXfo);
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_ikHandle = this.controls_arm_L_handIK.globalXfo.toMat44();

  // solving KLSolver arm_L_LarmUpVSpace_HierBlendSolver
  Boolean arm_L_LarmUpVSpace_HierBlendSolver_drawDebug = this.controls_arm_L_inputs_inputs_drawDebug.value;
  Scalar arm_L_LarmUpVSpace_HierBlendSolver_rigScale = this.controls_arm_L_inputs_inputs_rigScale.value;
  Mat44 arm_L_LarmUpVSpace_HierBlendSolver_hierA[](1);

  // solving PoseConstraint constraint controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint
  this.controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_arm_L_globalSRTIn.globalXfo;
  this.controls_arm_L_armIKMasterSpace.globalXfo = this.controls_arm_L_armIKMaster_armIKMaster_To_globalSRT_PoseConstraint.compute(this.controls_arm_L_armIKMasterSpace.globalXfo);
  arm_L_LarmUpVSpace_HierBlendSolver_hierA[0] = this.controls_arm_L_armIKMasterSpace.globalXfo.toMat44();
  Mat44 arm_L_LarmUpVSpace_HierBlendSolver_hierB[](1);

  // solving PoseConstraint constraint controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint
  this.controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.constrainers[0] = this.controls_arm_L_ikGoalInputIn.globalXfo;
  this.controls_arm_L_armUpVIKSpace.globalXfo = this.controls_arm_L_armUpVIK_armUpVIK_To_ikGoalInput_PoseConstraint.compute(this.controls_arm_L_armUpVIKSpace.globalXfo);
  arm_L_LarmUpVSpace_HierBlendSolver_hierB[0] = this.controls_arm_L_armUpVIKSpace.globalXfo.toMat44();
  Integer arm_L_LarmUpVSpace_HierBlendSolver_parentIndexes[](1);
  arm_L_LarmUpVSpace_HierBlendSolver_parentIndexes[0] = -1;
  Scalar arm_L_LarmUpVSpace_HierBlendSolver_blend = this.controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace.value;
  Mat44 arm_L_LarmUpVSpace_HierBlendSolver_hierOut[](1);
  this.arm_L_LarmUpVSpace_HierBlendSolver.solve(
    arm_L_LarmUpVSpace_HierBlendSolver_drawDebug,
    arm_L_LarmUpVSpace_HierBlendSolver_rigScale,
    arm_L_LarmUpVSpace_HierBlendSolver_hierA,
    arm_L_LarmUpVSpace_HierBlendSolver_hierB,
    arm_L_LarmUpVSpace_HierBlendSolver_parentIndexes,
    arm_L_LarmUpVSpace_HierBlendSolver_blend,
    arm_L_LarmUpVSpace_HierBlendSolver_hierOut
  );

  // retrieving value for controls_arm_L_armUpV01Space from solver arm_L_LarmUpVSpace_HierBlendSolver
  this.controls_arm_L_armUpV01Space.globalXfo = arm_L_LarmUpVSpace_HierBlendSolver_hierOut[0];

  // solving parent child constraint controls_arm_L_armUpV
  this.controls_arm_L_armUpV.globalXfo = this.controls_arm_L_armUpV01Space.globalXfo * this.controls_arm_L_armUpV.xfo;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_upV = this.controls_arm_L_armUpV.globalXfo.toMat44();
  UInt32 arm_L_LarmIKFKTwoBoneIKSolver_boneAxis = 0;
  UInt32 arm_L_LarmIKFKTwoBoneIKSolver_upAxis = 2;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_bone0Len = this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value;
  Scalar arm_L_LarmIKFKTwoBoneIKSolver_bone1Len = this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone0Out;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone1Out;
  Mat44 arm_L_LarmIKFKTwoBoneIKSolver_bone2Out;
  this.arm_L_LarmIKFKTwoBoneIKSolver.solve(
    arm_L_LarmIKFKTwoBoneIKSolver_drawDebug,
    arm_L_LarmIKFKTwoBoneIKSolver_rigScale,
    arm_L_LarmIKFKTwoBoneIKSolver_ikBlend,
    arm_L_LarmIKFKTwoBoneIKSolver_softDist,
    arm_L_LarmIKFKTwoBoneIKSolver_stretch,
    arm_L_LarmIKFKTwoBoneIKSolver_root,
    arm_L_LarmIKFKTwoBoneIKSolver_bone0FK,
    arm_L_LarmIKFKTwoBoneIKSolver_bone1FK,
    arm_L_LarmIKFKTwoBoneIKSolver_ikHandle,
    arm_L_LarmIKFKTwoBoneIKSolver_upV,
    arm_L_LarmIKFKTwoBoneIKSolver_boneAxis,
    arm_L_LarmIKFKTwoBoneIKSolver_upAxis,
    arm_L_LarmIKFKTwoBoneIKSolver_bone0Len,
    arm_L_LarmIKFKTwoBoneIKSolver_bone1Len,
    arm_L_LarmIKFKTwoBoneIKSolver_bone0Out,
    arm_L_LarmIKFKTwoBoneIKSolver_bone1Out,
    arm_L_LarmIKFKTwoBoneIKSolver_bone2Out
  );

  // retrieving value for controls_arm_L_uplimbOut from solver arm_L_LarmIKFKTwoBoneIKSolver
  this.controls_arm_L_uplimbOut.globalXfo = arm_L_LarmIKFKTwoBoneIKSolver_bone0Out;

  // retrieving value for controls_arm_L_lolimbOut from solver arm_L_LarmIKFKTwoBoneIKSolver
  this.controls_arm_L_lolimbOut.globalXfo = arm_L_LarmIKFKTwoBoneIKSolver_bone1Out;

  // retrieving value for controls_arm_L_endlimbOut from solver arm_L_LarmIKFKTwoBoneIKSolver
  this.controls_arm_L_endlimbOut.globalXfo = arm_L_LarmIKFKTwoBoneIKSolver_bone2Out;

  // solving PoseConstraint constraint controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint
  this.controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint.constrainers[0] = this.controls_arm_L_globalSRTIn.globalXfo;
  this.controls_arm_L_handIKSpace.globalXfo = this.controls_arm_L_handIK_handIK_To_globalSRT_PoseConstraint.compute(this.controls_arm_L_handIKSpace.globalXfo);

  // solving parent child constraint deformers_arm_L_arm
  this.deformers_arm_L_arm.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_arm_L_arm.xfo;

  // solving KLSolver arm_L_LarmDeformerJointsKLOp
  Boolean arm_L_LarmDeformerJointsKLOp_drawDebug = this.controls_arm_L_inputs_inputs_drawDebug.value;
  Scalar arm_L_LarmDeformerJointsKLOp_rigScale = this.controls_arm_L_inputs_inputs_rigScale.value;
  Mat44 arm_L_LarmDeformerJointsKLOp_constrainers[](3);
  arm_L_LarmDeformerJointsKLOp_constrainers[0] = this.controls_arm_L_uplimbOut.globalXfo.toMat44();
  arm_L_LarmDeformerJointsKLOp_constrainers[1] = this.controls_arm_L_lolimbOut.globalXfo.toMat44();
  arm_L_LarmDeformerJointsKLOp_constrainers[2] = this.controls_arm_L_endlimbOut.globalXfo.toMat44();
  Mat44 arm_L_LarmDeformerJointsKLOp_constrainees[](3);
  this.arm_L_LarmDeformerJointsKLOp.solve(
    arm_L_LarmDeformerJointsKLOp_drawDebug,
    arm_L_LarmDeformerJointsKLOp_rigScale,
    arm_L_LarmDeformerJointsKLOp_constrainers,
    arm_L_LarmDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_arm_L_upArm from solver arm_L_LarmDeformerJointsKLOp
  this.deformers_arm_L_upArm.globalXfo = arm_L_LarmDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_arm_L_loArm from solver arm_L_LarmDeformerJointsKLOp
  this.deformers_arm_L_loArm.globalXfo = arm_L_LarmDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_arm_L_armend from solver arm_L_LarmDeformerJointsKLOp
  this.deformers_arm_L_armend.globalXfo = arm_L_LarmDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_hand_L_hand
  this.controls_hand_L_hand.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_hand_L_hand.xfo;

  // solving parent child constraint controls_hand_L_inputs
  this.controls_hand_L_inputs.globalXfo = this.controls_hand_L_hand.globalXfo * this.controls_hand_L_inputs.xfo;

  // solving PoseConstraint constraint controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint
  this.controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers[0] = this.controls_arm_L_endlimbOut.globalXfo;
  this.controls_hand_L_parentSpaceIn.globalXfo = this.controls_hand_L_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.compute(this.controls_hand_L_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_hand_L_outputs
  this.controls_hand_L_outputs.globalXfo = this.controls_hand_L_hand.globalXfo * this.controls_hand_L_outputs.xfo;

  // solving KLSolver hand_L_MhandIKHandBlendKLOp
  Boolean hand_L_MhandIKHandBlendKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_MhandIKHandBlendKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Scalar hand_L_MhandIKHandBlendKLOp_blend = this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK.value;

  // solving parent child constraint controls_hand_L_handIKSpace
  this.controls_hand_L_handIKSpace.globalXfo = this.controls_hand_L_hand2.globalXfo * this.controls_hand_L_handIKSpace.xfo;
  Mat44 hand_L_MhandIKHandBlendKLOp_ikFoot = this.controls_hand_L_handIKSpace.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint
  this.controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_hand_L_parentSpaceIn.globalXfo;
  this.controls_hand_L_hand02Space.globalXfo = this.controls_hand_L_hand02_hand02_To_parentSpace_PoseConstraint.compute(this.controls_hand_L_hand02Space.globalXfo);

  // solving parent child constraint controls_hand_L_hand3
  this.controls_hand_L_hand3.globalXfo = this.controls_hand_L_hand02Space.globalXfo * this.controls_hand_L_hand3.xfo;
  Mat44 hand_L_MhandIKHandBlendKLOp_fkFoot = this.controls_hand_L_hand3.globalXfo.toMat44();

  // solving parent child constraint controls_hand_L_palmIKSpace
  this.controls_hand_L_palmIKSpace.globalXfo = this.controls_hand_L_handIKSpace.globalXfo * this.controls_hand_L_palmIKSpace.xfo;
  Mat44 hand_L_MhandIKHandBlendKLOp_ikBall = this.controls_hand_L_palmIKSpace.globalXfo.toMat44();

  // solving parent child constraint controls_hand_L_palm01Space
  this.controls_hand_L_palm01Space.globalXfo = this.controls_hand_L_hand3.globalXfo * this.controls_hand_L_palm01Space.xfo;

  // solving parent child constraint controls_hand_L_palm
  this.controls_hand_L_palm.globalXfo = this.controls_hand_L_palm01Space.globalXfo * this.controls_hand_L_palm.xfo;
  Mat44 hand_L_MhandIKHandBlendKLOp_fkBall = this.controls_hand_L_palm.globalXfo.toMat44();
  Mat44 hand_L_MhandIKHandBlendKLOp_foot;
  Mat44 hand_L_MhandIKHandBlendKLOp_ball;
  this.hand_L_MhandIKHandBlendKLOp.solve(
    hand_L_MhandIKHandBlendKLOp_drawDebug,
    hand_L_MhandIKHandBlendKLOp_rigScale,
    hand_L_MhandIKHandBlendKLOp_blend,
    hand_L_MhandIKHandBlendKLOp_ikFoot,
    hand_L_MhandIKHandBlendKLOp_fkFoot,
    hand_L_MhandIKHandBlendKLOp_ikBall,
    hand_L_MhandIKHandBlendKLOp_fkBall,
    hand_L_MhandIKHandBlendKLOp_foot,
    hand_L_MhandIKHandBlendKLOp_ball
  );

  // retrieving value for controls_hand_L_IKHandBlendKLOpHand_out from solver hand_L_MhandIKHandBlendKLOp
  this.controls_hand_L_IKHandBlendKLOpHand_out.globalXfo = hand_L_MhandIKHandBlendKLOp_foot;

  // retrieving value for controls_hand_L_IKHandBlendKLOpPalm_out from solver hand_L_MhandIKHandBlendKLOp
  this.controls_hand_L_IKHandBlendKLOpPalm_out.globalXfo = hand_L_MhandIKHandBlendKLOp_ball;

  // solving PoseConstraint constraint controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint
  this.controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.constrainers[0] = this.controls_hand_L_IKHandBlendKLOpHand_out.globalXfo;
  this.controls_hand_L_handOut.globalXfo = this.controls_hand_L_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.compute(this.controls_hand_L_handOut.globalXfo);

  // solving PoseConstraint constraint controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint
  this.controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.constrainers[0] = this.controls_hand_L_IKHandBlendKLOpPalm_out.globalXfo;
  this.controls_hand_L_palmOut.globalXfo = this.controls_hand_L_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.compute(this.controls_hand_L_palmOut.globalXfo);

  // solving parent child constraint controls_hand_L_index_palm01Space
  this.controls_hand_L_index_palm01Space.globalXfo = this.controls_hand_L_palmOut.globalXfo * this.controls_hand_L_index_palm01Space.xfo;

  // solving parent child constraint controls_hand_L_index_palm
  this.controls_hand_L_index_palm.globalXfo = this.controls_hand_L_index_palm01Space.globalXfo * this.controls_hand_L_index_palm.xfo;

  // solving parent child constraint controls_hand_L_index_base01Space
  this.controls_hand_L_index_base01Space.globalXfo = this.controls_hand_L_index_palm.globalXfo * this.controls_hand_L_index_base01Space.xfo;

  // solving parent child constraint controls_hand_L_index_base
  this.controls_hand_L_index_base.globalXfo = this.controls_hand_L_index_base01Space.globalXfo * this.controls_hand_L_index_base.xfo;

  // solving parent child constraint controls_hand_L_index_mid01Space
  this.controls_hand_L_index_mid01Space.globalXfo = this.controls_hand_L_index_base.globalXfo * this.controls_hand_L_index_mid01Space.xfo;

  // solving parent child constraint controls_hand_L_index_mid
  this.controls_hand_L_index_mid.globalXfo = this.controls_hand_L_index_mid01Space.globalXfo * this.controls_hand_L_index_mid.xfo;

  // solving parent child constraint controls_hand_L_index_tip01Space
  this.controls_hand_L_index_tip01Space.globalXfo = this.controls_hand_L_index_mid.globalXfo * this.controls_hand_L_index_tip01Space.xfo;

  // solving parent child constraint controls_hand_L_index_tip
  this.controls_hand_L_index_tip.globalXfo = this.controls_hand_L_index_tip01Space.globalXfo * this.controls_hand_L_index_tip.xfo;

  // solving parent child constraint controls_hand_L_middle_palm01Space
  this.controls_hand_L_middle_palm01Space.globalXfo = this.controls_hand_L_palmOut.globalXfo * this.controls_hand_L_middle_palm01Space.xfo;

  // solving parent child constraint controls_hand_L_middle_palm
  this.controls_hand_L_middle_palm.globalXfo = this.controls_hand_L_middle_palm01Space.globalXfo * this.controls_hand_L_middle_palm.xfo;

  // solving parent child constraint controls_hand_L_middle_base01Space
  this.controls_hand_L_middle_base01Space.globalXfo = this.controls_hand_L_middle_palm.globalXfo * this.controls_hand_L_middle_base01Space.xfo;

  // solving parent child constraint controls_hand_L_middle_base
  this.controls_hand_L_middle_base.globalXfo = this.controls_hand_L_middle_base01Space.globalXfo * this.controls_hand_L_middle_base.xfo;

  // solving parent child constraint controls_hand_L_middle_mid01Space
  this.controls_hand_L_middle_mid01Space.globalXfo = this.controls_hand_L_middle_base.globalXfo * this.controls_hand_L_middle_mid01Space.xfo;

  // solving parent child constraint controls_hand_L_middle_mid
  this.controls_hand_L_middle_mid.globalXfo = this.controls_hand_L_middle_mid01Space.globalXfo * this.controls_hand_L_middle_mid.xfo;

  // solving parent child constraint controls_hand_L_middle_tip01Space
  this.controls_hand_L_middle_tip01Space.globalXfo = this.controls_hand_L_middle_mid.globalXfo * this.controls_hand_L_middle_tip01Space.xfo;

  // solving parent child constraint controls_hand_L_middle_tip
  this.controls_hand_L_middle_tip.globalXfo = this.controls_hand_L_middle_tip01Space.globalXfo * this.controls_hand_L_middle_tip.xfo;

  // solving parent child constraint controls_hand_L_ring_palm01Space
  this.controls_hand_L_ring_palm01Space.globalXfo = this.controls_hand_L_palmOut.globalXfo * this.controls_hand_L_ring_palm01Space.xfo;

  // solving parent child constraint controls_hand_L_ring_palm
  this.controls_hand_L_ring_palm.globalXfo = this.controls_hand_L_ring_palm01Space.globalXfo * this.controls_hand_L_ring_palm.xfo;

  // solving parent child constraint controls_hand_L_ring_base01Space
  this.controls_hand_L_ring_base01Space.globalXfo = this.controls_hand_L_ring_palm.globalXfo * this.controls_hand_L_ring_base01Space.xfo;

  // solving parent child constraint controls_hand_L_ring_base
  this.controls_hand_L_ring_base.globalXfo = this.controls_hand_L_ring_base01Space.globalXfo * this.controls_hand_L_ring_base.xfo;

  // solving parent child constraint controls_hand_L_ring_mid01Space
  this.controls_hand_L_ring_mid01Space.globalXfo = this.controls_hand_L_ring_base.globalXfo * this.controls_hand_L_ring_mid01Space.xfo;

  // solving parent child constraint controls_hand_L_ring_mid
  this.controls_hand_L_ring_mid.globalXfo = this.controls_hand_L_ring_mid01Space.globalXfo * this.controls_hand_L_ring_mid.xfo;

  // solving parent child constraint controls_hand_L_ring_tip01Space
  this.controls_hand_L_ring_tip01Space.globalXfo = this.controls_hand_L_ring_mid.globalXfo * this.controls_hand_L_ring_tip01Space.xfo;

  // solving parent child constraint controls_hand_L_ring_tip
  this.controls_hand_L_ring_tip.globalXfo = this.controls_hand_L_ring_tip01Space.globalXfo * this.controls_hand_L_ring_tip.xfo;

  // solving parent child constraint controls_hand_L_pinky_palm01Space
  this.controls_hand_L_pinky_palm01Space.globalXfo = this.controls_hand_L_palmOut.globalXfo * this.controls_hand_L_pinky_palm01Space.xfo;

  // solving parent child constraint controls_hand_L_pinky_palm
  this.controls_hand_L_pinky_palm.globalXfo = this.controls_hand_L_pinky_palm01Space.globalXfo * this.controls_hand_L_pinky_palm.xfo;

  // solving parent child constraint controls_hand_L_pinky_base01Space
  this.controls_hand_L_pinky_base01Space.globalXfo = this.controls_hand_L_pinky_palm.globalXfo * this.controls_hand_L_pinky_base01Space.xfo;

  // solving parent child constraint controls_hand_L_pinky_base
  this.controls_hand_L_pinky_base.globalXfo = this.controls_hand_L_pinky_base01Space.globalXfo * this.controls_hand_L_pinky_base.xfo;

  // solving parent child constraint controls_hand_L_pinky_mid01Space
  this.controls_hand_L_pinky_mid01Space.globalXfo = this.controls_hand_L_pinky_base.globalXfo * this.controls_hand_L_pinky_mid01Space.xfo;

  // solving parent child constraint controls_hand_L_pinky_mid
  this.controls_hand_L_pinky_mid.globalXfo = this.controls_hand_L_pinky_mid01Space.globalXfo * this.controls_hand_L_pinky_mid.xfo;

  // solving parent child constraint controls_hand_L_pinky_tip01Space
  this.controls_hand_L_pinky_tip01Space.globalXfo = this.controls_hand_L_pinky_mid.globalXfo * this.controls_hand_L_pinky_tip01Space.xfo;

  // solving parent child constraint controls_hand_L_pinky_tip
  this.controls_hand_L_pinky_tip.globalXfo = this.controls_hand_L_pinky_tip01Space.globalXfo * this.controls_hand_L_pinky_tip.xfo;

  // solving parent child constraint controls_hand_L_thumb_palm01Space
  this.controls_hand_L_thumb_palm01Space.globalXfo = this.controls_hand_L_palmOut.globalXfo * this.controls_hand_L_thumb_palm01Space.xfo;

  // solving parent child constraint controls_hand_L_thumb_palm
  this.controls_hand_L_thumb_palm.globalXfo = this.controls_hand_L_thumb_palm01Space.globalXfo * this.controls_hand_L_thumb_palm.xfo;

  // solving parent child constraint controls_hand_L_thumb_base01Space
  this.controls_hand_L_thumb_base01Space.globalXfo = this.controls_hand_L_thumb_palm.globalXfo * this.controls_hand_L_thumb_base01Space.xfo;

  // solving parent child constraint controls_hand_L_thumb_base
  this.controls_hand_L_thumb_base.globalXfo = this.controls_hand_L_thumb_base01Space.globalXfo * this.controls_hand_L_thumb_base.xfo;

  // solving parent child constraint controls_hand_L_thumb_tip01Space
  this.controls_hand_L_thumb_tip01Space.globalXfo = this.controls_hand_L_thumb_base.globalXfo * this.controls_hand_L_thumb_tip01Space.xfo;

  // solving parent child constraint controls_hand_L_thumb_tip
  this.controls_hand_L_thumb_tip.globalXfo = this.controls_hand_L_thumb_tip01Space.globalXfo * this.controls_hand_L_thumb_tip.xfo;

  // solving parent child constraint controls_hand_L_ikGoalRef
  this.controls_hand_L_ikGoalRef.globalXfo = this.controls_hand_L_hand2.globalXfo * this.controls_hand_L_ikGoalRef.xfo;

  // solving parent child constraint controls_hand_L_ikHand
  this.controls_hand_L_ikHand.globalXfo = this.controls_hand_L_hand02Space.globalXfo * this.controls_hand_L_ikHand.xfo;

  // solving parent child constraint controls_hand_L_ikPalm
  this.controls_hand_L_ikPalm.globalXfo = this.controls_hand_L_ikHand.globalXfo * this.controls_hand_L_ikPalm.xfo;

  // solving parent child constraint deformers_hand_L_hand
  this.deformers_hand_L_hand.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_hand_L_hand.xfo;

  // solving KLSolver hand_L_LhandDeformerJointsKLOp
  Boolean hand_L_LhandDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandDeformerJointsKLOp_constrainers[](2);
  hand_L_LhandDeformerJointsKLOp_constrainers[0] = this.controls_hand_L_handOut.globalXfo.toMat44();
  hand_L_LhandDeformerJointsKLOp_constrainers[1] = this.controls_hand_L_palmOut.globalXfo.toMat44();
  Mat44 hand_L_LhandDeformerJointsKLOp_constrainees[](2);
  this.hand_L_LhandDeformerJointsKLOp.solve(
    hand_L_LhandDeformerJointsKLOp_drawDebug,
    hand_L_LhandDeformerJointsKLOp_rigScale,
    hand_L_LhandDeformerJointsKLOp_constrainers,
    hand_L_LhandDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_L_hand2 from solver hand_L_LhandDeformerJointsKLOp
  this.deformers_hand_L_hand2.globalXfo = hand_L_LhandDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_L_palm from solver hand_L_LhandDeformerJointsKLOp
  this.deformers_hand_L_palm.globalXfo = hand_L_LhandDeformerJointsKLOp_constrainees[1];

  // solving KLSolver hand_L_LhandindexDeformerJointsKLOp
  Boolean hand_L_LhandindexDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandindexDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandindexDeformerJointsKLOp_constrainers[](4);
  hand_L_LhandindexDeformerJointsKLOp_constrainers[0] = this.controls_hand_L_index_palm.globalXfo.toMat44();
  hand_L_LhandindexDeformerJointsKLOp_constrainers[1] = this.controls_hand_L_index_base.globalXfo.toMat44();
  hand_L_LhandindexDeformerJointsKLOp_constrainers[2] = this.controls_hand_L_index_mid.globalXfo.toMat44();
  hand_L_LhandindexDeformerJointsKLOp_constrainers[3] = this.controls_hand_L_index_tip.globalXfo.toMat44();
  Mat44 hand_L_LhandindexDeformerJointsKLOp_constrainees[](4);
  this.hand_L_LhandindexDeformerJointsKLOp.solve(
    hand_L_LhandindexDeformerJointsKLOp_drawDebug,
    hand_L_LhandindexDeformerJointsKLOp_rigScale,
    hand_L_LhandindexDeformerJointsKLOp_constrainers,
    hand_L_LhandindexDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_L_index_palm from solver hand_L_LhandindexDeformerJointsKLOp
  this.deformers_hand_L_index_palm.globalXfo = hand_L_LhandindexDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_L_index_base from solver hand_L_LhandindexDeformerJointsKLOp
  this.deformers_hand_L_index_base.globalXfo = hand_L_LhandindexDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_L_index_mid from solver hand_L_LhandindexDeformerJointsKLOp
  this.deformers_hand_L_index_mid.globalXfo = hand_L_LhandindexDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_hand_L_index_tip from solver hand_L_LhandindexDeformerJointsKLOp
  this.deformers_hand_L_index_tip.globalXfo = hand_L_LhandindexDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_L_LhandmiddleDeformerJointsKLOp
  Boolean hand_L_LhandmiddleDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandmiddleDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandmiddleDeformerJointsKLOp_constrainers[](4);
  hand_L_LhandmiddleDeformerJointsKLOp_constrainers[0] = this.controls_hand_L_middle_palm.globalXfo.toMat44();
  hand_L_LhandmiddleDeformerJointsKLOp_constrainers[1] = this.controls_hand_L_middle_base.globalXfo.toMat44();
  hand_L_LhandmiddleDeformerJointsKLOp_constrainers[2] = this.controls_hand_L_middle_mid.globalXfo.toMat44();
  hand_L_LhandmiddleDeformerJointsKLOp_constrainers[3] = this.controls_hand_L_middle_tip.globalXfo.toMat44();
  Mat44 hand_L_LhandmiddleDeformerJointsKLOp_constrainees[](4);
  this.hand_L_LhandmiddleDeformerJointsKLOp.solve(
    hand_L_LhandmiddleDeformerJointsKLOp_drawDebug,
    hand_L_LhandmiddleDeformerJointsKLOp_rigScale,
    hand_L_LhandmiddleDeformerJointsKLOp_constrainers,
    hand_L_LhandmiddleDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_L_middle_palm from solver hand_L_LhandmiddleDeformerJointsKLOp
  this.deformers_hand_L_middle_palm.globalXfo = hand_L_LhandmiddleDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_L_middle_base from solver hand_L_LhandmiddleDeformerJointsKLOp
  this.deformers_hand_L_middle_base.globalXfo = hand_L_LhandmiddleDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_L_middle_mid from solver hand_L_LhandmiddleDeformerJointsKLOp
  this.deformers_hand_L_middle_mid.globalXfo = hand_L_LhandmiddleDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_hand_L_middle_tip from solver hand_L_LhandmiddleDeformerJointsKLOp
  this.deformers_hand_L_middle_tip.globalXfo = hand_L_LhandmiddleDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_L_LhandringDeformerJointsKLOp
  Boolean hand_L_LhandringDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandringDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandringDeformerJointsKLOp_constrainers[](4);
  hand_L_LhandringDeformerJointsKLOp_constrainers[0] = this.controls_hand_L_ring_palm.globalXfo.toMat44();
  hand_L_LhandringDeformerJointsKLOp_constrainers[1] = this.controls_hand_L_ring_base.globalXfo.toMat44();
  hand_L_LhandringDeformerJointsKLOp_constrainers[2] = this.controls_hand_L_ring_mid.globalXfo.toMat44();
  hand_L_LhandringDeformerJointsKLOp_constrainers[3] = this.controls_hand_L_ring_tip.globalXfo.toMat44();
  Mat44 hand_L_LhandringDeformerJointsKLOp_constrainees[](4);
  this.hand_L_LhandringDeformerJointsKLOp.solve(
    hand_L_LhandringDeformerJointsKLOp_drawDebug,
    hand_L_LhandringDeformerJointsKLOp_rigScale,
    hand_L_LhandringDeformerJointsKLOp_constrainers,
    hand_L_LhandringDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_L_ring_palm from solver hand_L_LhandringDeformerJointsKLOp
  this.deformers_hand_L_ring_palm.globalXfo = hand_L_LhandringDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_L_ring_base from solver hand_L_LhandringDeformerJointsKLOp
  this.deformers_hand_L_ring_base.globalXfo = hand_L_LhandringDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_L_ring_mid from solver hand_L_LhandringDeformerJointsKLOp
  this.deformers_hand_L_ring_mid.globalXfo = hand_L_LhandringDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_hand_L_ring_tip from solver hand_L_LhandringDeformerJointsKLOp
  this.deformers_hand_L_ring_tip.globalXfo = hand_L_LhandringDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_L_LhandpinkyDeformerJointsKLOp
  Boolean hand_L_LhandpinkyDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandpinkyDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandpinkyDeformerJointsKLOp_constrainers[](4);
  hand_L_LhandpinkyDeformerJointsKLOp_constrainers[0] = this.controls_hand_L_pinky_palm.globalXfo.toMat44();
  hand_L_LhandpinkyDeformerJointsKLOp_constrainers[1] = this.controls_hand_L_pinky_base.globalXfo.toMat44();
  hand_L_LhandpinkyDeformerJointsKLOp_constrainers[2] = this.controls_hand_L_pinky_mid.globalXfo.toMat44();
  hand_L_LhandpinkyDeformerJointsKLOp_constrainers[3] = this.controls_hand_L_pinky_tip.globalXfo.toMat44();
  Mat44 hand_L_LhandpinkyDeformerJointsKLOp_constrainees[](4);
  this.hand_L_LhandpinkyDeformerJointsKLOp.solve(
    hand_L_LhandpinkyDeformerJointsKLOp_drawDebug,
    hand_L_LhandpinkyDeformerJointsKLOp_rigScale,
    hand_L_LhandpinkyDeformerJointsKLOp_constrainers,
    hand_L_LhandpinkyDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_L_pinky_palm from solver hand_L_LhandpinkyDeformerJointsKLOp
  this.deformers_hand_L_pinky_palm.globalXfo = hand_L_LhandpinkyDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_L_pinky_base from solver hand_L_LhandpinkyDeformerJointsKLOp
  this.deformers_hand_L_pinky_base.globalXfo = hand_L_LhandpinkyDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_L_pinky_mid from solver hand_L_LhandpinkyDeformerJointsKLOp
  this.deformers_hand_L_pinky_mid.globalXfo = hand_L_LhandpinkyDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_hand_L_pinky_tip from solver hand_L_LhandpinkyDeformerJointsKLOp
  this.deformers_hand_L_pinky_tip.globalXfo = hand_L_LhandpinkyDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_L_LhandthumbDeformerJointsKLOp
  Boolean hand_L_LhandthumbDeformerJointsKLOp_drawDebug = this.controls_hand_L_inputs_inputs_drawDebug.value;
  Scalar hand_L_LhandthumbDeformerJointsKLOp_rigScale = this.controls_hand_L_inputs_inputs_rigScale.value;
  Mat44 hand_L_LhandthumbDeformerJointsKLOp_constrainers[](3);
  hand_L_LhandthumbDeformerJointsKLOp_constrainers[0] = this.controls_hand_L_thumb_palm.globalXfo.toMat44();
  hand_L_LhandthumbDeformerJointsKLOp_constrainers[1] = this.controls_hand_L_thumb_base.globalXfo.toMat44();
  hand_L_LhandthumbDeformerJointsKLOp_constrainers[2] = this.controls_hand_L_thumb_tip.globalXfo.toMat44();
  Mat44 hand_L_LhandthumbDeformerJointsKLOp_constrainees[](3);
  this.hand_L_LhandthumbDeformerJointsKLOp.solve(
    hand_L_LhandthumbDeformerJointsKLOp_drawDebug,
    hand_L_LhandthumbDeformerJointsKLOp_rigScale,
    hand_L_LhandthumbDeformerJointsKLOp_constrainers,
    hand_L_LhandthumbDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_L_thumb_palm from solver hand_L_LhandthumbDeformerJointsKLOp
  this.deformers_hand_L_thumb_palm.globalXfo = hand_L_LhandthumbDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_L_thumb_base from solver hand_L_LhandthumbDeformerJointsKLOp
  this.deformers_hand_L_thumb_base.globalXfo = hand_L_LhandthumbDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_L_thumb_tip from solver hand_L_LhandthumbDeformerJointsKLOp
  this.deformers_hand_L_thumb_tip.globalXfo = hand_L_LhandthumbDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_hand_R_hand
  this.controls_hand_R_hand.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_hand_R_hand.xfo;

  // solving parent child constraint controls_hand_R_inputs
  this.controls_hand_R_inputs.globalXfo = this.controls_hand_R_hand.globalXfo * this.controls_hand_R_inputs.xfo;

  // solving PoseConstraint constraint controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint
  this.controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.constrainers[0] = this.controls_arm_R_endlimbOut.globalXfo;
  this.controls_hand_R_parentSpaceIn.globalXfo = this.controls_hand_R_inputs_parentSpace_parentSpace_To_endlimb_PoseConstraint.compute(this.controls_hand_R_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_hand_R_outputs
  this.controls_hand_R_outputs.globalXfo = this.controls_hand_R_hand.globalXfo * this.controls_hand_R_outputs.xfo;

  // solving KLSolver hand_R_MhandIKHandBlendKLOp
  Boolean hand_R_MhandIKHandBlendKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_MhandIKHandBlendKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Scalar hand_R_MhandIKHandBlendKLOp_blend = this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK.value;

  // solving parent child constraint controls_hand_R_handIKSpace
  this.controls_hand_R_handIKSpace.globalXfo = this.controls_hand_R_hand2.globalXfo * this.controls_hand_R_handIKSpace.xfo;
  Mat44 hand_R_MhandIKHandBlendKLOp_ikFoot = this.controls_hand_R_handIKSpace.globalXfo.toMat44();

  // solving PoseConstraint constraint controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint
  this.controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_hand_R_parentSpaceIn.globalXfo;
  this.controls_hand_R_hand02Space.globalXfo = this.controls_hand_R_hand02_hand02_To_parentSpace_PoseConstraint.compute(this.controls_hand_R_hand02Space.globalXfo);

  // solving parent child constraint controls_hand_R_hand3
  this.controls_hand_R_hand3.globalXfo = this.controls_hand_R_hand02Space.globalXfo * this.controls_hand_R_hand3.xfo;
  Mat44 hand_R_MhandIKHandBlendKLOp_fkFoot = this.controls_hand_R_hand3.globalXfo.toMat44();

  // solving parent child constraint controls_hand_R_palmIKSpace
  this.controls_hand_R_palmIKSpace.globalXfo = this.controls_hand_R_handIKSpace.globalXfo * this.controls_hand_R_palmIKSpace.xfo;
  Mat44 hand_R_MhandIKHandBlendKLOp_ikBall = this.controls_hand_R_palmIKSpace.globalXfo.toMat44();

  // solving parent child constraint controls_hand_R_palm01Space
  this.controls_hand_R_palm01Space.globalXfo = this.controls_hand_R_hand3.globalXfo * this.controls_hand_R_palm01Space.xfo;

  // solving parent child constraint controls_hand_R_palm
  this.controls_hand_R_palm.globalXfo = this.controls_hand_R_palm01Space.globalXfo * this.controls_hand_R_palm.xfo;
  Mat44 hand_R_MhandIKHandBlendKLOp_fkBall = this.controls_hand_R_palm.globalXfo.toMat44();
  Mat44 hand_R_MhandIKHandBlendKLOp_foot;
  Mat44 hand_R_MhandIKHandBlendKLOp_ball;
  this.hand_R_MhandIKHandBlendKLOp.solve(
    hand_R_MhandIKHandBlendKLOp_drawDebug,
    hand_R_MhandIKHandBlendKLOp_rigScale,
    hand_R_MhandIKHandBlendKLOp_blend,
    hand_R_MhandIKHandBlendKLOp_ikFoot,
    hand_R_MhandIKHandBlendKLOp_fkFoot,
    hand_R_MhandIKHandBlendKLOp_ikBall,
    hand_R_MhandIKHandBlendKLOp_fkBall,
    hand_R_MhandIKHandBlendKLOp_foot,
    hand_R_MhandIKHandBlendKLOp_ball
  );

  // retrieving value for controls_hand_R_IKHandBlendKLOpHand_out from solver hand_R_MhandIKHandBlendKLOp
  this.controls_hand_R_IKHandBlendKLOpHand_out.globalXfo = hand_R_MhandIKHandBlendKLOp_foot;

  // retrieving value for controls_hand_R_IKHandBlendKLOpPalm_out from solver hand_R_MhandIKHandBlendKLOp
  this.controls_hand_R_IKHandBlendKLOpPalm_out.globalXfo = hand_R_MhandIKHandBlendKLOp_ball;

  // solving PoseConstraint constraint controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint
  this.controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.constrainers[0] = this.controls_hand_R_IKHandBlendKLOpHand_out.globalXfo;
  this.controls_hand_R_handOut.globalXfo = this.controls_hand_R_outputs_hand_hand_To_IKHandBlendKLOpHand_out_PoseConstraint.compute(this.controls_hand_R_handOut.globalXfo);

  // solving PoseConstraint constraint controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint
  this.controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.constrainers[0] = this.controls_hand_R_IKHandBlendKLOpPalm_out.globalXfo;
  this.controls_hand_R_palmOut.globalXfo = this.controls_hand_R_outputs_palm_palm_To_IKHandBlendKLOpPalm_out_PoseConstraint.compute(this.controls_hand_R_palmOut.globalXfo);

  // solving parent child constraint controls_hand_R_index_palm01Space
  this.controls_hand_R_index_palm01Space.globalXfo = this.controls_hand_R_palmOut.globalXfo * this.controls_hand_R_index_palm01Space.xfo;

  // solving parent child constraint controls_hand_R_index_palm
  this.controls_hand_R_index_palm.globalXfo = this.controls_hand_R_index_palm01Space.globalXfo * this.controls_hand_R_index_palm.xfo;

  // solving parent child constraint controls_hand_R_index_base01Space
  this.controls_hand_R_index_base01Space.globalXfo = this.controls_hand_R_index_palm.globalXfo * this.controls_hand_R_index_base01Space.xfo;

  // solving parent child constraint controls_hand_R_index_base
  this.controls_hand_R_index_base.globalXfo = this.controls_hand_R_index_base01Space.globalXfo * this.controls_hand_R_index_base.xfo;

  // solving parent child constraint controls_hand_R_index_mid01Space
  this.controls_hand_R_index_mid01Space.globalXfo = this.controls_hand_R_index_base.globalXfo * this.controls_hand_R_index_mid01Space.xfo;

  // solving parent child constraint controls_hand_R_index_mid
  this.controls_hand_R_index_mid.globalXfo = this.controls_hand_R_index_mid01Space.globalXfo * this.controls_hand_R_index_mid.xfo;

  // solving parent child constraint controls_hand_R_index_tip01Space
  this.controls_hand_R_index_tip01Space.globalXfo = this.controls_hand_R_index_mid.globalXfo * this.controls_hand_R_index_tip01Space.xfo;

  // solving parent child constraint controls_hand_R_index_tip
  this.controls_hand_R_index_tip.globalXfo = this.controls_hand_R_index_tip01Space.globalXfo * this.controls_hand_R_index_tip.xfo;

  // solving parent child constraint controls_hand_R_middle_palm01Space
  this.controls_hand_R_middle_palm01Space.globalXfo = this.controls_hand_R_palmOut.globalXfo * this.controls_hand_R_middle_palm01Space.xfo;

  // solving parent child constraint controls_hand_R_middle_palm
  this.controls_hand_R_middle_palm.globalXfo = this.controls_hand_R_middle_palm01Space.globalXfo * this.controls_hand_R_middle_palm.xfo;

  // solving parent child constraint controls_hand_R_middle_base01Space
  this.controls_hand_R_middle_base01Space.globalXfo = this.controls_hand_R_middle_palm.globalXfo * this.controls_hand_R_middle_base01Space.xfo;

  // solving parent child constraint controls_hand_R_middle_base
  this.controls_hand_R_middle_base.globalXfo = this.controls_hand_R_middle_base01Space.globalXfo * this.controls_hand_R_middle_base.xfo;

  // solving parent child constraint controls_hand_R_middle_mid01Space
  this.controls_hand_R_middle_mid01Space.globalXfo = this.controls_hand_R_middle_base.globalXfo * this.controls_hand_R_middle_mid01Space.xfo;

  // solving parent child constraint controls_hand_R_middle_mid
  this.controls_hand_R_middle_mid.globalXfo = this.controls_hand_R_middle_mid01Space.globalXfo * this.controls_hand_R_middle_mid.xfo;

  // solving parent child constraint controls_hand_R_middle_tip01Space
  this.controls_hand_R_middle_tip01Space.globalXfo = this.controls_hand_R_middle_mid.globalXfo * this.controls_hand_R_middle_tip01Space.xfo;

  // solving parent child constraint controls_hand_R_middle_tip
  this.controls_hand_R_middle_tip.globalXfo = this.controls_hand_R_middle_tip01Space.globalXfo * this.controls_hand_R_middle_tip.xfo;

  // solving parent child constraint controls_hand_R_ring_palm01Space
  this.controls_hand_R_ring_palm01Space.globalXfo = this.controls_hand_R_palmOut.globalXfo * this.controls_hand_R_ring_palm01Space.xfo;

  // solving parent child constraint controls_hand_R_ring_palm
  this.controls_hand_R_ring_palm.globalXfo = this.controls_hand_R_ring_palm01Space.globalXfo * this.controls_hand_R_ring_palm.xfo;

  // solving parent child constraint controls_hand_R_ring_base01Space
  this.controls_hand_R_ring_base01Space.globalXfo = this.controls_hand_R_ring_palm.globalXfo * this.controls_hand_R_ring_base01Space.xfo;

  // solving parent child constraint controls_hand_R_ring_base
  this.controls_hand_R_ring_base.globalXfo = this.controls_hand_R_ring_base01Space.globalXfo * this.controls_hand_R_ring_base.xfo;

  // solving parent child constraint controls_hand_R_ring_mid01Space
  this.controls_hand_R_ring_mid01Space.globalXfo = this.controls_hand_R_ring_base.globalXfo * this.controls_hand_R_ring_mid01Space.xfo;

  // solving parent child constraint controls_hand_R_ring_mid
  this.controls_hand_R_ring_mid.globalXfo = this.controls_hand_R_ring_mid01Space.globalXfo * this.controls_hand_R_ring_mid.xfo;

  // solving parent child constraint controls_hand_R_ring_tip01Space
  this.controls_hand_R_ring_tip01Space.globalXfo = this.controls_hand_R_ring_mid.globalXfo * this.controls_hand_R_ring_tip01Space.xfo;

  // solving parent child constraint controls_hand_R_ring_tip
  this.controls_hand_R_ring_tip.globalXfo = this.controls_hand_R_ring_tip01Space.globalXfo * this.controls_hand_R_ring_tip.xfo;

  // solving parent child constraint controls_hand_R_pinky_palm01Space
  this.controls_hand_R_pinky_palm01Space.globalXfo = this.controls_hand_R_palmOut.globalXfo * this.controls_hand_R_pinky_palm01Space.xfo;

  // solving parent child constraint controls_hand_R_pinky_palm
  this.controls_hand_R_pinky_palm.globalXfo = this.controls_hand_R_pinky_palm01Space.globalXfo * this.controls_hand_R_pinky_palm.xfo;

  // solving parent child constraint controls_hand_R_pinky_base01Space
  this.controls_hand_R_pinky_base01Space.globalXfo = this.controls_hand_R_pinky_palm.globalXfo * this.controls_hand_R_pinky_base01Space.xfo;

  // solving parent child constraint controls_hand_R_pinky_base
  this.controls_hand_R_pinky_base.globalXfo = this.controls_hand_R_pinky_base01Space.globalXfo * this.controls_hand_R_pinky_base.xfo;

  // solving parent child constraint controls_hand_R_pinky_mid01Space
  this.controls_hand_R_pinky_mid01Space.globalXfo = this.controls_hand_R_pinky_base.globalXfo * this.controls_hand_R_pinky_mid01Space.xfo;

  // solving parent child constraint controls_hand_R_pinky_mid
  this.controls_hand_R_pinky_mid.globalXfo = this.controls_hand_R_pinky_mid01Space.globalXfo * this.controls_hand_R_pinky_mid.xfo;

  // solving parent child constraint controls_hand_R_pinky_tip01Space
  this.controls_hand_R_pinky_tip01Space.globalXfo = this.controls_hand_R_pinky_mid.globalXfo * this.controls_hand_R_pinky_tip01Space.xfo;

  // solving parent child constraint controls_hand_R_pinky_tip
  this.controls_hand_R_pinky_tip.globalXfo = this.controls_hand_R_pinky_tip01Space.globalXfo * this.controls_hand_R_pinky_tip.xfo;

  // solving parent child constraint controls_hand_R_thumb_palm01Space
  this.controls_hand_R_thumb_palm01Space.globalXfo = this.controls_hand_R_palmOut.globalXfo * this.controls_hand_R_thumb_palm01Space.xfo;

  // solving parent child constraint controls_hand_R_thumb_palm
  this.controls_hand_R_thumb_palm.globalXfo = this.controls_hand_R_thumb_palm01Space.globalXfo * this.controls_hand_R_thumb_palm.xfo;

  // solving parent child constraint controls_hand_R_thumb_base01Space
  this.controls_hand_R_thumb_base01Space.globalXfo = this.controls_hand_R_thumb_palm.globalXfo * this.controls_hand_R_thumb_base01Space.xfo;

  // solving parent child constraint controls_hand_R_thumb_base
  this.controls_hand_R_thumb_base.globalXfo = this.controls_hand_R_thumb_base01Space.globalXfo * this.controls_hand_R_thumb_base.xfo;

  // solving parent child constraint controls_hand_R_thumb_tip01Space
  this.controls_hand_R_thumb_tip01Space.globalXfo = this.controls_hand_R_thumb_base.globalXfo * this.controls_hand_R_thumb_tip01Space.xfo;

  // solving parent child constraint controls_hand_R_thumb_tip
  this.controls_hand_R_thumb_tip.globalXfo = this.controls_hand_R_thumb_tip01Space.globalXfo * this.controls_hand_R_thumb_tip.xfo;

  // solving parent child constraint controls_hand_R_ikGoalRef
  this.controls_hand_R_ikGoalRef.globalXfo = this.controls_hand_R_hand2.globalXfo * this.controls_hand_R_ikGoalRef.xfo;

  // solving parent child constraint controls_hand_R_ikHand
  this.controls_hand_R_ikHand.globalXfo = this.controls_hand_R_hand02Space.globalXfo * this.controls_hand_R_ikHand.xfo;

  // solving parent child constraint controls_hand_R_ikPalm
  this.controls_hand_R_ikPalm.globalXfo = this.controls_hand_R_ikHand.globalXfo * this.controls_hand_R_ikPalm.xfo;

  // solving parent child constraint deformers_hand_R_hand
  this.deformers_hand_R_hand.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_hand_R_hand.xfo;

  // solving KLSolver hand_R_RhandDeformerJointsKLOp
  Boolean hand_R_RhandDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandDeformerJointsKLOp_constrainers[](2);
  hand_R_RhandDeformerJointsKLOp_constrainers[0] = this.controls_hand_R_handOut.globalXfo.toMat44();
  hand_R_RhandDeformerJointsKLOp_constrainers[1] = this.controls_hand_R_palmOut.globalXfo.toMat44();
  Mat44 hand_R_RhandDeformerJointsKLOp_constrainees[](2);
  this.hand_R_RhandDeformerJointsKLOp.solve(
    hand_R_RhandDeformerJointsKLOp_drawDebug,
    hand_R_RhandDeformerJointsKLOp_rigScale,
    hand_R_RhandDeformerJointsKLOp_constrainers,
    hand_R_RhandDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_R_hand2 from solver hand_R_RhandDeformerJointsKLOp
  this.deformers_hand_R_hand2.globalXfo = hand_R_RhandDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_R_palm from solver hand_R_RhandDeformerJointsKLOp
  this.deformers_hand_R_palm.globalXfo = hand_R_RhandDeformerJointsKLOp_constrainees[1];

  // solving KLSolver hand_R_RhandindexDeformerJointsKLOp
  Boolean hand_R_RhandindexDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandindexDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandindexDeformerJointsKLOp_constrainers[](4);
  hand_R_RhandindexDeformerJointsKLOp_constrainers[0] = this.controls_hand_R_index_palm.globalXfo.toMat44();
  hand_R_RhandindexDeformerJointsKLOp_constrainers[1] = this.controls_hand_R_index_base.globalXfo.toMat44();
  hand_R_RhandindexDeformerJointsKLOp_constrainers[2] = this.controls_hand_R_index_mid.globalXfo.toMat44();
  hand_R_RhandindexDeformerJointsKLOp_constrainers[3] = this.controls_hand_R_index_tip.globalXfo.toMat44();
  Mat44 hand_R_RhandindexDeformerJointsKLOp_constrainees[](4);
  this.hand_R_RhandindexDeformerJointsKLOp.solve(
    hand_R_RhandindexDeformerJointsKLOp_drawDebug,
    hand_R_RhandindexDeformerJointsKLOp_rigScale,
    hand_R_RhandindexDeformerJointsKLOp_constrainers,
    hand_R_RhandindexDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_R_index_palm from solver hand_R_RhandindexDeformerJointsKLOp
  this.deformers_hand_R_index_palm.globalXfo = hand_R_RhandindexDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_R_index_base from solver hand_R_RhandindexDeformerJointsKLOp
  this.deformers_hand_R_index_base.globalXfo = hand_R_RhandindexDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_R_index_mid from solver hand_R_RhandindexDeformerJointsKLOp
  this.deformers_hand_R_index_mid.globalXfo = hand_R_RhandindexDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_hand_R_index_tip from solver hand_R_RhandindexDeformerJointsKLOp
  this.deformers_hand_R_index_tip.globalXfo = hand_R_RhandindexDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_R_RhandmiddleDeformerJointsKLOp
  Boolean hand_R_RhandmiddleDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandmiddleDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandmiddleDeformerJointsKLOp_constrainers[](4);
  hand_R_RhandmiddleDeformerJointsKLOp_constrainers[0] = this.controls_hand_R_middle_palm.globalXfo.toMat44();
  hand_R_RhandmiddleDeformerJointsKLOp_constrainers[1] = this.controls_hand_R_middle_base.globalXfo.toMat44();
  hand_R_RhandmiddleDeformerJointsKLOp_constrainers[2] = this.controls_hand_R_middle_mid.globalXfo.toMat44();
  hand_R_RhandmiddleDeformerJointsKLOp_constrainers[3] = this.controls_hand_R_middle_tip.globalXfo.toMat44();
  Mat44 hand_R_RhandmiddleDeformerJointsKLOp_constrainees[](4);
  this.hand_R_RhandmiddleDeformerJointsKLOp.solve(
    hand_R_RhandmiddleDeformerJointsKLOp_drawDebug,
    hand_R_RhandmiddleDeformerJointsKLOp_rigScale,
    hand_R_RhandmiddleDeformerJointsKLOp_constrainers,
    hand_R_RhandmiddleDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_R_middle_palm from solver hand_R_RhandmiddleDeformerJointsKLOp
  this.deformers_hand_R_middle_palm.globalXfo = hand_R_RhandmiddleDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_R_middle_base from solver hand_R_RhandmiddleDeformerJointsKLOp
  this.deformers_hand_R_middle_base.globalXfo = hand_R_RhandmiddleDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_R_middle_mid from solver hand_R_RhandmiddleDeformerJointsKLOp
  this.deformers_hand_R_middle_mid.globalXfo = hand_R_RhandmiddleDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_hand_R_middle_tip from solver hand_R_RhandmiddleDeformerJointsKLOp
  this.deformers_hand_R_middle_tip.globalXfo = hand_R_RhandmiddleDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_R_RhandringDeformerJointsKLOp
  Boolean hand_R_RhandringDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandringDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandringDeformerJointsKLOp_constrainers[](4);
  hand_R_RhandringDeformerJointsKLOp_constrainers[0] = this.controls_hand_R_ring_palm.globalXfo.toMat44();
  hand_R_RhandringDeformerJointsKLOp_constrainers[1] = this.controls_hand_R_ring_base.globalXfo.toMat44();
  hand_R_RhandringDeformerJointsKLOp_constrainers[2] = this.controls_hand_R_ring_mid.globalXfo.toMat44();
  hand_R_RhandringDeformerJointsKLOp_constrainers[3] = this.controls_hand_R_ring_tip.globalXfo.toMat44();
  Mat44 hand_R_RhandringDeformerJointsKLOp_constrainees[](4);
  this.hand_R_RhandringDeformerJointsKLOp.solve(
    hand_R_RhandringDeformerJointsKLOp_drawDebug,
    hand_R_RhandringDeformerJointsKLOp_rigScale,
    hand_R_RhandringDeformerJointsKLOp_constrainers,
    hand_R_RhandringDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_R_ring_palm from solver hand_R_RhandringDeformerJointsKLOp
  this.deformers_hand_R_ring_palm.globalXfo = hand_R_RhandringDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_R_ring_base from solver hand_R_RhandringDeformerJointsKLOp
  this.deformers_hand_R_ring_base.globalXfo = hand_R_RhandringDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_R_ring_mid from solver hand_R_RhandringDeformerJointsKLOp
  this.deformers_hand_R_ring_mid.globalXfo = hand_R_RhandringDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_hand_R_ring_tip from solver hand_R_RhandringDeformerJointsKLOp
  this.deformers_hand_R_ring_tip.globalXfo = hand_R_RhandringDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_R_RhandpinkyDeformerJointsKLOp
  Boolean hand_R_RhandpinkyDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandpinkyDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandpinkyDeformerJointsKLOp_constrainers[](4);
  hand_R_RhandpinkyDeformerJointsKLOp_constrainers[0] = this.controls_hand_R_pinky_palm.globalXfo.toMat44();
  hand_R_RhandpinkyDeformerJointsKLOp_constrainers[1] = this.controls_hand_R_pinky_base.globalXfo.toMat44();
  hand_R_RhandpinkyDeformerJointsKLOp_constrainers[2] = this.controls_hand_R_pinky_mid.globalXfo.toMat44();
  hand_R_RhandpinkyDeformerJointsKLOp_constrainers[3] = this.controls_hand_R_pinky_tip.globalXfo.toMat44();
  Mat44 hand_R_RhandpinkyDeformerJointsKLOp_constrainees[](4);
  this.hand_R_RhandpinkyDeformerJointsKLOp.solve(
    hand_R_RhandpinkyDeformerJointsKLOp_drawDebug,
    hand_R_RhandpinkyDeformerJointsKLOp_rigScale,
    hand_R_RhandpinkyDeformerJointsKLOp_constrainers,
    hand_R_RhandpinkyDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_R_pinky_palm from solver hand_R_RhandpinkyDeformerJointsKLOp
  this.deformers_hand_R_pinky_palm.globalXfo = hand_R_RhandpinkyDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_R_pinky_base from solver hand_R_RhandpinkyDeformerJointsKLOp
  this.deformers_hand_R_pinky_base.globalXfo = hand_R_RhandpinkyDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_R_pinky_mid from solver hand_R_RhandpinkyDeformerJointsKLOp
  this.deformers_hand_R_pinky_mid.globalXfo = hand_R_RhandpinkyDeformerJointsKLOp_constrainees[2];

  // retrieving value for deformers_hand_R_pinky_tip from solver hand_R_RhandpinkyDeformerJointsKLOp
  this.deformers_hand_R_pinky_tip.globalXfo = hand_R_RhandpinkyDeformerJointsKLOp_constrainees[3];

  // solving KLSolver hand_R_RhandthumbDeformerJointsKLOp
  Boolean hand_R_RhandthumbDeformerJointsKLOp_drawDebug = this.controls_hand_R_inputs_inputs_drawDebug.value;
  Scalar hand_R_RhandthumbDeformerJointsKLOp_rigScale = this.controls_hand_R_inputs_inputs_rigScale.value;
  Mat44 hand_R_RhandthumbDeformerJointsKLOp_constrainers[](3);
  hand_R_RhandthumbDeformerJointsKLOp_constrainers[0] = this.controls_hand_R_thumb_palm.globalXfo.toMat44();
  hand_R_RhandthumbDeformerJointsKLOp_constrainers[1] = this.controls_hand_R_thumb_base.globalXfo.toMat44();
  hand_R_RhandthumbDeformerJointsKLOp_constrainers[2] = this.controls_hand_R_thumb_tip.globalXfo.toMat44();
  Mat44 hand_R_RhandthumbDeformerJointsKLOp_constrainees[](3);
  this.hand_R_RhandthumbDeformerJointsKLOp.solve(
    hand_R_RhandthumbDeformerJointsKLOp_drawDebug,
    hand_R_RhandthumbDeformerJointsKLOp_rigScale,
    hand_R_RhandthumbDeformerJointsKLOp_constrainers,
    hand_R_RhandthumbDeformerJointsKLOp_constrainees
  );

  // retrieving value for deformers_hand_R_thumb_palm from solver hand_R_RhandthumbDeformerJointsKLOp
  this.deformers_hand_R_thumb_palm.globalXfo = hand_R_RhandthumbDeformerJointsKLOp_constrainees[0];

  // retrieving value for deformers_hand_R_thumb_base from solver hand_R_RhandthumbDeformerJointsKLOp
  this.deformers_hand_R_thumb_base.globalXfo = hand_R_RhandthumbDeformerJointsKLOp_constrainees[1];

  // retrieving value for deformers_hand_R_thumb_tip from solver hand_R_RhandthumbDeformerJointsKLOp
  this.deformers_hand_R_thumb_tip.globalXfo = hand_R_RhandthumbDeformerJointsKLOp_constrainees[2];

  // solving parent child constraint controls_headNeck_M_headNeck
  this.controls_headNeck_M_headNeck.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_headNeck_M_headNeck.xfo;

  // solving parent child constraint controls_headNeck_M_inputs
  this.controls_headNeck_M_inputs.globalXfo = this.controls_headNeck_M_headNeck.globalXfo * this.controls_headNeck_M_inputs.xfo;

  // solving PoseConstraint constraint controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint
  this.controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_headNeck_M_globalSRTIn.globalXfo = this.controls_headNeck_M_inputs_globalSRT_globalSRT_To_offset_PoseConstraint.compute(this.controls_headNeck_M_globalSRTIn.globalXfo);

  // solving parent child constraint controls_headNeck_M_headSpace
  this.controls_headNeck_M_headSpace.globalXfo = this.controls_headNeck_M_globalSRTIn.globalXfo * this.controls_headNeck_M_headSpace.xfo;

  // solving parent child constraint controls_headNeck_M_headIKSpace
  this.controls_headNeck_M_headIKSpace.globalXfo = this.controls_headNeck_M_globalSRTIn.globalXfo * this.controls_headNeck_M_headIKSpace.xfo;

  // solving parent child constraint controls_headNeck_M_head
  this.controls_headNeck_M_head.globalXfo = this.controls_headNeck_M_headIKSpace.globalXfo * this.controls_headNeck_M_head.xfo;

  // solving PoseConstraint constraint controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint
  this.controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers[0] = this.controls_spine_M_spineEndOut.globalXfo;
  this.controls_headNeck_M_parentSpaceIn.globalXfo = this.controls_headNeck_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.compute(this.controls_headNeck_M_parentSpaceIn.globalXfo);

  // solving PoseConstraint constraint controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint
  this.controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_headNeck_M_parentSpaceIn.globalXfo;
  this.controls_headNeck_M_neck01Space.globalXfo = this.controls_headNeck_M_neck01_neck01_To_parentSpace_PoseConstraint.compute(this.controls_headNeck_M_neck01Space.globalXfo);

  // solving parent child constraint controls_headNeck_M_neck
  this.controls_headNeck_M_neck.globalXfo = this.controls_headNeck_M_neck01Space.globalXfo * this.controls_headNeck_M_neck.xfo;

  // solving parent child constraint controls_headNeck_M_head01Space
  this.controls_headNeck_M_head01Space.globalXfo = this.controls_headNeck_M_neck.globalXfo * this.controls_headNeck_M_head01Space.xfo;

  // solving parent child constraint controls_headNeck_M_head2
  this.controls_headNeck_M_head2.globalXfo = this.controls_headNeck_M_head01Space.globalXfo * this.controls_headNeck_M_head2.xfo;

  // solving PositionConstraint constraint controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint
  this.controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint.constrainers[0] = this.controls_headNeck_M_head2.globalXfo;
  this.controls_headNeck_M_headUpVSpace.globalXfo = this.controls_headNeck_M_inputs_globalSRT_headUpV_headUpV_To_head_PositionConstraint.compute(this.controls_headNeck_M_headUpVSpace.globalXfo);

  // solving parent child constraint controls_headNeck_M_headUpV
  this.controls_headNeck_M_headUpV.globalXfo = this.controls_headNeck_M_headUpVSpace.globalXfo * this.controls_headNeck_M_headUpV.xfo;

  // solving PositionConstraint constraint controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint
  this.controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint.constrainers[0] = this.controls_headNeck_M_head2.globalXfo;
  this.controls_headNeck_M_headWorld01Space.globalXfo = this.controls_headNeck_M_inputs_globalSRT_headWorld01_headWorld01_To_head_PositionConstraint.compute(this.controls_headNeck_M_headWorld01Space.globalXfo);

  // solving parent child constraint controls_headNeck_M_headWorld
  this.controls_headNeck_M_headWorld.globalXfo = this.controls_headNeck_M_headWorld01Space.globalXfo * this.controls_headNeck_M_headWorld.xfo;

  // solving parent child constraint controls_headNeck_M_outputs
  this.controls_headNeck_M_outputs.globalXfo = this.controls_headNeck_M_headNeck.globalXfo * this.controls_headNeck_M_outputs.xfo;

  // solving KLSolver headNeck_M_NURBSNeckKLOp
  Boolean headNeck_M_NURBSNeckKLOp_drawDebug = this.controls_headNeck_M_inputs_inputs_drawDebug.value;
  Scalar headNeck_M_NURBSNeckKLOp_rigScale = this.controls_headNeck_M_inputs_inputs_rigScale.value;
  UInt32 headNeck_M_NURBSNeckKLOp_numDeformers = 4;
  Scalar headNeck_M_NURBSNeckKLOp_compressionAmt = 0;
  Mat44 headNeck_M_NURBSNeckKLOp_controlsRest[](4);
  headNeck_M_NURBSNeckKLOp_controlsRest[0] = Xfo(Vec3(0.0000, 103.9993, -1.5492), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  headNeck_M_NURBSNeckKLOp_controlsRest[1] = Xfo(Vec3(0.0000, 106.9974, -0.4188), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  headNeck_M_NURBSNeckKLOp_controlsRest[2] = Xfo(Vec3(0.0000, 114.3200, 1.3211), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  headNeck_M_NURBSNeckKLOp_controlsRest[3] = Xfo(Vec3(0.0000, 119.2143, 2.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000)).toMat44();
  Mat44 headNeck_M_NURBSNeckKLOp_controls[](4);
  headNeck_M_NURBSNeckKLOp_controls[0] = this.controls_headNeck_M_neck.globalXfo.toMat44();

  // solving parent child constraint controls_headNeck_M_neckHandleSpace
  this.controls_headNeck_M_neckHandleSpace.globalXfo = this.controls_headNeck_M_neck01Space.globalXfo * this.controls_headNeck_M_neckHandleSpace.xfo;
  headNeck_M_NURBSNeckKLOp_controls[1] = this.controls_headNeck_M_neckHandleSpace.globalXfo.toMat44();

  // solving parent child constraint controls_headNeck_M_headAlignSpace
  this.controls_headNeck_M_headAlignSpace.globalXfo = this.controls_headNeck_M_head2.globalXfo * this.controls_headNeck_M_headAlignSpace.xfo;

  // solving parent child constraint controls_headNeck_M_headHandleSpace
  this.controls_headNeck_M_headHandleSpace.globalXfo = this.controls_headNeck_M_headAlignSpace.globalXfo * this.controls_headNeck_M_headHandleSpace.xfo;
  headNeck_M_NURBSNeckKLOp_controls[2] = this.controls_headNeck_M_headHandleSpace.globalXfo.toMat44();
  headNeck_M_NURBSNeckKLOp_controls[3] = this.controls_headNeck_M_headAlignSpace.globalXfo.toMat44();
  Mat44 headNeck_M_NURBSNeckKLOp_outputs[](4);
  this.headNeck_M_NURBSNeckKLOp.solve(
    headNeck_M_NURBSNeckKLOp_drawDebug,
    headNeck_M_NURBSNeckKLOp_rigScale,
    headNeck_M_NURBSNeckKLOp_numDeformers,
    headNeck_M_NURBSNeckKLOp_compressionAmt,
    headNeck_M_NURBSNeckKLOp_controlsRest,
    headNeck_M_NURBSNeckKLOp_controls,
    headNeck_M_NURBSNeckKLOp_outputs
  );

  // retrieving value for controls_headNeck_M_neck01Out from solver headNeck_M_NURBSNeckKLOp
  this.controls_headNeck_M_neck01Out.globalXfo = headNeck_M_NURBSNeckKLOp_outputs[0];

  // retrieving value for controls_headNeck_M_neck02Out from solver headNeck_M_NURBSNeckKLOp
  this.controls_headNeck_M_neck02Out.globalXfo = headNeck_M_NURBSNeckKLOp_outputs[1];

  // retrieving value for controls_headNeck_M_neck03Out from solver headNeck_M_NURBSNeckKLOp
  this.controls_headNeck_M_neck03Out.globalXfo = headNeck_M_NURBSNeckKLOp_outputs[2];

  // retrieving value for controls_headNeck_M_neck04Out from solver headNeck_M_NURBSNeckKLOp
  this.controls_headNeck_M_neck04Out.globalXfo = headNeck_M_NURBSNeckKLOp_outputs[3];

  // solving PoseConstraint constraint controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint
  this.controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint.constrainers[0] = this.controls_headNeck_M_neck01Out.globalXfo;
  this.controls_headNeck_M_neckBaseOut.globalXfo = this.controls_headNeck_M_outputs_neckBase_neckBase_To_neck01_PoseConstraint.compute(this.controls_headNeck_M_neckBaseOut.globalXfo);

  // solving PoseConstraint constraint controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint
  this.controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint.constrainers[0] = this.controls_headNeck_M_neck04Out.globalXfo;
  this.controls_headNeck_M_neckEndOut.globalXfo = this.controls_headNeck_M_outputs_neckEnd_neckEnd_To_neck04_PoseConstraint.compute(this.controls_headNeck_M_neckEndOut.globalXfo);

  // solving parent child constraint deformers_headNeck_M_headNeck
  this.deformers_headNeck_M_headNeck.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_headNeck_M_headNeck.xfo;

  // solving KLSolver headNeck_M_neckDeformerKLOp
  Boolean headNeck_M_neckDeformerKLOp_drawDebug = this.controls_headNeck_M_inputs_inputs_drawDebug.value;
  Scalar headNeck_M_neckDeformerKLOp_rigScale = this.controls_headNeck_M_inputs_inputs_rigScale.value;
  Mat44 headNeck_M_neckDeformerKLOp_constrainers[](4);
  headNeck_M_neckDeformerKLOp_constrainers[0] = this.controls_headNeck_M_neck01Out.globalXfo.toMat44();
  headNeck_M_neckDeformerKLOp_constrainers[1] = this.controls_headNeck_M_neck02Out.globalXfo.toMat44();
  headNeck_M_neckDeformerKLOp_constrainers[2] = this.controls_headNeck_M_neck03Out.globalXfo.toMat44();
  headNeck_M_neckDeformerKLOp_constrainers[3] = this.controls_headNeck_M_neck04Out.globalXfo.toMat44();
  Mat44 headNeck_M_neckDeformerKLOp_constrainees[](4);
  this.headNeck_M_neckDeformerKLOp.solve(
    headNeck_M_neckDeformerKLOp_drawDebug,
    headNeck_M_neckDeformerKLOp_rigScale,
    headNeck_M_neckDeformerKLOp_constrainers,
    headNeck_M_neckDeformerKLOp_constrainees
  );

  // retrieving value for deformers_headNeck_M_neck01 from solver headNeck_M_neckDeformerKLOp
  this.deformers_headNeck_M_neck01.globalXfo = headNeck_M_neckDeformerKLOp_constrainees[0];

  // retrieving value for deformers_headNeck_M_neck02 from solver headNeck_M_neckDeformerKLOp
  this.deformers_headNeck_M_neck02.globalXfo = headNeck_M_neckDeformerKLOp_constrainees[1];

  // retrieving value for deformers_headNeck_M_neck03 from solver headNeck_M_neckDeformerKLOp
  this.deformers_headNeck_M_neck03.globalXfo = headNeck_M_neckDeformerKLOp_constrainees[2];

  // retrieving value for deformers_headNeck_M_head from solver headNeck_M_neckDeformerKLOp
  this.deformers_headNeck_M_head.globalXfo = headNeck_M_neckDeformerKLOp_constrainees[3];

  // solving parent child constraint controls_palmSocket_L_palmSocket
  this.controls_palmSocket_L_palmSocket.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_palmSocket_L_palmSocket.xfo;

  // solving parent child constraint controls_palmSocket_L_inputs
  this.controls_palmSocket_L_inputs.globalXfo = this.controls_palmSocket_L_palmSocket.globalXfo * this.controls_palmSocket_L_inputs.xfo;

  // solving PoseConstraint constraint controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint
  this.controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.constrainers[0] = this.controls_hand_L_palmOut.globalXfo;
  this.controls_palmSocket_L_parentSpaceIn.globalXfo = this.controls_palmSocket_L_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.compute(this.controls_palmSocket_L_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_palmSocket_L_globalSRTIn
  this.controls_palmSocket_L_globalSRTIn.globalXfo = this.controls_palmSocket_L_inputs.globalXfo * this.controls_palmSocket_L_globalSRTIn.xfo;

  // solving parent child constraint controls_palmSocket_L_outputs
  this.controls_palmSocket_L_outputs.globalXfo = this.controls_palmSocket_L_palmSocket.globalXfo * this.controls_palmSocket_L_outputs.xfo;

  // solving PoseConstraint constraint controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_palmSocket_L_parentSpaceIn.globalXfo;
  this.controls_palmSocket_L_palmSocket_offset01Space.globalXfo = this.controls_palmSocket_L_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_palmSocket_L_palmSocket_offset01Space.globalXfo);

  // solving parent child constraint controls_palmSocket_L_palmSocket_offset
  this.controls_palmSocket_L_palmSocket_offset.globalXfo = this.controls_palmSocket_L_palmSocket_offset01Space.globalXfo * this.controls_palmSocket_L_palmSocket_offset.xfo;

  // solving parent child constraint controls_palmSocket_L_palmSocket2
  this.controls_palmSocket_L_palmSocket2.globalXfo = this.controls_palmSocket_L_palmSocket_offset.globalXfo * this.controls_palmSocket_L_palmSocket2.xfo;

  // solving PoseConstraint constraint controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint
  this.controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint.constrainers[0] = this.controls_palmSocket_L_palmSocket2.globalXfo;
  this.controls_palmSocket_L_socketOut.globalXfo = this.controls_palmSocket_L_outputs_socket_socket_To_palmSocket_PoseConstraint.compute(this.controls_palmSocket_L_socketOut.globalXfo);

  // solving parent child constraint deformers_palmSocket_L_palmSocket
  this.deformers_palmSocket_L_palmSocket.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_palmSocket_L_palmSocket.xfo;

  // solving PoseConstraint constraint deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint
  this.deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint.constrainers[0] = this.controls_palmSocket_L_palmSocket2.globalXfo;
  this.deformers_palmSocket_L_palmSocket2.globalXfo = this.deformers_palmSocket_L_palmSocket_palmSocket_To_palmSocket_PoseConstraint.compute(this.deformers_palmSocket_L_palmSocket2.globalXfo);

  // solving parent child constraint controls_palmSocket_R_palmSocket
  this.controls_palmSocket_R_palmSocket.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_palmSocket_R_palmSocket.xfo;

  // solving parent child constraint controls_palmSocket_R_inputs
  this.controls_palmSocket_R_inputs.globalXfo = this.controls_palmSocket_R_palmSocket.globalXfo * this.controls_palmSocket_R_inputs.xfo;

  // solving PoseConstraint constraint controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint
  this.controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.constrainers[0] = this.controls_hand_R_palmOut.globalXfo;
  this.controls_palmSocket_R_parentSpaceIn.globalXfo = this.controls_palmSocket_R_inputs_parentSpace_parentSpace_To_palm_PoseConstraint.compute(this.controls_palmSocket_R_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_palmSocket_R_globalSRTIn
  this.controls_palmSocket_R_globalSRTIn.globalXfo = this.controls_palmSocket_R_inputs.globalXfo * this.controls_palmSocket_R_globalSRTIn.xfo;

  // solving parent child constraint controls_palmSocket_R_outputs
  this.controls_palmSocket_R_outputs.globalXfo = this.controls_palmSocket_R_palmSocket.globalXfo * this.controls_palmSocket_R_outputs.xfo;

  // solving PoseConstraint constraint controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_palmSocket_R_parentSpaceIn.globalXfo;
  this.controls_palmSocket_R_palmSocket_offset01Space.globalXfo = this.controls_palmSocket_R_palmSocket_offset01_palmSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_palmSocket_R_palmSocket_offset01Space.globalXfo);

  // solving parent child constraint controls_palmSocket_R_palmSocket_offset
  this.controls_palmSocket_R_palmSocket_offset.globalXfo = this.controls_palmSocket_R_palmSocket_offset01Space.globalXfo * this.controls_palmSocket_R_palmSocket_offset.xfo;

  // solving parent child constraint controls_palmSocket_R_palmSocket2
  this.controls_palmSocket_R_palmSocket2.globalXfo = this.controls_palmSocket_R_palmSocket_offset.globalXfo * this.controls_palmSocket_R_palmSocket2.xfo;

  // solving PoseConstraint constraint controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint
  this.controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint.constrainers[0] = this.controls_palmSocket_R_palmSocket2.globalXfo;
  this.controls_palmSocket_R_socketOut.globalXfo = this.controls_palmSocket_R_outputs_socket_socket_To_palmSocket_PoseConstraint.compute(this.controls_palmSocket_R_socketOut.globalXfo);

  // solving parent child constraint deformers_palmSocket_R_palmSocket
  this.deformers_palmSocket_R_palmSocket.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_palmSocket_R_palmSocket.xfo;

  // solving PoseConstraint constraint deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint
  this.deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint.constrainers[0] = this.controls_palmSocket_R_palmSocket2.globalXfo;
  this.deformers_palmSocket_R_palmSocket2.globalXfo = this.deformers_palmSocket_R_palmSocket_palmSocket_To_palmSocket_PoseConstraint.compute(this.deformers_palmSocket_R_palmSocket2.globalXfo);

  // solving parent child constraint controls_headSocket_M_headSocket
  this.controls_headSocket_M_headSocket.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_headSocket_M_headSocket.xfo;

  // solving parent child constraint controls_headSocket_M_inputs
  this.controls_headSocket_M_inputs.globalXfo = this.controls_headSocket_M_headSocket.globalXfo * this.controls_headSocket_M_inputs.xfo;

  // solving PoseConstraint constraint controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint
  this.controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint.constrainers[0] = this.controls_headNeck_M_neckEndOut.globalXfo;
  this.controls_headSocket_M_parentSpaceIn.globalXfo = this.controls_headSocket_M_inputs_parentSpace_parentSpace_To_neckEnd_PoseConstraint.compute(this.controls_headSocket_M_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_headSocket_M_globalSRTIn
  this.controls_headSocket_M_globalSRTIn.globalXfo = this.controls_headSocket_M_inputs.globalXfo * this.controls_headSocket_M_globalSRTIn.xfo;

  // solving parent child constraint controls_headSocket_M_outputs
  this.controls_headSocket_M_outputs.globalXfo = this.controls_headSocket_M_headSocket.globalXfo * this.controls_headSocket_M_outputs.xfo;

  // solving PoseConstraint constraint controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_headSocket_M_parentSpaceIn.globalXfo;
  this.controls_headSocket_M_headSocket_offset01Space.globalXfo = this.controls_headSocket_M_headSocket_offset01_headSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_headSocket_M_headSocket_offset01Space.globalXfo);

  // solving parent child constraint controls_headSocket_M_headSocket_offset
  this.controls_headSocket_M_headSocket_offset.globalXfo = this.controls_headSocket_M_headSocket_offset01Space.globalXfo * this.controls_headSocket_M_headSocket_offset.xfo;

  // solving parent child constraint controls_headSocket_M_headSocket2
  this.controls_headSocket_M_headSocket2.globalXfo = this.controls_headSocket_M_headSocket_offset.globalXfo * this.controls_headSocket_M_headSocket2.xfo;

  // solving PoseConstraint constraint controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint
  this.controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint.constrainers[0] = this.controls_headSocket_M_headSocket2.globalXfo;
  this.controls_headSocket_M_socketOut.globalXfo = this.controls_headSocket_M_outputs_socket_socket_To_headSocket_PoseConstraint.compute(this.controls_headSocket_M_socketOut.globalXfo);

  // solving parent child constraint deformers_headSocket_M_headSocket
  this.deformers_headSocket_M_headSocket.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_headSocket_M_headSocket.xfo;

  // solving PoseConstraint constraint deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint
  this.deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint.constrainers[0] = this.controls_headSocket_M_headSocket2.globalXfo;
  this.deformers_headSocket_M_headSocket2.globalXfo = this.deformers_headSocket_M_headSocket_headSocket_To_headSocket_PoseConstraint.compute(this.deformers_headSocket_M_headSocket2.globalXfo);

  // solving parent child constraint controls_socketA_M_socketA
  this.controls_socketA_M_socketA.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_socketA_M_socketA.xfo;

  // solving parent child constraint controls_socketA_M_inputs
  this.controls_socketA_M_inputs.globalXfo = this.controls_socketA_M_socketA.globalXfo * this.controls_socketA_M_inputs.xfo;

  // solving PoseConstraint constraint controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint
  this.controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_socketA_M_parentSpaceIn.globalXfo = this.controls_socketA_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.compute(this.controls_socketA_M_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_socketA_M_globalSRTIn
  this.controls_socketA_M_globalSRTIn.globalXfo = this.controls_socketA_M_inputs.globalXfo * this.controls_socketA_M_globalSRTIn.xfo;

  // solving parent child constraint controls_socketA_M_outputs
  this.controls_socketA_M_outputs.globalXfo = this.controls_socketA_M_socketA.globalXfo * this.controls_socketA_M_outputs.xfo;

  // solving PoseConstraint constraint controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint
  this.controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_socketA_M_parentSpaceIn.globalXfo;
  this.controls_socketA_M_socketA_offset01Space.globalXfo = this.controls_socketA_M_socketA_offset01_socketA_offset01_To_parentSpace_PoseConstraint.compute(this.controls_socketA_M_socketA_offset01Space.globalXfo);

  // solving parent child constraint controls_socketA_M_socketA_offset
  this.controls_socketA_M_socketA_offset.globalXfo = this.controls_socketA_M_socketA_offset01Space.globalXfo * this.controls_socketA_M_socketA_offset.xfo;

  // solving parent child constraint controls_socketA_M_socketA2
  this.controls_socketA_M_socketA2.globalXfo = this.controls_socketA_M_socketA_offset.globalXfo * this.controls_socketA_M_socketA2.xfo;

  // solving PoseConstraint constraint controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint
  this.controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint.constrainers[0] = this.controls_socketA_M_socketA2.globalXfo;
  this.controls_socketA_M_socketOut.globalXfo = this.controls_socketA_M_outputs_socket_socket_To_socketA_PoseConstraint.compute(this.controls_socketA_M_socketOut.globalXfo);

  // solving parent child constraint deformers_socketA_M_socketA
  this.deformers_socketA_M_socketA.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_socketA_M_socketA.xfo;

  // solving PoseConstraint constraint deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint
  this.deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint.constrainers[0] = this.controls_socketA_M_socketA2.globalXfo;
  this.deformers_socketA_M_socketA2.globalXfo = this.deformers_socketA_M_socketA_socketA_To_socketA_PoseConstraint.compute(this.deformers_socketA_M_socketA2.globalXfo);

  // solving parent child constraint controls_socketB_M_socketB
  this.controls_socketB_M_socketB.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_socketB_M_socketB.xfo;

  // solving parent child constraint controls_socketB_M_inputs
  this.controls_socketB_M_inputs.globalXfo = this.controls_socketB_M_socketB.globalXfo * this.controls_socketB_M_inputs.xfo;

  // solving PoseConstraint constraint controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint
  this.controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_socketB_M_parentSpaceIn.globalXfo = this.controls_socketB_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.compute(this.controls_socketB_M_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_socketB_M_globalSRTIn
  this.controls_socketB_M_globalSRTIn.globalXfo = this.controls_socketB_M_inputs.globalXfo * this.controls_socketB_M_globalSRTIn.xfo;

  // solving parent child constraint controls_socketB_M_outputs
  this.controls_socketB_M_outputs.globalXfo = this.controls_socketB_M_socketB.globalXfo * this.controls_socketB_M_outputs.xfo;

  // solving PoseConstraint constraint controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint
  this.controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_socketB_M_parentSpaceIn.globalXfo;
  this.controls_socketB_M_socketB_offset01Space.globalXfo = this.controls_socketB_M_socketB_offset01_socketB_offset01_To_parentSpace_PoseConstraint.compute(this.controls_socketB_M_socketB_offset01Space.globalXfo);

  // solving parent child constraint controls_socketB_M_socketB_offset
  this.controls_socketB_M_socketB_offset.globalXfo = this.controls_socketB_M_socketB_offset01Space.globalXfo * this.controls_socketB_M_socketB_offset.xfo;

  // solving parent child constraint controls_socketB_M_socketB2
  this.controls_socketB_M_socketB2.globalXfo = this.controls_socketB_M_socketB_offset.globalXfo * this.controls_socketB_M_socketB2.xfo;

  // solving PoseConstraint constraint controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint
  this.controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint.constrainers[0] = this.controls_socketB_M_socketB2.globalXfo;
  this.controls_socketB_M_socketOut.globalXfo = this.controls_socketB_M_outputs_socket_socket_To_socketB_PoseConstraint.compute(this.controls_socketB_M_socketOut.globalXfo);

  // solving parent child constraint deformers_socketB_M_socketB
  this.deformers_socketB_M_socketB.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_socketB_M_socketB.xfo;

  // solving PoseConstraint constraint deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint
  this.deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint.constrainers[0] = this.controls_socketB_M_socketB2.globalXfo;
  this.deformers_socketB_M_socketB2.globalXfo = this.deformers_socketB_M_socketB_socketB_To_socketB_PoseConstraint.compute(this.deformers_socketB_M_socketB2.globalXfo);

  // solving parent child constraint controls_socketC_M_socketC
  this.controls_socketC_M_socketC.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_socketC_M_socketC.xfo;

  // solving parent child constraint controls_socketC_M_inputs
  this.controls_socketC_M_inputs.globalXfo = this.controls_socketC_M_socketC.globalXfo * this.controls_socketC_M_inputs.xfo;

  // solving PoseConstraint constraint controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint
  this.controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.constrainers[0] = this.controls_main_M_offsetOut.globalXfo;
  this.controls_socketC_M_parentSpaceIn.globalXfo = this.controls_socketC_M_inputs_parentSpace_parentSpace_To_offset_PoseConstraint.compute(this.controls_socketC_M_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_socketC_M_globalSRTIn
  this.controls_socketC_M_globalSRTIn.globalXfo = this.controls_socketC_M_inputs.globalXfo * this.controls_socketC_M_globalSRTIn.xfo;

  // solving parent child constraint controls_socketC_M_outputs
  this.controls_socketC_M_outputs.globalXfo = this.controls_socketC_M_socketC.globalXfo * this.controls_socketC_M_outputs.xfo;

  // solving PoseConstraint constraint controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint
  this.controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_socketC_M_parentSpaceIn.globalXfo;
  this.controls_socketC_M_socketC_offset01Space.globalXfo = this.controls_socketC_M_socketC_offset01_socketC_offset01_To_parentSpace_PoseConstraint.compute(this.controls_socketC_M_socketC_offset01Space.globalXfo);

  // solving parent child constraint controls_socketC_M_socketC_offset
  this.controls_socketC_M_socketC_offset.globalXfo = this.controls_socketC_M_socketC_offset01Space.globalXfo * this.controls_socketC_M_socketC_offset.xfo;

  // solving parent child constraint controls_socketC_M_socketC2
  this.controls_socketC_M_socketC2.globalXfo = this.controls_socketC_M_socketC_offset.globalXfo * this.controls_socketC_M_socketC2.xfo;

  // solving PoseConstraint constraint controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint
  this.controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint.constrainers[0] = this.controls_socketC_M_socketC2.globalXfo;
  this.controls_socketC_M_socketOut.globalXfo = this.controls_socketC_M_outputs_socket_socket_To_socketC_PoseConstraint.compute(this.controls_socketC_M_socketOut.globalXfo);

  // solving parent child constraint deformers_socketC_M_socketC
  this.deformers_socketC_M_socketC.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_socketC_M_socketC.xfo;

  // solving PoseConstraint constraint deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint
  this.deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint.constrainers[0] = this.controls_socketC_M_socketC2.globalXfo;
  this.deformers_socketC_M_socketC2.globalXfo = this.deformers_socketC_M_socketC_socketC_To_socketC_PoseConstraint.compute(this.deformers_socketC_M_socketC2.globalXfo);

  // solving parent child constraint controls_chestSocket_M_chestSocket
  this.controls_chestSocket_M_chestSocket.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_chestSocket_M_chestSocket.xfo;

  // solving parent child constraint controls_chestSocket_M_inputs
  this.controls_chestSocket_M_inputs.globalXfo = this.controls_chestSocket_M_chestSocket.globalXfo * this.controls_chestSocket_M_inputs.xfo;

  // solving PoseConstraint constraint controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint
  this.controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.constrainers[0] = this.controls_spine_M_spineEndOut.globalXfo;
  this.controls_chestSocket_M_parentSpaceIn.globalXfo = this.controls_chestSocket_M_inputs_parentSpace_parentSpace_To_spineEnd_PoseConstraint.compute(this.controls_chestSocket_M_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_chestSocket_M_globalSRTIn
  this.controls_chestSocket_M_globalSRTIn.globalXfo = this.controls_chestSocket_M_inputs.globalXfo * this.controls_chestSocket_M_globalSRTIn.xfo;

  // solving parent child constraint controls_chestSocket_M_outputs
  this.controls_chestSocket_M_outputs.globalXfo = this.controls_chestSocket_M_chestSocket.globalXfo * this.controls_chestSocket_M_outputs.xfo;

  // solving PoseConstraint constraint controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_chestSocket_M_parentSpaceIn.globalXfo;
  this.controls_chestSocket_M_chestSocket_offset01Space.globalXfo = this.controls_chestSocket_M_chestSocket_offset01_chestSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_chestSocket_M_chestSocket_offset01Space.globalXfo);

  // solving parent child constraint controls_chestSocket_M_chestSocket_offset
  this.controls_chestSocket_M_chestSocket_offset.globalXfo = this.controls_chestSocket_M_chestSocket_offset01Space.globalXfo * this.controls_chestSocket_M_chestSocket_offset.xfo;

  // solving parent child constraint controls_chestSocket_M_chestSocket2
  this.controls_chestSocket_M_chestSocket2.globalXfo = this.controls_chestSocket_M_chestSocket_offset.globalXfo * this.controls_chestSocket_M_chestSocket2.xfo;

  // solving PoseConstraint constraint controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint
  this.controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint.constrainers[0] = this.controls_chestSocket_M_chestSocket2.globalXfo;
  this.controls_chestSocket_M_socketOut.globalXfo = this.controls_chestSocket_M_outputs_socket_socket_To_chestSocket_PoseConstraint.compute(this.controls_chestSocket_M_socketOut.globalXfo);

  // solving parent child constraint deformers_chestSocket_M_chestSocket
  this.deformers_chestSocket_M_chestSocket.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_chestSocket_M_chestSocket.xfo;

  // solving PoseConstraint constraint deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint
  this.deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint.constrainers[0] = this.controls_chestSocket_M_chestSocket2.globalXfo;
  this.deformers_chestSocket_M_chestSocket2.globalXfo = this.deformers_chestSocket_M_chestSocket_chestSocket_To_chestSocket_PoseConstraint.compute(this.deformers_chestSocket_M_chestSocket2.globalXfo);

  // solving parent child constraint controls_hipsSocket_M_hipsSocket
  this.controls_hipsSocket_M_hipsSocket.globalXfo = this.lucy_guide_controls.globalXfo * this.controls_hipsSocket_M_hipsSocket.xfo;

  // solving parent child constraint controls_hipsSocket_M_inputs
  this.controls_hipsSocket_M_inputs.globalXfo = this.controls_hipsSocket_M_hipsSocket.globalXfo * this.controls_hipsSocket_M_inputs.xfo;

  // solving PoseConstraint constraint controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint
  this.controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint.constrainers[0] = this.controls_spine_M_hipsOut.globalXfo;
  this.controls_hipsSocket_M_parentSpaceIn.globalXfo = this.controls_hipsSocket_M_inputs_parentSpace_parentSpace_To_hips_PoseConstraint.compute(this.controls_hipsSocket_M_parentSpaceIn.globalXfo);

  // solving parent child constraint controls_hipsSocket_M_globalSRTIn
  this.controls_hipsSocket_M_globalSRTIn.globalXfo = this.controls_hipsSocket_M_inputs.globalXfo * this.controls_hipsSocket_M_globalSRTIn.xfo;

  // solving parent child constraint controls_hipsSocket_M_outputs
  this.controls_hipsSocket_M_outputs.globalXfo = this.controls_hipsSocket_M_hipsSocket.globalXfo * this.controls_hipsSocket_M_outputs.xfo;

  // solving PoseConstraint constraint controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint
  this.controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint.constrainers[0] = this.controls_hipsSocket_M_parentSpaceIn.globalXfo;
  this.controls_hipsSocket_M_hipsSocket_offset01Space.globalXfo = this.controls_hipsSocket_M_hipsSocket_offset01_hipsSocket_offset01_To_parentSpace_PoseConstraint.compute(this.controls_hipsSocket_M_hipsSocket_offset01Space.globalXfo);

  // solving parent child constraint controls_hipsSocket_M_hipsSocket_offset
  this.controls_hipsSocket_M_hipsSocket_offset.globalXfo = this.controls_hipsSocket_M_hipsSocket_offset01Space.globalXfo * this.controls_hipsSocket_M_hipsSocket_offset.xfo;

  // solving parent child constraint controls_hipsSocket_M_hipsSocket2
  this.controls_hipsSocket_M_hipsSocket2.globalXfo = this.controls_hipsSocket_M_hipsSocket_offset.globalXfo * this.controls_hipsSocket_M_hipsSocket2.xfo;

  // solving PoseConstraint constraint controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint
  this.controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint.constrainers[0] = this.controls_hipsSocket_M_hipsSocket2.globalXfo;
  this.controls_hipsSocket_M_socketOut.globalXfo = this.controls_hipsSocket_M_outputs_socket_socket_To_hipsSocket_PoseConstraint.compute(this.controls_hipsSocket_M_socketOut.globalXfo);

  // solving parent child constraint deformers_hipsSocket_M_hipsSocket
  this.deformers_hipsSocket_M_hipsSocket.globalXfo = this.lucy_guide_deformers.globalXfo * this.deformers_hipsSocket_M_hipsSocket.xfo;

  // solving PoseConstraint constraint deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint
  this.deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint.constrainers[0] = this.controls_hipsSocket_M_hipsSocket2.globalXfo;
  this.deformers_hipsSocket_M_hipsSocket2.globalXfo = this.deformers_hipsSocket_M_hipsSocket_hipsSocket_To_hipsSocket_PoseConstraint.compute(this.deformers_hipsSocket_M_hipsSocket2.globalXfo);
  UInt64 timerEnd = getCurrentTicks();
  this.solveTimeMs = 1000.0 * getSecondsBetweenTicks(timerStart, timerEnd);
}

function Xfo[] KRK_lucy_guide.getJointXfos() {
  Xfo result[](78);
  result[0] = this.deformers_spine_M_spine01.globalXfo;
  result[1] = this.deformers_spine_M_spine02.globalXfo;
  result[2] = this.deformers_spine_M_spine03.globalXfo;
  result[3] = this.deformers_spine_M_spine04.globalXfo;
  result[4] = this.deformers_spine_M_spine05.globalXfo;
  result[5] = this.deformers_spine_M_spine06.globalXfo;
  result[6] = this.deformers_shoulder_L_shldr.globalXfo;
  result[7] = this.deformers_shoulder_R_shldr.globalXfo;
  result[8] = this.deformers_leg_L_upLeg.globalXfo;
  result[9] = this.deformers_leg_L_loLeg.globalXfo;
  result[10] = this.deformers_leg_L_legend.globalXfo;
  result[11] = this.deformers_foot_L_foot2.globalXfo;
  result[12] = this.deformers_foot_L_ball.globalXfo;
  result[13] = this.deformers_foot_R_foot2.globalXfo;
  result[14] = this.deformers_foot_R_ball.globalXfo;
  result[15] = this.deformers_leg_R_upLeg.globalXfo;
  result[16] = this.deformers_leg_R_loLeg.globalXfo;
  result[17] = this.deformers_leg_R_legend.globalXfo;
  result[18] = this.deformers_arm_R_upArm.globalXfo;
  result[19] = this.deformers_arm_R_loArm.globalXfo;
  result[20] = this.deformers_arm_R_armend.globalXfo;
  result[21] = this.deformers_arm_L_upArm.globalXfo;
  result[22] = this.deformers_arm_L_loArm.globalXfo;
  result[23] = this.deformers_arm_L_armend.globalXfo;
  result[24] = this.deformers_hand_L_hand2.globalXfo;
  result[25] = this.deformers_hand_L_palm.globalXfo;
  result[26] = this.deformers_hand_L_index_palm.globalXfo;
  result[27] = this.deformers_hand_L_index_base.globalXfo;
  result[28] = this.deformers_hand_L_index_mid.globalXfo;
  result[29] = this.deformers_hand_L_index_tip.globalXfo;
  result[30] = this.deformers_hand_L_middle_palm.globalXfo;
  result[31] = this.deformers_hand_L_middle_base.globalXfo;
  result[32] = this.deformers_hand_L_middle_mid.globalXfo;
  result[33] = this.deformers_hand_L_middle_tip.globalXfo;
  result[34] = this.deformers_hand_L_ring_palm.globalXfo;
  result[35] = this.deformers_hand_L_ring_base.globalXfo;
  result[36] = this.deformers_hand_L_ring_mid.globalXfo;
  result[37] = this.deformers_hand_L_ring_tip.globalXfo;
  result[38] = this.deformers_hand_L_pinky_palm.globalXfo;
  result[39] = this.deformers_hand_L_pinky_base.globalXfo;
  result[40] = this.deformers_hand_L_pinky_mid.globalXfo;
  result[41] = this.deformers_hand_L_pinky_tip.globalXfo;
  result[42] = this.deformers_hand_L_thumb_palm.globalXfo;
  result[43] = this.deformers_hand_L_thumb_base.globalXfo;
  result[44] = this.deformers_hand_L_thumb_tip.globalXfo;
  result[45] = this.deformers_hand_R_hand2.globalXfo;
  result[46] = this.deformers_hand_R_palm.globalXfo;
  result[47] = this.deformers_hand_R_index_palm.globalXfo;
  result[48] = this.deformers_hand_R_index_base.globalXfo;
  result[49] = this.deformers_hand_R_index_mid.globalXfo;
  result[50] = this.deformers_hand_R_index_tip.globalXfo;
  result[51] = this.deformers_hand_R_middle_palm.globalXfo;
  result[52] = this.deformers_hand_R_middle_base.globalXfo;
  result[53] = this.deformers_hand_R_middle_mid.globalXfo;
  result[54] = this.deformers_hand_R_middle_tip.globalXfo;
  result[55] = this.deformers_hand_R_ring_palm.globalXfo;
  result[56] = this.deformers_hand_R_ring_base.globalXfo;
  result[57] = this.deformers_hand_R_ring_mid.globalXfo;
  result[58] = this.deformers_hand_R_ring_tip.globalXfo;
  result[59] = this.deformers_hand_R_pinky_palm.globalXfo;
  result[60] = this.deformers_hand_R_pinky_base.globalXfo;
  result[61] = this.deformers_hand_R_pinky_mid.globalXfo;
  result[62] = this.deformers_hand_R_pinky_tip.globalXfo;
  result[63] = this.deformers_hand_R_thumb_palm.globalXfo;
  result[64] = this.deformers_hand_R_thumb_base.globalXfo;
  result[65] = this.deformers_hand_R_thumb_tip.globalXfo;
  result[66] = this.deformers_headNeck_M_neck01.globalXfo;
  result[67] = this.deformers_headNeck_M_neck02.globalXfo;
  result[68] = this.deformers_headNeck_M_neck03.globalXfo;
  result[69] = this.deformers_headNeck_M_head.globalXfo;
  result[70] = this.deformers_palmSocket_L_palmSocket2.globalXfo;
  result[71] = this.deformers_palmSocket_R_palmSocket2.globalXfo;
  result[72] = this.deformers_headSocket_M_headSocket2.globalXfo;
  result[73] = this.deformers_socketA_M_socketA2.globalXfo;
  result[74] = this.deformers_socketB_M_socketB2.globalXfo;
  result[75] = this.deformers_socketC_M_socketC2.globalXfo;
  result[76] = this.deformers_chestSocket_M_chestSocket2.globalXfo;
  result[77] = this.deformers_hipsSocket_M_hipsSocket2.globalXfo;
  return result;
}

function Xfo[] KRK_lucy_guide.getAllXfos() {
  Xfo result[](499);
  result[0] = this.lucy_guide.globalXfo;
  result[1] = this.lucy_guide_controls.globalXfo;
  result[2] = this.lucy_guide_deformers.globalXfo;
  result[3] = this.controls_main_M_main.globalXfo;
  result[4] = this.controls_main_M_inputs.globalXfo;
  result[5] = this.controls_main_M_outputs.globalXfo;
  result[6] = this.controls_main_M_masterOut.globalXfo;
  result[7] = this.controls_main_M_offsetOut.globalXfo;
  result[8] = this.controls_main_M_cogOut.globalXfo;
  result[9] = this.controls_main_M_master01Space.globalXfo;
  result[10] = this.controls_main_M_master.globalXfo;
  result[11] = this.controls_main_M_offset01Space.globalXfo;
  result[12] = this.controls_main_M_offset.globalXfo;
  result[13] = this.controls_main_M_cog01Space.globalXfo;
  result[14] = this.controls_main_M_cog.globalXfo;
  result[15] = this.controls_main_M_vis.globalXfo;
  result[16] = this.controls_spine_M_spine.globalXfo;
  result[17] = this.controls_spine_M_inputs.globalXfo;
  result[18] = this.controls_spine_M_parentSpaceIn.globalXfo;
  result[19] = this.controls_spine_M_outputs.globalXfo;
  result[20] = this.controls_spine_M_hipsOut.globalXfo;
  result[21] = this.controls_spine_M_spineBaseOut.globalXfo;
  result[22] = this.controls_spine_M_pelvisOut.globalXfo;
  result[23] = this.controls_spine_M_spineEndOut.globalXfo;
  result[24] = this.controls_spine_M_spine01Out.globalXfo;
  result[25] = this.controls_spine_M_spine02Out.globalXfo;
  result[26] = this.controls_spine_M_spine03Out.globalXfo;
  result[27] = this.controls_spine_M_spine04Out.globalXfo;
  result[28] = this.controls_spine_M_spine05Out.globalXfo;
  result[29] = this.controls_spine_M_spine06Out.globalXfo;
  result[30] = this.controls_spine_M_hips01Space.globalXfo;
  result[31] = this.controls_spine_M_hips.globalXfo;
  result[32] = this.controls_spine_M_pelvisSpace.globalXfo;
  result[33] = this.controls_spine_M_torso01Space.globalXfo;
  result[34] = this.controls_spine_M_torso.globalXfo;
  result[35] = this.controls_spine_M_chest01Space.globalXfo;
  result[36] = this.controls_spine_M_chest.globalXfo;
  result[37] = this.controls_spine_M_upChest01Space.globalXfo;
  result[38] = this.controls_spine_M_upChest.globalXfo;
  result[39] = this.controls_spine_M_neckSpace.globalXfo;
  result[40] = this.deformers_spine_M_spine.globalXfo;
  result[41] = this.deformers_spine_M_spine01.globalXfo;
  result[42] = this.deformers_spine_M_spine02.globalXfo;
  result[43] = this.deformers_spine_M_spine03.globalXfo;
  result[44] = this.deformers_spine_M_spine04.globalXfo;
  result[45] = this.deformers_spine_M_spine05.globalXfo;
  result[46] = this.deformers_spine_M_spine06.globalXfo;
  result[47] = this.controls_shoulder_L_shoulder.globalXfo;
  result[48] = this.controls_shoulder_L_inputs.globalXfo;
  result[49] = this.controls_shoulder_L_parentSpaceIn.globalXfo;
  result[50] = this.controls_shoulder_L_outputs.globalXfo;
  result[51] = this.controls_shoulder_L_shldrOut.globalXfo;
  result[52] = this.controls_shoulder_L_shldrEndOut.globalXfo;
  result[53] = this.controls_shoulder_L_shldr01Space.globalXfo;
  result[54] = this.controls_shoulder_L_shldr.globalXfo;
  result[55] = this.controls_shoulder_L_shldrEndSpace.globalXfo;
  result[56] = this.deformers_shoulder_L_shoulder.globalXfo;
  result[57] = this.deformers_shoulder_L_shldr.globalXfo;
  result[58] = this.controls_shoulder_R_shoulder.globalXfo;
  result[59] = this.controls_shoulder_R_inputs.globalXfo;
  result[60] = this.controls_shoulder_R_parentSpaceIn.globalXfo;
  result[61] = this.controls_shoulder_R_outputs.globalXfo;
  result[62] = this.controls_shoulder_R_shldrOut.globalXfo;
  result[63] = this.controls_shoulder_R_shldrEndOut.globalXfo;
  result[64] = this.controls_shoulder_R_shldr01Space.globalXfo;
  result[65] = this.controls_shoulder_R_shldr.globalXfo;
  result[66] = this.controls_shoulder_R_shldrEndSpace.globalXfo;
  result[67] = this.deformers_shoulder_R_shoulder.globalXfo;
  result[68] = this.deformers_shoulder_R_shldr.globalXfo;
  result[69] = this.controls_leg_L_leg.globalXfo;
  result[70] = this.controls_leg_L_inputs.globalXfo;
  result[71] = this.controls_leg_L_globalSRTIn.globalXfo;
  result[72] = this.controls_leg_L_parentSpaceIn.globalXfo;
  result[73] = this.controls_leg_L_ikGoalInputIn.globalXfo;
  result[74] = this.controls_leg_L_outputs.globalXfo;
  result[75] = this.controls_leg_L_uplimbOut.globalXfo;
  result[76] = this.controls_leg_L_lolimbOut.globalXfo;
  result[77] = this.controls_leg_L_endlimbOut.globalXfo;
  result[78] = this.controls_leg_L_upLeg01Space.globalXfo;
  result[79] = this.controls_leg_L_upLeg.globalXfo;
  result[80] = this.controls_leg_L_loLeg01Space.globalXfo;
  result[81] = this.controls_leg_L_loLeg.globalXfo;
  result[82] = this.controls_leg_L_footIKSpace.globalXfo;
  result[83] = this.controls_leg_L_footIK.globalXfo;
  result[84] = this.controls_leg_L_legUpV01Space.globalXfo;
  result[85] = this.controls_leg_L_legUpV.globalXfo;
  result[86] = this.controls_leg_L_legUpVIKSpace.globalXfo;
  result[87] = this.controls_leg_L_legIKMasterSpace.globalXfo;
  result[88] = this.deformers_leg_L_leg.globalXfo;
  result[89] = this.deformers_leg_L_upLeg.globalXfo;
  result[90] = this.deformers_leg_L_loLeg.globalXfo;
  result[91] = this.deformers_leg_L_legend.globalXfo;
  result[92] = this.controls_foot_L_foot.globalXfo;
  result[93] = this.controls_foot_L_inputs.globalXfo;
  result[94] = this.controls_foot_L_globalSRTIn.globalXfo;
  result[95] = this.controls_foot_L_parentSpaceIn.globalXfo;
  result[96] = this.controls_foot_L_outputs.globalXfo;
  result[97] = this.controls_foot_L_footOut.globalXfo;
  result[98] = this.controls_foot_L_ballOut.globalXfo;
  result[99] = this.controls_foot_L_ikgoalOut.globalXfo;
  result[100] = this.controls_foot_L_footRockerFoot_out.globalXfo;
  result[101] = this.controls_foot_L_footRockerBall_out.globalXfo;
  result[102] = this.controls_foot_L_IKFootBlendKLOpFoot_out.globalXfo;
  result[103] = this.controls_foot_L_IKFootBlendKLOpBall_out.globalXfo;
  result[104] = this.controls_foot_L_foot01Space.globalXfo;
  result[105] = this.controls_foot_L_foot2.globalXfo;
  result[106] = this.controls_foot_L_ikGoalRef.globalXfo;
  result[107] = this.controls_foot_L_ballJoint.globalXfo;
  result[108] = this.controls_foot_L_footJoint.globalXfo;
  result[109] = this.controls_foot_L_heelPivot.globalXfo;
  result[110] = this.controls_foot_L_ballPivot.globalXfo;
  result[111] = this.controls_foot_L_ballTipPivot.globalXfo;
  result[112] = this.controls_foot_L_innerPivot.globalXfo;
  result[113] = this.controls_foot_L_outerPivot.globalXfo;
  result[114] = this.controls_foot_L_foot02Space.globalXfo;
  result[115] = this.controls_foot_L_foot3.globalXfo;
  result[116] = this.controls_foot_L_ball01Space.globalXfo;
  result[117] = this.controls_foot_L_ball.globalXfo;
  result[118] = this.deformers_foot_L_foot.globalXfo;
  result[119] = this.deformers_foot_L_foot2.globalXfo;
  result[120] = this.deformers_foot_L_ball.globalXfo;
  result[121] = this.controls_foot_R_foot.globalXfo;
  result[122] = this.controls_foot_R_inputs.globalXfo;
  result[123] = this.controls_foot_R_globalSRTIn.globalXfo;
  result[124] = this.controls_foot_R_parentSpaceIn.globalXfo;
  result[125] = this.controls_foot_R_outputs.globalXfo;
  result[126] = this.controls_foot_R_footOut.globalXfo;
  result[127] = this.controls_foot_R_ballOut.globalXfo;
  result[128] = this.controls_foot_R_ikgoalOut.globalXfo;
  result[129] = this.controls_foot_R_footRockerFoot_out.globalXfo;
  result[130] = this.controls_foot_R_footRockerBall_out.globalXfo;
  result[131] = this.controls_foot_R_IKFootBlendKLOpFoot_out.globalXfo;
  result[132] = this.controls_foot_R_IKFootBlendKLOpBall_out.globalXfo;
  result[133] = this.controls_foot_R_foot01Space.globalXfo;
  result[134] = this.controls_foot_R_foot2.globalXfo;
  result[135] = this.controls_foot_R_ikGoalRef.globalXfo;
  result[136] = this.controls_foot_R_ballJoint.globalXfo;
  result[137] = this.controls_foot_R_footJoint.globalXfo;
  result[138] = this.controls_foot_R_heelPivot.globalXfo;
  result[139] = this.controls_foot_R_ballPivot.globalXfo;
  result[140] = this.controls_foot_R_ballTipPivot.globalXfo;
  result[141] = this.controls_foot_R_innerPivot.globalXfo;
  result[142] = this.controls_foot_R_outerPivot.globalXfo;
  result[143] = this.controls_foot_R_foot02Space.globalXfo;
  result[144] = this.controls_foot_R_foot3.globalXfo;
  result[145] = this.controls_foot_R_ball01Space.globalXfo;
  result[146] = this.controls_foot_R_ball.globalXfo;
  result[147] = this.deformers_foot_R_foot.globalXfo;
  result[148] = this.deformers_foot_R_foot2.globalXfo;
  result[149] = this.deformers_foot_R_ball.globalXfo;
  result[150] = this.controls_leg_R_leg.globalXfo;
  result[151] = this.controls_leg_R_inputs.globalXfo;
  result[152] = this.controls_leg_R_globalSRTIn.globalXfo;
  result[153] = this.controls_leg_R_parentSpaceIn.globalXfo;
  result[154] = this.controls_leg_R_ikGoalInputIn.globalXfo;
  result[155] = this.controls_leg_R_outputs.globalXfo;
  result[156] = this.controls_leg_R_uplimbOut.globalXfo;
  result[157] = this.controls_leg_R_lolimbOut.globalXfo;
  result[158] = this.controls_leg_R_endlimbOut.globalXfo;
  result[159] = this.controls_leg_R_upLeg01Space.globalXfo;
  result[160] = this.controls_leg_R_upLeg.globalXfo;
  result[161] = this.controls_leg_R_loLeg01Space.globalXfo;
  result[162] = this.controls_leg_R_loLeg.globalXfo;
  result[163] = this.controls_leg_R_footIKSpace.globalXfo;
  result[164] = this.controls_leg_R_footIK.globalXfo;
  result[165] = this.controls_leg_R_legUpV01Space.globalXfo;
  result[166] = this.controls_leg_R_legUpV.globalXfo;
  result[167] = this.controls_leg_R_legUpVIKSpace.globalXfo;
  result[168] = this.controls_leg_R_legIKMasterSpace.globalXfo;
  result[169] = this.deformers_leg_R_leg.globalXfo;
  result[170] = this.deformers_leg_R_upLeg.globalXfo;
  result[171] = this.deformers_leg_R_loLeg.globalXfo;
  result[172] = this.deformers_leg_R_legend.globalXfo;
  result[173] = this.controls_arm_R_arm.globalXfo;
  result[174] = this.controls_arm_R_inputs.globalXfo;
  result[175] = this.controls_arm_R_globalSRTIn.globalXfo;
  result[176] = this.controls_arm_R_parentSpaceIn.globalXfo;
  result[177] = this.controls_arm_R_ikGoalInputIn.globalXfo;
  result[178] = this.controls_arm_R_outputs.globalXfo;
  result[179] = this.controls_arm_R_uplimbOut.globalXfo;
  result[180] = this.controls_arm_R_lolimbOut.globalXfo;
  result[181] = this.controls_arm_R_endlimbOut.globalXfo;
  result[182] = this.controls_arm_R_upArm01Space.globalXfo;
  result[183] = this.controls_arm_R_upArm.globalXfo;
  result[184] = this.controls_arm_R_loArm01Space.globalXfo;
  result[185] = this.controls_arm_R_loArm.globalXfo;
  result[186] = this.controls_arm_R_handIKSpace.globalXfo;
  result[187] = this.controls_arm_R_handIK.globalXfo;
  result[188] = this.controls_arm_R_armUpV01Space.globalXfo;
  result[189] = this.controls_arm_R_armUpV.globalXfo;
  result[190] = this.controls_arm_R_armUpVIKSpace.globalXfo;
  result[191] = this.controls_arm_R_armIKMasterSpace.globalXfo;
  result[192] = this.deformers_arm_R_arm.globalXfo;
  result[193] = this.deformers_arm_R_upArm.globalXfo;
  result[194] = this.deformers_arm_R_loArm.globalXfo;
  result[195] = this.deformers_arm_R_armend.globalXfo;
  result[196] = this.controls_arm_L_arm.globalXfo;
  result[197] = this.controls_arm_L_inputs.globalXfo;
  result[198] = this.controls_arm_L_globalSRTIn.globalXfo;
  result[199] = this.controls_arm_L_parentSpaceIn.globalXfo;
  result[200] = this.controls_arm_L_ikGoalInputIn.globalXfo;
  result[201] = this.controls_arm_L_outputs.globalXfo;
  result[202] = this.controls_arm_L_uplimbOut.globalXfo;
  result[203] = this.controls_arm_L_lolimbOut.globalXfo;
  result[204] = this.controls_arm_L_endlimbOut.globalXfo;
  result[205] = this.controls_arm_L_upArm01Space.globalXfo;
  result[206] = this.controls_arm_L_upArm.globalXfo;
  result[207] = this.controls_arm_L_loArm01Space.globalXfo;
  result[208] = this.controls_arm_L_loArm.globalXfo;
  result[209] = this.controls_arm_L_handIKSpace.globalXfo;
  result[210] = this.controls_arm_L_handIK.globalXfo;
  result[211] = this.controls_arm_L_armUpV01Space.globalXfo;
  result[212] = this.controls_arm_L_armUpV.globalXfo;
  result[213] = this.controls_arm_L_armUpVIKSpace.globalXfo;
  result[214] = this.controls_arm_L_armIKMasterSpace.globalXfo;
  result[215] = this.deformers_arm_L_arm.globalXfo;
  result[216] = this.deformers_arm_L_upArm.globalXfo;
  result[217] = this.deformers_arm_L_loArm.globalXfo;
  result[218] = this.deformers_arm_L_armend.globalXfo;
  result[219] = this.controls_hand_L_hand.globalXfo;
  result[220] = this.controls_hand_L_inputs.globalXfo;
  result[221] = this.controls_hand_L_globalSRTIn.globalXfo;
  result[222] = this.controls_hand_L_parentSpaceIn.globalXfo;
  result[223] = this.controls_hand_L_outputs.globalXfo;
  result[224] = this.controls_hand_L_handOut.globalXfo;
  result[225] = this.controls_hand_L_palmOut.globalXfo;
  result[226] = this.controls_hand_L_index_palm01Space.globalXfo;
  result[227] = this.controls_hand_L_index_palm.globalXfo;
  result[228] = this.controls_hand_L_index_base01Space.globalXfo;
  result[229] = this.controls_hand_L_index_base.globalXfo;
  result[230] = this.controls_hand_L_index_mid01Space.globalXfo;
  result[231] = this.controls_hand_L_index_mid.globalXfo;
  result[232] = this.controls_hand_L_index_tip01Space.globalXfo;
  result[233] = this.controls_hand_L_index_tip.globalXfo;
  result[234] = this.controls_hand_L_middle_palm01Space.globalXfo;
  result[235] = this.controls_hand_L_middle_palm.globalXfo;
  result[236] = this.controls_hand_L_middle_base01Space.globalXfo;
  result[237] = this.controls_hand_L_middle_base.globalXfo;
  result[238] = this.controls_hand_L_middle_mid01Space.globalXfo;
  result[239] = this.controls_hand_L_middle_mid.globalXfo;
  result[240] = this.controls_hand_L_middle_tip01Space.globalXfo;
  result[241] = this.controls_hand_L_middle_tip.globalXfo;
  result[242] = this.controls_hand_L_ring_palm01Space.globalXfo;
  result[243] = this.controls_hand_L_ring_palm.globalXfo;
  result[244] = this.controls_hand_L_ring_base01Space.globalXfo;
  result[245] = this.controls_hand_L_ring_base.globalXfo;
  result[246] = this.controls_hand_L_ring_mid01Space.globalXfo;
  result[247] = this.controls_hand_L_ring_mid.globalXfo;
  result[248] = this.controls_hand_L_ring_tip01Space.globalXfo;
  result[249] = this.controls_hand_L_ring_tip.globalXfo;
  result[250] = this.controls_hand_L_pinky_palm01Space.globalXfo;
  result[251] = this.controls_hand_L_pinky_palm.globalXfo;
  result[252] = this.controls_hand_L_pinky_base01Space.globalXfo;
  result[253] = this.controls_hand_L_pinky_base.globalXfo;
  result[254] = this.controls_hand_L_pinky_mid01Space.globalXfo;
  result[255] = this.controls_hand_L_pinky_mid.globalXfo;
  result[256] = this.controls_hand_L_pinky_tip01Space.globalXfo;
  result[257] = this.controls_hand_L_pinky_tip.globalXfo;
  result[258] = this.controls_hand_L_thumb_palm01Space.globalXfo;
  result[259] = this.controls_hand_L_thumb_palm.globalXfo;
  result[260] = this.controls_hand_L_thumb_base01Space.globalXfo;
  result[261] = this.controls_hand_L_thumb_base.globalXfo;
  result[262] = this.controls_hand_L_thumb_tip01Space.globalXfo;
  result[263] = this.controls_hand_L_thumb_tip.globalXfo;
  result[264] = this.controls_hand_L_ikgoalOut.globalXfo;
  result[265] = this.controls_hand_L_IKHandBlendKLOpHand_out.globalXfo;
  result[266] = this.controls_hand_L_IKHandBlendKLOpPalm_out.globalXfo;
  result[267] = this.controls_hand_L_hand01Space.globalXfo;
  result[268] = this.controls_hand_L_hand2.globalXfo;
  result[269] = this.controls_hand_L_handIKSpace.globalXfo;
  result[270] = this.controls_hand_L_palmIKSpace.globalXfo;
  result[271] = this.controls_hand_L_ikGoalRef.globalXfo;
  result[272] = this.controls_hand_L_hand02Space.globalXfo;
  result[273] = this.controls_hand_L_hand3.globalXfo;
  result[274] = this.controls_hand_L_palm01Space.globalXfo;
  result[275] = this.controls_hand_L_palm.globalXfo;
  result[276] = this.controls_hand_L_ikHand.globalXfo;
  result[277] = this.controls_hand_L_ikPalm.globalXfo;
  result[278] = this.deformers_hand_L_hand.globalXfo;
  result[279] = this.deformers_hand_L_hand2.globalXfo;
  result[280] = this.deformers_hand_L_palm.globalXfo;
  result[281] = this.deformers_hand_L_index_palm.globalXfo;
  result[282] = this.deformers_hand_L_index_base.globalXfo;
  result[283] = this.deformers_hand_L_index_mid.globalXfo;
  result[284] = this.deformers_hand_L_index_tip.globalXfo;
  result[285] = this.deformers_hand_L_middle_palm.globalXfo;
  result[286] = this.deformers_hand_L_middle_base.globalXfo;
  result[287] = this.deformers_hand_L_middle_mid.globalXfo;
  result[288] = this.deformers_hand_L_middle_tip.globalXfo;
  result[289] = this.deformers_hand_L_ring_palm.globalXfo;
  result[290] = this.deformers_hand_L_ring_base.globalXfo;
  result[291] = this.deformers_hand_L_ring_mid.globalXfo;
  result[292] = this.deformers_hand_L_ring_tip.globalXfo;
  result[293] = this.deformers_hand_L_pinky_palm.globalXfo;
  result[294] = this.deformers_hand_L_pinky_base.globalXfo;
  result[295] = this.deformers_hand_L_pinky_mid.globalXfo;
  result[296] = this.deformers_hand_L_pinky_tip.globalXfo;
  result[297] = this.deformers_hand_L_thumb_palm.globalXfo;
  result[298] = this.deformers_hand_L_thumb_base.globalXfo;
  result[299] = this.deformers_hand_L_thumb_tip.globalXfo;
  result[300] = this.controls_hand_R_hand.globalXfo;
  result[301] = this.controls_hand_R_inputs.globalXfo;
  result[302] = this.controls_hand_R_globalSRTIn.globalXfo;
  result[303] = this.controls_hand_R_parentSpaceIn.globalXfo;
  result[304] = this.controls_hand_R_outputs.globalXfo;
  result[305] = this.controls_hand_R_handOut.globalXfo;
  result[306] = this.controls_hand_R_palmOut.globalXfo;
  result[307] = this.controls_hand_R_index_palm01Space.globalXfo;
  result[308] = this.controls_hand_R_index_palm.globalXfo;
  result[309] = this.controls_hand_R_index_base01Space.globalXfo;
  result[310] = this.controls_hand_R_index_base.globalXfo;
  result[311] = this.controls_hand_R_index_mid01Space.globalXfo;
  result[312] = this.controls_hand_R_index_mid.globalXfo;
  result[313] = this.controls_hand_R_index_tip01Space.globalXfo;
  result[314] = this.controls_hand_R_index_tip.globalXfo;
  result[315] = this.controls_hand_R_middle_palm01Space.globalXfo;
  result[316] = this.controls_hand_R_middle_palm.globalXfo;
  result[317] = this.controls_hand_R_middle_base01Space.globalXfo;
  result[318] = this.controls_hand_R_middle_base.globalXfo;
  result[319] = this.controls_hand_R_middle_mid01Space.globalXfo;
  result[320] = this.controls_hand_R_middle_mid.globalXfo;
  result[321] = this.controls_hand_R_middle_tip01Space.globalXfo;
  result[322] = this.controls_hand_R_middle_tip.globalXfo;
  result[323] = this.controls_hand_R_ring_palm01Space.globalXfo;
  result[324] = this.controls_hand_R_ring_palm.globalXfo;
  result[325] = this.controls_hand_R_ring_base01Space.globalXfo;
  result[326] = this.controls_hand_R_ring_base.globalXfo;
  result[327] = this.controls_hand_R_ring_mid01Space.globalXfo;
  result[328] = this.controls_hand_R_ring_mid.globalXfo;
  result[329] = this.controls_hand_R_ring_tip01Space.globalXfo;
  result[330] = this.controls_hand_R_ring_tip.globalXfo;
  result[331] = this.controls_hand_R_pinky_palm01Space.globalXfo;
  result[332] = this.controls_hand_R_pinky_palm.globalXfo;
  result[333] = this.controls_hand_R_pinky_base01Space.globalXfo;
  result[334] = this.controls_hand_R_pinky_base.globalXfo;
  result[335] = this.controls_hand_R_pinky_mid01Space.globalXfo;
  result[336] = this.controls_hand_R_pinky_mid.globalXfo;
  result[337] = this.controls_hand_R_pinky_tip01Space.globalXfo;
  result[338] = this.controls_hand_R_pinky_tip.globalXfo;
  result[339] = this.controls_hand_R_thumb_palm01Space.globalXfo;
  result[340] = this.controls_hand_R_thumb_palm.globalXfo;
  result[341] = this.controls_hand_R_thumb_base01Space.globalXfo;
  result[342] = this.controls_hand_R_thumb_base.globalXfo;
  result[343] = this.controls_hand_R_thumb_tip01Space.globalXfo;
  result[344] = this.controls_hand_R_thumb_tip.globalXfo;
  result[345] = this.controls_hand_R_ikgoalOut.globalXfo;
  result[346] = this.controls_hand_R_IKHandBlendKLOpHand_out.globalXfo;
  result[347] = this.controls_hand_R_IKHandBlendKLOpPalm_out.globalXfo;
  result[348] = this.controls_hand_R_hand01Space.globalXfo;
  result[349] = this.controls_hand_R_hand2.globalXfo;
  result[350] = this.controls_hand_R_handIKSpace.globalXfo;
  result[351] = this.controls_hand_R_palmIKSpace.globalXfo;
  result[352] = this.controls_hand_R_ikGoalRef.globalXfo;
  result[353] = this.controls_hand_R_hand02Space.globalXfo;
  result[354] = this.controls_hand_R_hand3.globalXfo;
  result[355] = this.controls_hand_R_palm01Space.globalXfo;
  result[356] = this.controls_hand_R_palm.globalXfo;
  result[357] = this.controls_hand_R_ikHand.globalXfo;
  result[358] = this.controls_hand_R_ikPalm.globalXfo;
  result[359] = this.deformers_hand_R_hand.globalXfo;
  result[360] = this.deformers_hand_R_hand2.globalXfo;
  result[361] = this.deformers_hand_R_palm.globalXfo;
  result[362] = this.deformers_hand_R_index_palm.globalXfo;
  result[363] = this.deformers_hand_R_index_base.globalXfo;
  result[364] = this.deformers_hand_R_index_mid.globalXfo;
  result[365] = this.deformers_hand_R_index_tip.globalXfo;
  result[366] = this.deformers_hand_R_middle_palm.globalXfo;
  result[367] = this.deformers_hand_R_middle_base.globalXfo;
  result[368] = this.deformers_hand_R_middle_mid.globalXfo;
  result[369] = this.deformers_hand_R_middle_tip.globalXfo;
  result[370] = this.deformers_hand_R_ring_palm.globalXfo;
  result[371] = this.deformers_hand_R_ring_base.globalXfo;
  result[372] = this.deformers_hand_R_ring_mid.globalXfo;
  result[373] = this.deformers_hand_R_ring_tip.globalXfo;
  result[374] = this.deformers_hand_R_pinky_palm.globalXfo;
  result[375] = this.deformers_hand_R_pinky_base.globalXfo;
  result[376] = this.deformers_hand_R_pinky_mid.globalXfo;
  result[377] = this.deformers_hand_R_pinky_tip.globalXfo;
  result[378] = this.deformers_hand_R_thumb_palm.globalXfo;
  result[379] = this.deformers_hand_R_thumb_base.globalXfo;
  result[380] = this.deformers_hand_R_thumb_tip.globalXfo;
  result[381] = this.controls_headNeck_M_headNeck.globalXfo;
  result[382] = this.controls_headNeck_M_inputs.globalXfo;
  result[383] = this.controls_headNeck_M_globalSRTIn.globalXfo;
  result[384] = this.controls_headNeck_M_headSpace.globalXfo;
  result[385] = this.controls_headNeck_M_headIKSpace.globalXfo;
  result[386] = this.controls_headNeck_M_head.globalXfo;
  result[387] = this.controls_headNeck_M_headUpVSpace.globalXfo;
  result[388] = this.controls_headNeck_M_headUpV.globalXfo;
  result[389] = this.controls_headNeck_M_headWorld01Space.globalXfo;
  result[390] = this.controls_headNeck_M_headWorld.globalXfo;
  result[391] = this.controls_headNeck_M_parentSpaceIn.globalXfo;
  result[392] = this.controls_headNeck_M_outputs.globalXfo;
  result[393] = this.controls_headNeck_M_neckBaseOut.globalXfo;
  result[394] = this.controls_headNeck_M_neckEndOut.globalXfo;
  result[395] = this.controls_headNeck_M_neck01Out.globalXfo;
  result[396] = this.controls_headNeck_M_neck02Out.globalXfo;
  result[397] = this.controls_headNeck_M_neck03Out.globalXfo;
  result[398] = this.controls_headNeck_M_neck04Out.globalXfo;
  result[399] = this.controls_headNeck_M_neck01Space.globalXfo;
  result[400] = this.controls_headNeck_M_neck.globalXfo;
  result[401] = this.controls_headNeck_M_head01Space.globalXfo;
  result[402] = this.controls_headNeck_M_head2.globalXfo;
  result[403] = this.controls_headNeck_M_headAlignSpace.globalXfo;
  result[404] = this.controls_headNeck_M_headHandleSpace.globalXfo;
  result[405] = this.controls_headNeck_M_neckHandleSpace.globalXfo;
  result[406] = this.deformers_headNeck_M_headNeck.globalXfo;
  result[407] = this.deformers_headNeck_M_neck01.globalXfo;
  result[408] = this.deformers_headNeck_M_neck02.globalXfo;
  result[409] = this.deformers_headNeck_M_neck03.globalXfo;
  result[410] = this.deformers_headNeck_M_head.globalXfo;
  result[411] = this.controls_palmSocket_L_palmSocket.globalXfo;
  result[412] = this.controls_palmSocket_L_inputs.globalXfo;
  result[413] = this.controls_palmSocket_L_parentSpaceIn.globalXfo;
  result[414] = this.controls_palmSocket_L_globalSRTIn.globalXfo;
  result[415] = this.controls_palmSocket_L_outputs.globalXfo;
  result[416] = this.controls_palmSocket_L_socketOut.globalXfo;
  result[417] = this.controls_palmSocket_L_palmSocket_offset01Space.globalXfo;
  result[418] = this.controls_palmSocket_L_palmSocket_offset.globalXfo;
  result[419] = this.controls_palmSocket_L_palmSocket2.globalXfo;
  result[420] = this.deformers_palmSocket_L_palmSocket.globalXfo;
  result[421] = this.deformers_palmSocket_L_palmSocket2.globalXfo;
  result[422] = this.controls_palmSocket_R_palmSocket.globalXfo;
  result[423] = this.controls_palmSocket_R_inputs.globalXfo;
  result[424] = this.controls_palmSocket_R_parentSpaceIn.globalXfo;
  result[425] = this.controls_palmSocket_R_globalSRTIn.globalXfo;
  result[426] = this.controls_palmSocket_R_outputs.globalXfo;
  result[427] = this.controls_palmSocket_R_socketOut.globalXfo;
  result[428] = this.controls_palmSocket_R_palmSocket_offset01Space.globalXfo;
  result[429] = this.controls_palmSocket_R_palmSocket_offset.globalXfo;
  result[430] = this.controls_palmSocket_R_palmSocket2.globalXfo;
  result[431] = this.deformers_palmSocket_R_palmSocket.globalXfo;
  result[432] = this.deformers_palmSocket_R_palmSocket2.globalXfo;
  result[433] = this.controls_headSocket_M_headSocket.globalXfo;
  result[434] = this.controls_headSocket_M_inputs.globalXfo;
  result[435] = this.controls_headSocket_M_parentSpaceIn.globalXfo;
  result[436] = this.controls_headSocket_M_globalSRTIn.globalXfo;
  result[437] = this.controls_headSocket_M_outputs.globalXfo;
  result[438] = this.controls_headSocket_M_socketOut.globalXfo;
  result[439] = this.controls_headSocket_M_headSocket_offset01Space.globalXfo;
  result[440] = this.controls_headSocket_M_headSocket_offset.globalXfo;
  result[441] = this.controls_headSocket_M_headSocket2.globalXfo;
  result[442] = this.deformers_headSocket_M_headSocket.globalXfo;
  result[443] = this.deformers_headSocket_M_headSocket2.globalXfo;
  result[444] = this.controls_socketA_M_socketA.globalXfo;
  result[445] = this.controls_socketA_M_inputs.globalXfo;
  result[446] = this.controls_socketA_M_parentSpaceIn.globalXfo;
  result[447] = this.controls_socketA_M_globalSRTIn.globalXfo;
  result[448] = this.controls_socketA_M_outputs.globalXfo;
  result[449] = this.controls_socketA_M_socketOut.globalXfo;
  result[450] = this.controls_socketA_M_socketA_offset01Space.globalXfo;
  result[451] = this.controls_socketA_M_socketA_offset.globalXfo;
  result[452] = this.controls_socketA_M_socketA2.globalXfo;
  result[453] = this.deformers_socketA_M_socketA.globalXfo;
  result[454] = this.deformers_socketA_M_socketA2.globalXfo;
  result[455] = this.controls_socketB_M_socketB.globalXfo;
  result[456] = this.controls_socketB_M_inputs.globalXfo;
  result[457] = this.controls_socketB_M_parentSpaceIn.globalXfo;
  result[458] = this.controls_socketB_M_globalSRTIn.globalXfo;
  result[459] = this.controls_socketB_M_outputs.globalXfo;
  result[460] = this.controls_socketB_M_socketOut.globalXfo;
  result[461] = this.controls_socketB_M_socketB_offset01Space.globalXfo;
  result[462] = this.controls_socketB_M_socketB_offset.globalXfo;
  result[463] = this.controls_socketB_M_socketB2.globalXfo;
  result[464] = this.deformers_socketB_M_socketB.globalXfo;
  result[465] = this.deformers_socketB_M_socketB2.globalXfo;
  result[466] = this.controls_socketC_M_socketC.globalXfo;
  result[467] = this.controls_socketC_M_inputs.globalXfo;
  result[468] = this.controls_socketC_M_parentSpaceIn.globalXfo;
  result[469] = this.controls_socketC_M_globalSRTIn.globalXfo;
  result[470] = this.controls_socketC_M_outputs.globalXfo;
  result[471] = this.controls_socketC_M_socketOut.globalXfo;
  result[472] = this.controls_socketC_M_socketC_offset01Space.globalXfo;
  result[473] = this.controls_socketC_M_socketC_offset.globalXfo;
  result[474] = this.controls_socketC_M_socketC2.globalXfo;
  result[475] = this.deformers_socketC_M_socketC.globalXfo;
  result[476] = this.deformers_socketC_M_socketC2.globalXfo;
  result[477] = this.controls_chestSocket_M_chestSocket.globalXfo;
  result[478] = this.controls_chestSocket_M_inputs.globalXfo;
  result[479] = this.controls_chestSocket_M_parentSpaceIn.globalXfo;
  result[480] = this.controls_chestSocket_M_globalSRTIn.globalXfo;
  result[481] = this.controls_chestSocket_M_outputs.globalXfo;
  result[482] = this.controls_chestSocket_M_socketOut.globalXfo;
  result[483] = this.controls_chestSocket_M_chestSocket_offset01Space.globalXfo;
  result[484] = this.controls_chestSocket_M_chestSocket_offset.globalXfo;
  result[485] = this.controls_chestSocket_M_chestSocket2.globalXfo;
  result[486] = this.deformers_chestSocket_M_chestSocket.globalXfo;
  result[487] = this.deformers_chestSocket_M_chestSocket2.globalXfo;
  result[488] = this.controls_hipsSocket_M_hipsSocket.globalXfo;
  result[489] = this.controls_hipsSocket_M_inputs.globalXfo;
  result[490] = this.controls_hipsSocket_M_parentSpaceIn.globalXfo;
  result[491] = this.controls_hipsSocket_M_globalSRTIn.globalXfo;
  result[492] = this.controls_hipsSocket_M_outputs.globalXfo;
  result[493] = this.controls_hipsSocket_M_socketOut.globalXfo;
  result[494] = this.controls_hipsSocket_M_hipsSocket_offset01Space.globalXfo;
  result[495] = this.controls_hipsSocket_M_hipsSocket_offset.globalXfo;
  result[496] = this.controls_hipsSocket_M_hipsSocket2.globalXfo;
  result[497] = this.deformers_hipsSocket_M_hipsSocket.globalXfo;
  result[498] = this.deformers_hipsSocket_M_hipsSocket2.globalXfo;
  return result;
}

function KRK_lucy_guide.resetPose!() {
  // reset objects
  this.lucy_guide.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.lucy_guide_controls.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.lucy_guide_deformers.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_main.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_masterOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_offsetOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_cogOut.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_master01Space.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_master.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_offset01Space.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_cog01Space.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_cog.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_main_M_vis.xfo = Xfo(Vec3(0.0000, 0.0000, 22.3214), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spine.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_hipsOut.xfo = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spineBaseOut.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.5000, 0.5000, 0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_pelvisOut.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spineEndOut.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spine01Out.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.5000, 0.5000, 0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spine02Out.xfo = Xfo(Vec3(-0.0000, 75.3644, -0.0257), Quat(0.5003, 0.4997, 0.5003, 0.4997), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spine03Out.xfo = Xfo(Vec3(-0.0000, 81.7917, -0.0135), Quat(0.5005, 0.4995, 0.5005, 0.4995), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spine04Out.xfo = Xfo(Vec3(-0.0000, 87.9343, -0.0163), Quat(0.4982, 0.5018, 0.4982, 0.5018), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spine05Out.xfo = Xfo(Vec3(-0.0000, 94.5157, -0.3298), Quat(0.4780, 0.5211, 0.4780, 0.5211), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_spine06Out.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_hips01Space.xfo = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_hips.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_pelvisSpace.xfo = Xfo(Vec3(0.0000, -7.7393, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_torso01Space.xfo = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_torso.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_chest01Space.xfo = Xfo(Vec3(-0.0000, 9.3221, 0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_chest.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_upChest01Space.xfo = Xfo(Vec3(0.0000, 11.0526, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_upChest.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_spine_M_neckSpace.xfo = Xfo(Vec3(0.0000, 6.2169, -1.5247), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_spine_M_spine.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_spine_M_spine01.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.5000, 0.5000, 0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_spine_M_spine02.xfo = Xfo(Vec3(-0.0000, 75.3644, -0.0257), Quat(0.5003, 0.4997, 0.5003, 0.4997), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_spine_M_spine03.xfo = Xfo(Vec3(-0.0000, 81.7917, -0.0135), Quat(0.5005, 0.4995, 0.5005, 0.4995), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_spine_M_spine04.xfo = Xfo(Vec3(-0.0000, 87.9343, -0.0163), Quat(0.4982, 0.5018, 0.4982, 0.5018), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_spine_M_spine05.xfo = Xfo(Vec3(-0.0000, 94.5157, -0.3298), Quat(0.4780, 0.5211, 0.4780, 0.5211), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_spine_M_spine06.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_shoulder.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_shldrOut.xfo = Xfo(Vec3(0.2526, 100.0091, -1.4864), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_shldrEndOut.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_shldr01Space.xfo = Xfo(Vec3(0.2526, 100.0091, -1.4864), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_shldr.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_L_shldrEndSpace.xfo = Xfo(Vec3(8.0433, 0.0000, -0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_shoulder_L_shoulder.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_shoulder_L_shldr.xfo = Xfo(Vec3(0.2526, 100.0091, -1.4864), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_shoulder.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_shldrOut.xfo = Xfo(Vec3(-0.2526, 100.0091, -1.4864), Quat(-0.0012, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_shldrEndOut.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(-0.0012, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_shldr01Space.xfo = Xfo(Vec3(-0.2526, 100.0091, -1.4864), Quat(-0.0012, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_shldr.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_shoulder_R_shldrEndSpace.xfo = Xfo(Vec3(-8.0433, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_shoulder_R_shoulder.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_shoulder_R_shldr.xfo = Xfo(Vec3(-0.2526, 100.0091, -1.4864), Quat(-0.0012, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_leg.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_ikGoalInputIn.xfo = Xfo(Vec3(4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_uplimbOut.xfo = Xfo(Vec3(4.3470, 67.3301, -0.0319), Quat(0.0147, -0.0119, -0.7070, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_lolimbOut.xfo = Xfo(Vec3(4.3470, 36.0395, -0.1537), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_endlimbOut.xfo = Xfo(Vec3(4.3732, 3.5091, -0.9774), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_upLeg01Space.xfo = Xfo(Vec3(4.3470, 67.3301, -0.0319), Quat(0.0147, -0.0119, -0.7070, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_upLeg.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_loLeg01Space.xfo = Xfo(Vec3(31.2909, 0.0000, -0.0000), Quat(0.0000, 0.0107, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_loLeg.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_footIKSpace.xfo = Xfo(Vec3(4.3733, 3.5091, -0.9774), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_footIK.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_legUpV01Space.xfo = Xfo(Vec3(1.9908, 34.4546, 62.3636), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_legUpV.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_legUpVIKSpace.xfo = Xfo(Vec3(1.9908, 34.4546, 62.3636), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_L_legIKMasterSpace.xfo = Xfo(Vec3(1.9908, 34.4546, 62.3636), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_leg_L_leg.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_leg_L_upLeg.xfo = Xfo(Vec3(4.3470, 67.3301, -0.0319), Quat(0.0147, -0.0119, -0.7070, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_leg_L_loLeg.xfo = Xfo(Vec3(4.3470, 36.0395, -0.1537), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_leg_L_legend.xfo = Xfo(Vec3(4.3732, 3.5091, -0.9774), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_parentSpaceIn.xfo = Xfo(Vec3(4.3732, 3.5091, -0.9774), Quat(0.0223, -0.0044, -0.7068, 0.7070), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_footOut.xfo = Xfo(Vec3(4.3474, 3.5091, -0.9726), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_ballOut.xfo = Xfo(Vec3(4.3474, 1.1225, 7.0850), Quat(-0.5000, -0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_ikgoalOut.xfo = Xfo(Vec3(4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_footRockerFoot_out.xfo = Xfo(Vec3(4.3474, 3.5091, -0.9726), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_footRockerBall_out.xfo = Xfo(Vec3(4.3474, 1.1225, 7.0850), Quat(-0.5000, -0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_IKFootBlendKLOpFoot_out.xfo = Xfo(Vec3(4.3474, 3.5091, -0.9726), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_IKFootBlendKLOpBall_out.xfo = Xfo(Vec3(4.3474, 1.1225, 7.0850), Quat(-0.5000, -0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot01Space.xfo = Xfo(Vec3(4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_ikGoalRef.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_ballJoint.xfo = Xfo(Vec3(0.0000, 1.1225, 9.9869), Quat(-0.5000, -0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_footJoint.xfo = Xfo(Vec3(0.0000, 3.5091, 1.9293), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_heelPivot.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_ballPivot.xfo = Xfo(Vec3(0.0000, 1.1225, 9.9869), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_ballTipPivot.xfo = Xfo(Vec3(0.0000, 0.0000, 16.0535), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_innerPivot.xfo = Xfo(Vec3(-1.5892, 0.0000, 10.0864), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_outerPivot.xfo = Xfo(Vec3(3.0663, 0.0000, 9.9695), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot02Space.xfo = Xfo(Vec3(4.3474, 3.5091, -0.9726), Quat(-0.4231, -0.4231, -0.5666, 0.5666), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_foot3.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_ball01Space.xfo = Xfo(Vec3(8.4037, -0.0000, 0.0000), Quat(-0.0000, -0.1435, -0.0000, 0.9897), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_L_ball.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_foot_L_foot.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_foot_L_foot2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_foot_L_ball.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_parentSpaceIn.xfo = Xfo(Vec3(-4.3470, 3.5092, -0.9730), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_footOut.xfo = Xfo(Vec3(-4.3474, 3.5091, -0.9726), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_ballOut.xfo = Xfo(Vec3(-4.3474, 1.1225, 7.0850), Quat(0.5000, 0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_ikgoalOut.xfo = Xfo(Vec3(-4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_footRockerFoot_out.xfo = Xfo(Vec3(-4.3474, 3.5091, -0.9726), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_footRockerBall_out.xfo = Xfo(Vec3(-4.3474, 1.1225, 7.0850), Quat(0.5000, 0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_IKFootBlendKLOpFoot_out.xfo = Xfo(Vec3(-4.3474, 3.5091, -0.9726), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_IKFootBlendKLOpBall_out.xfo = Xfo(Vec3(-4.3474, 1.1225, 7.0850), Quat(0.5000, 0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot01Space.xfo = Xfo(Vec3(-4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_ikGoalRef.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_ballJoint.xfo = Xfo(Vec3(0.0000, 1.1225, 9.9869), Quat(0.5000, 0.5000, -0.5000, 0.5000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_footJoint.xfo = Xfo(Vec3(0.0000, 3.5091, 1.9293), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_heelPivot.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(-0.0000, -0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_ballPivot.xfo = Xfo(Vec3(0.0000, 1.1225, 9.9869), Quat(-0.0000, -0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_ballTipPivot.xfo = Xfo(Vec3(0.0000, 0.0000, 16.0535), Quat(-0.0000, -0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_innerPivot.xfo = Xfo(Vec3(1.5892, 0.0000, 10.0864), Quat(-0.0000, -0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_outerPivot.xfo = Xfo(Vec3(-3.0663, 0.0000, 9.9695), Quat(-0.0000, -0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot02Space.xfo = Xfo(Vec3(-4.3474, 3.5091, -0.9726), Quat(0.5666, 0.5666, -0.4231, 0.4231), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_foot3.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_ball01Space.xfo = Xfo(Vec3(-8.4037, 0.0000, -0.0000), Quat(0.0000, -0.1435, 0.0000, 0.9897), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_foot_R_ball.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_foot_R_foot.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_foot_R_foot2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_foot_R_ball.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_leg.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 67.3301, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_ikGoalInputIn.xfo = Xfo(Vec3(-4.3474, 0.0000, -2.9019), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_uplimbOut.xfo = Xfo(Vec3(-4.3470, 67.3301, -0.0319), Quat(0.7071, 0.7071, 0.0014, -0.0014), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_lolimbOut.xfo = Xfo(Vec3(-4.3470, 36.0395, -0.1537), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_endlimbOut.xfo = Xfo(Vec3(-4.3470, 3.5092, -0.9730), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_upLeg01Space.xfo = Xfo(Vec3(-4.3470, 67.3301, -0.0319), Quat(0.7071, 0.7071, 0.0014, -0.0014), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_upLeg.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_loLeg01Space.xfo = Xfo(Vec3(-31.2909, -0.0000, 0.0000), Quat(-0.0000, 0.0106, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_loLeg.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_footIKSpace.xfo = Xfo(Vec3(-4.3470, 3.5091, -0.9726), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_footIK.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_legUpV01Space.xfo = Xfo(Vec3(-4.3470, 34.4645, 62.4082), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_legUpV.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_legUpVIKSpace.xfo = Xfo(Vec3(-4.3470, 34.4645, 62.4082), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_leg_R_legIKMasterSpace.xfo = Xfo(Vec3(-4.3470, 34.4645, 62.4082), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_leg_R_leg.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_leg_R_upLeg.xfo = Xfo(Vec3(-4.3470, 67.3301, -0.0319), Quat(0.7071, 0.7071, 0.0014, -0.0014), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_leg_R_loLeg.xfo = Xfo(Vec3(-4.3470, 36.0395, -0.1537), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_leg_R_legend.xfo = Xfo(Vec3(-4.3470, 3.5092, -0.9730), Quat(0.7071, 0.7071, 0.0089, -0.0089), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_arm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_parentSpaceIn.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(-0.0012, -0.0002, 0.0005, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_ikGoalInputIn.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_uplimbOut.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(0.0000, 0.0104, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_lolimbOut.xfo = Xfo(Vec3(-29.9201, 100.0007, -1.0390), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_endlimbOut.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_upArm01Space.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(0.0000, 0.0104, -0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_upArm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_loArm01Space.xfo = Xfo(Vec3(-21.6288, 0.0000, 0.0000), Quat(0.0000, 0.0005, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_loArm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_handIKSpace.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 1.0000, 0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_handIK.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_armUpV01Space.xfo = Xfo(Vec3(-30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_armUpV.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_armUpVIKSpace.xfo = Xfo(Vec3(-30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_R_armIKMasterSpace.xfo = Xfo(Vec3(-30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_arm_R_arm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_arm_R_upArm.xfo = Xfo(Vec3(-8.2960, 100.0007, -1.4900), Quat(0.0000, 0.0104, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_arm_R_loArm.xfo = Xfo(Vec3(-29.9201, 100.0007, -1.0390), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_arm_R_armend.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_arm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_parentSpaceIn.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(1.0000, -0.0005, -0.0002, 0.0073), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_ikGoalInputIn.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_uplimbOut.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(0.9999, 0.0000, 0.0104, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_lolimbOut.xfo = Xfo(Vec3(29.9201, 100.0007, -1.0390), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_endlimbOut.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_upArm01Space.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(0.9999, 0.0000, 0.0104, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_upArm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_loArm01Space.xfo = Xfo(Vec3(21.6288, 0.0000, -0.0000), Quat(0.0000, 0.0005, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_loArm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_handIKSpace.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_handIK.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_armUpV01Space.xfo = Xfo(Vec3(30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_armUpV.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_armUpVIKSpace.xfo = Xfo(Vec3(30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_arm_L_armIKMasterSpace.xfo = Xfo(Vec3(30.8694, 100.0007, -44.2862), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_arm_L_arm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_arm_L_upArm.xfo = Xfo(Vec3(8.2960, 100.0007, -1.4900), Quat(0.9999, 0.0000, 0.0104, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_arm_L_loArm.xfo = Xfo(Vec3(29.9201, 100.0007, -1.0390), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_arm_L_armend.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_parentSpaceIn.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.9999, 0.0000, 0.0110, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_handOut.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(-0.7059, -0.0452, -0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_palmOut.xfo = Xfo(Vec3(57.1711, 100.0361, 0.2500), Quat(-0.7071, 0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_index_palm01Space.xfo = Xfo(Vec3(-5.0192, -0.7313, -0.0736), Quat(-0.0012, -0.0177, -0.0705, 0.9974), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_index_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_index_base01Space.xfo = Xfo(Vec3(5.5906, 0.0000, -0.0000), Quat(0.0002, 0.0178, 0.0156, 0.9997), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_index_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_index_mid01Space.xfo = Xfo(Vec3(3.1504, -0.0000, 0.0000), Quat(0.0000, 0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_index_mid.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_index_tip01Space.xfo = Xfo(Vec3(2.7266, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_index_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_middle_palm01Space.xfo = Xfo(Vec3(-4.9419, 0.3024, -0.0702), Quat(-0.0003, -0.0157, 0.0040, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_middle_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_middle_base01Space.xfo = Xfo(Vec3(5.5668, 0.0000, 0.0000), Quat(-0.0001, 0.0157, -0.0059, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_middle_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_middle_mid01Space.xfo = Xfo(Vec3(3.7396, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_middle_mid.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_middle_tip01Space.xfo = Xfo(Vec3(2.6936, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_middle_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ring_palm01Space.xfo = Xfo(Vec3(-5.1035, 1.4569, -0.0677), Quat(0.0002, -0.0144, 0.0547, 0.9984), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ring_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ring_base01Space.xfo = Xfo(Vec3(5.4416, 0.0000, 0.0000), Quat(-0.0000, 0.0144, -0.0033, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ring_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ring_mid01Space.xfo = Xfo(Vec3(3.6038, -0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ring_mid.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ring_tip01Space.xfo = Xfo(Vec3(2.5582, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ring_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_pinky_palm01Space.xfo = Xfo(Vec3(-5.2746, 2.3531, -0.0607), Quat(0.0000, -0.0088, 0.0983, 0.9951), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_pinky_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_pinky_base01Space.xfo = Xfo(Vec3(5.4749, 0.0000, -0.0000), Quat(0.0001, 0.0088, 0.0151, 0.9998), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_pinky_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_pinky_mid01Space.xfo = Xfo(Vec3(3.1339, 0.0000, 0.0000), Quat(0.0000, -0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_pinky_mid.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_pinky_tip01Space.xfo = Xfo(Vec3(2.0334, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_pinky_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_thumb_palm01Space.xfo = Xfo(Vec3(-5.1516, -0.7724, -0.9577), Quat(0.0887, 0.1725, -0.4400, 0.8768), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_thumb_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_thumb_base01Space.xfo = Xfo(Vec3(2.3875, -0.0000, 0.0000), Quat(-0.0018, 0.0199, 0.0041, 0.9998), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_thumb_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_thumb_tip01Space.xfo = Xfo(Vec3(3.2506, -0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_thumb_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ikgoalOut.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_IKHandBlendKLOpHand_out.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(-0.7059, -0.0452, -0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_IKHandBlendKLOpPalm_out.xfo = Xfo(Vec3(57.1711, 100.0361, 0.2500), Quat(-0.7071, 0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand01Space.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_handIKSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(-0.7059, -0.0452, -0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_palmIKSpace.xfo = Xfo(Vec3(6.8608, 0.0000, 0.0000), Quat(0.0002, 0.0026, 0.0632, 0.9980), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ikGoalRef.xfo = Xfo(Vec3(-50.3620, -100.0007, 0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand02Space.xfo = Xfo(Vec3(50.3620, 100.0007, -0.5902), Quat(-0.7059, -0.0452, -0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_hand3.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_palm01Space.xfo = Xfo(Vec3(-50.4263, -6.7537, -99.7417), Quat(0.7059, 0.0452, 0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_palm.xfo = Xfo(Vec3(57.1711, 100.0361, 0.2500), Quat(-0.7071, 0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ikHand.xfo = Xfo(Vec3(-50.4263, -6.7537, -99.7417), Quat(0.7059, 0.0452, 0.0416, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_L_ikPalm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_hand.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_hand2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_index_palm.xfo = Xfo(Vec3(52.1546, 99.9626, 0.9998), Quat(-0.7062, -0.0611, -0.0360, 0.7045), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_index_base.xfo = Xfo(Vec3(57.6890, 100.1612, 1.7650), Quat(-0.7061, -0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_index_mid.xfo = Xfo(Vec3(60.8216, 100.1612, 2.0992), Quat(-0.7061, -0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_index_tip.xfo = Xfo(Vec3(63.5328, 100.1612, 2.3885), Quat(-0.7061, -0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_middle_palm.xfo = Xfo(Vec3(52.2281, 99.9660, -0.0343), Quat(-0.7072, -0.0070, 0.0153, 0.7068), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_middle_base.xfo = Xfo(Vec3(57.7918, 100.1413, -0.0997), Quat(-0.7073, 0.0000, 0.0000, 0.7069), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_middle_mid.xfo = Xfo(Vec3(61.5314, 100.1413, -0.0997), Quat(-0.7073, 0.0000, 0.0000, 0.7069), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_middle_tip.xfo = Xfo(Vec3(64.2250, 100.1413, -0.0997), Quat(-0.7073, 0.0000, 0.0000, 0.7069), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_ring_palm.xfo = Xfo(Vec3(52.0622, 99.9685, -1.1881), Quat(-0.7058, 0.0298, 0.0501, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_ring_base.xfo = Xfo(Vec3(57.4668, 100.1249, -1.8021), Quat(-0.7065, 0.0376, 0.0377, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_ring_mid.xfo = Xfo(Vec3(61.0502, 100.1249, -2.1852), Quat(-0.7065, 0.0376, 0.0377, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_ring_tip.xfo = Xfo(Vec3(63.5939, 100.1249, -2.4572), Quat(-0.7065, 0.0376, 0.0377, 0.7057), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_pinky_palm.xfo = Xfo(Vec3(51.8879, 99.9755, -2.0838), Quat(-0.7035, 0.0645, 0.0770, 0.7036), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_pinky_base.xfo = Xfo(Vec3(57.2523, 100.0718, -3.1742), Quat(-0.7030, 0.0813, 0.0815, 0.7018), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_pinky_mid.xfo = Xfo(Vec3(60.3031, 100.0718, -3.8909), Quat(-0.7030, 0.0813, 0.0815, 0.7018), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_pinky_tip.xfo = Xfo(Vec3(62.2826, 100.0718, -4.3559), Quat(-0.7030, 0.0813, 0.0815, 0.7018), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_thumb_palm.xfo = Xfo(Vec3(52.0223, 99.0784, 1.0413), Quat(-0.5581, -0.1879, -0.4321, 0.6830), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_thumb_base.xfo = Xfo(Vec3(53.3497, 98.1699, 2.8056), Quat(-0.5513, -0.1712, -0.4407, 0.6874), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_L_thumb_tip.xfo = Xfo(Vec3(55.1474, 96.8142, 5.1501), Quat(-0.5513, -0.1712, -0.4407, 0.6874), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_parentSpaceIn.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0110, 0.0000, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_handOut.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.7057, 0.0416, -0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_palmOut.xfo = Xfo(Vec3(-57.1711, 100.0361, 0.2500), Quat(0.7071, -0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_index_palm01Space.xfo = Xfo(Vec3(5.0192, 0.7313, 0.0736), Quat(-0.0012, -0.0177, -0.0705, 0.9974), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_index_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_index_base01Space.xfo = Xfo(Vec3(-5.5906, 0.0000, 0.0000), Quat(0.0002, 0.0178, 0.0156, 0.9997), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_index_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_index_mid01Space.xfo = Xfo(Vec3(-3.1504, 0.0000, 0.0000), Quat(0.0000, 0.0000, -0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_index_mid.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_index_tip01Space.xfo = Xfo(Vec3(-2.7266, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_index_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_middle_palm01Space.xfo = Xfo(Vec3(4.9419, -0.3024, 0.0702), Quat(-0.0003, -0.0157, 0.0040, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_middle_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_middle_base01Space.xfo = Xfo(Vec3(-5.5668, -0.0000, 0.0000), Quat(-0.0001, 0.0157, -0.0059, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_middle_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_middle_mid01Space.xfo = Xfo(Vec3(-3.7396, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_middle_mid.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_middle_tip01Space.xfo = Xfo(Vec3(-2.6936, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_middle_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ring_palm01Space.xfo = Xfo(Vec3(5.1035, -1.4569, 0.0677), Quat(0.0002, -0.0144, 0.0547, 0.9984), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ring_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ring_base01Space.xfo = Xfo(Vec3(-5.4416, 0.0000, 0.0000), Quat(-0.0000, 0.0144, -0.0033, 0.9999), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ring_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ring_mid01Space.xfo = Xfo(Vec3(-3.6038, -0.0000, -0.0000), Quat(-0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ring_mid.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ring_tip01Space.xfo = Xfo(Vec3(-2.5582, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ring_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_pinky_palm01Space.xfo = Xfo(Vec3(5.2746, -2.3531, 0.0607), Quat(0.0000, -0.0088, 0.0983, 0.9951), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_pinky_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_pinky_base01Space.xfo = Xfo(Vec3(-5.4749, -0.0000, 0.0000), Quat(0.0001, 0.0088, 0.0151, 0.9998), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_pinky_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_pinky_mid01Space.xfo = Xfo(Vec3(-3.1339, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_pinky_mid.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_pinky_tip01Space.xfo = Xfo(Vec3(-2.0334, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_pinky_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_thumb_palm01Space.xfo = Xfo(Vec3(5.1516, 0.7724, 0.9577), Quat(0.0887, 0.1725, -0.4400, 0.8768), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_thumb_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_thumb_base01Space.xfo = Xfo(Vec3(-2.3875, -0.0000, 0.0000), Quat(-0.0018, 0.0199, 0.0041, 0.9998), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_thumb_base.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_thumb_tip01Space.xfo = Xfo(Vec3(-3.2506, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_thumb_tip.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ikgoalOut.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_IKHandBlendKLOpHand_out.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.7057, 0.0416, -0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_IKHandBlendKLOpPalm_out.xfo = Xfo(Vec3(-57.1711, 100.0361, 0.2500), Quat(0.7071, -0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand01Space.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_handIKSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.7057, 0.0416, -0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_palmIKSpace.xfo = Xfo(Vec3(-6.8608, 0.0000, 0.0000), Quat(0.0002, 0.0026, 0.0632, 0.9980), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ikGoalRef.xfo = Xfo(Vec3(50.3620, -100.0007, 0.5902), Quat(0.0000, -0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand02Space.xfo = Xfo(Vec3(-50.3620, 100.0007, -0.5902), Quat(0.7057, 0.0416, -0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_hand3.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_palm01Space.xfo = Xfo(Vec3(50.4263, 6.7537, 99.7417), Quat(-0.7057, -0.0416, 0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_palm.xfo = Xfo(Vec3(-57.1711, 100.0361, 0.2500), Quat(0.7071, -0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ikHand.xfo = Xfo(Vec3(50.4263, 6.7537, 99.7417), Quat(-0.7057, -0.0416, 0.0452, 0.7059), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hand_R_ikPalm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_hand.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_hand2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_palm.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_index_palm.xfo = Xfo(Vec3(-52.1546, 99.9626, 0.9998), Quat(0.7045, 0.0360, -0.0611, 0.7062), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_index_base.xfo = Xfo(Vec3(-57.6890, 100.1612, 1.7650), Quat(0.7061, 0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_index_mid.xfo = Xfo(Vec3(-60.8216, 100.1612, 2.0992), Quat(0.7061, 0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_index_tip.xfo = Xfo(Vec3(-63.5328, 100.1612, 2.3885), Quat(0.7061, 0.0376, -0.0376, 0.7061), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_middle_palm.xfo = Xfo(Vec3(-52.2281, 99.9660, -0.0343), Quat(0.7068, -0.0153, -0.0070, 0.7072), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_middle_base.xfo = Xfo(Vec3(-57.7918, 100.1413, -0.0997), Quat(0.7069, 0.0000, 0.0000, 0.7073), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_middle_mid.xfo = Xfo(Vec3(-61.5314, 100.1413, -0.0997), Quat(0.7069, 0.0000, 0.0000, 0.7073), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_middle_tip.xfo = Xfo(Vec3(-64.2250, 100.1413, -0.0997), Quat(0.7069, 0.0000, 0.0000, 0.7073), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_ring_palm.xfo = Xfo(Vec3(-52.0622, 99.9685, -1.1881), Quat(0.7061, -0.0501, 0.0298, 0.7058), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_ring_base.xfo = Xfo(Vec3(-57.4668, 100.1249, -1.8021), Quat(0.7057, -0.0377, 0.0376, 0.7065), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_ring_mid.xfo = Xfo(Vec3(-61.0502, 100.1249, -2.1852), Quat(0.7057, -0.0377, 0.0376, 0.7065), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_ring_tip.xfo = Xfo(Vec3(-63.5939, 100.1249, -2.4572), Quat(0.7057, -0.0377, 0.0376, 0.7065), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_pinky_palm.xfo = Xfo(Vec3(-51.8879, 99.9755, -2.0838), Quat(0.7036, -0.0770, 0.0645, 0.7035), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_pinky_base.xfo = Xfo(Vec3(-57.2523, 100.0718, -3.1742), Quat(0.7018, -0.0815, 0.0813, 0.7030), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_pinky_mid.xfo = Xfo(Vec3(-60.3031, 100.0718, -3.8909), Quat(0.7018, -0.0815, 0.0813, 0.7030), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_pinky_tip.xfo = Xfo(Vec3(-62.2826, 100.0718, -4.3559), Quat(0.7018, -0.0815, 0.0813, 0.7030), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_thumb_palm.xfo = Xfo(Vec3(-52.0223, 99.0784, 1.0413), Quat(0.6830, 0.4321, -0.1879, 0.5581), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_thumb_base.xfo = Xfo(Vec3(-53.3497, 98.1699, 2.8056), Quat(0.6874, 0.4407, -0.1712, 0.5513), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hand_R_thumb_tip.xfo = Xfo(Vec3(-55.1474, 96.8142, 5.1501), Quat(0.6874, 0.4407, -0.1712, 0.5513), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headNeck.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headIKSpace.xfo = Xfo(Vec3(0.0000, 119.2143, 32.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_head.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headUpVSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headUpV.xfo = Xfo(Vec3(0.0000, 149.2143, 2.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headWorld01Space.xfo = Xfo(Vec3(0.0000, 119.2143, 2.3427), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headWorld.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neckBaseOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neckEndOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neck01Out.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neck02Out.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neck03Out.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neck04Out.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neck01Space.xfo = Xfo(Vec3(0.0000, 103.9993, -1.5492), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neck.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_head01Space.xfo = Xfo(Vec3(0.0000, 15.2150, 3.8920), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_head2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headAlignSpace.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_headHandleSpace.xfo = Xfo(Vec3(0.0000, -4.8943, -1.0217), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headNeck_M_neckHandleSpace.xfo = Xfo(Vec3(0.0000, 2.9981, 1.1304), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_headNeck_M_headNeck.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_headNeck_M_neck01.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_headNeck_M_neck02.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_headNeck_M_neck03.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_headNeck_M_head.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_palmSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_parentSpaceIn.xfo = Xfo(Vec3(57.1711, 100.0361, 0.2500), Quat(-0.7071, 0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_socketOut.xfo = Xfo(Vec3(57.0000, 98.0000, 0.0000), Quat(0.0000, 0.0000, -0.7071, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_palmSocket_offset01Space.xfo = Xfo(Vec3(57.0000, 98.0000, 0.0000), Quat(0.0000, 0.0000, -0.7071, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_palmSocket_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_L_palmSocket2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_palmSocket_L_palmSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_palmSocket_L_palmSocket2.xfo = Xfo(Vec3(57.0000, 98.0000, 0.0000), Quat(0.0000, 0.0000, -0.7071, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_palmSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_parentSpaceIn.xfo = Xfo(Vec3(-57.1711, 100.0361, 0.2500), Quat(0.7071, -0.0013, 0.0013, 0.7071), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_socketOut.xfo = Xfo(Vec3(-57.0000, 98.0000, 0.0000), Quat(0.7071, -0.7071, -0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_palmSocket_offset01Space.xfo = Xfo(Vec3(-57.0000, 98.0000, 0.0000), Quat(0.7071, -0.7071, -0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_palmSocket_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_palmSocket_R_palmSocket2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_palmSocket_R_palmSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_palmSocket_R_palmSocket2.xfo = Xfo(Vec3(-57.0000, 98.0000, 0.0000), Quat(0.7071, -0.7071, -0.0000, 0.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_headSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_socketOut.xfo = Xfo(Vec3(-0.0000, 136.5005, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_headSocket_offset01Space.xfo = Xfo(Vec3(-0.0000, 136.5005, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_headSocket_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_headSocket_M_headSocket2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_headSocket_M_headSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_headSocket_M_headSocket2.xfo = Xfo(Vec3(-0.0000, 136.5005, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_socketA.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_socketOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_socketA_offset01Space.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_socketA_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketA_M_socketA2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_socketA_M_socketA.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_socketA_M_socketA2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_socketB.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_socketOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_socketB_offset01Space.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_socketB_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketB_M_socketB2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_socketB_M_socketB.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_socketB_M_socketB2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_socketC.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_socketOut.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_socketC_offset01Space.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_socketC_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_socketC_M_socketC2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_socketC_M_socketC.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_socketC_M_socketC2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_chestSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 101.6610, -1.5247), Quat(0.4364, 0.5564, 0.4364, 0.5564), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_socketOut.xfo = Xfo(Vec3(-0.0000, 95.8992, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_chestSocket_offset01Space.xfo = Xfo(Vec3(-0.0000, 95.8992, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_chestSocket_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_chestSocket_M_chestSocket2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_chestSocket_M_chestSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_chestSocket_M_chestSocket2.xfo = Xfo(Vec3(-0.0000, 95.8992, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_hipsSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_inputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_parentSpaceIn.xfo = Xfo(Vec3(0.0000, 75.0694, -0.0319), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_globalSRTIn.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_outputs.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_socketOut.xfo = Xfo(Vec3(-0.0000, 73.3007, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_hipsSocket_offset01Space.xfo = Xfo(Vec3(-0.0000, 73.3007, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_hipsSocket_offset.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.controls_hipsSocket_M_hipsSocket2.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hipsSocket_M_hipsSocket.xfo = Xfo(Vec3(0.0000, 0.0000, 0.0000), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  this.deformers_hipsSocket_M_hipsSocket2.xfo = Xfo(Vec3(-0.0000, 73.3007, 3.6558), Quat(0.0000, 0.0000, 0.0000, 1.0000), Vec3(1.0000, 1.0000, 1.0000));
  // reset attributes
  this.controls_main_M_outputs_outputs_rigScale.value = 1.000000;
  this.controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale.value = 1.000000;
  this.controls_spine_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_shoulder_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_shoulder_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_leg_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_leg_L_inputs_inputs_ikBlend.value = 1.000000;
  this.controls_leg_L_inputs_inputs_softDist.value = 0.000000;
  this.controls_leg_L_inputs_inputs_stretch.value = 0.000000;
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value = 31.290852;
  this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value = 32.540779;
  this.controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace.value = 0.500000;
  this.controls_foot_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_foot_L_outputs_outputs_ikBlend.value = 1.000000;
  this.controls_foot_L_outputs_outputs_limbMocap.value = 0.000000;
  this.controls_foot_L_outputs_outputs_softDist.value = 0.000000;
  this.controls_foot_L_outputs_outputs_stretch.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend.value = 1.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK.value = 1.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak.value = 45.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch.value = 0.000000;
  this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap.value = 0.000000;
  this.controls_foot_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_foot_R_outputs_outputs_ikBlend.value = 1.000000;
  this.controls_foot_R_outputs_outputs_limbMocap.value = 0.000000;
  this.controls_foot_R_outputs_outputs_softDist.value = 0.000000;
  this.controls_foot_R_outputs_outputs_stretch.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend.value = 1.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK.value = 1.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak.value = 45.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch.value = 0.000000;
  this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap.value = 0.000000;
  this.controls_leg_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_leg_R_inputs_inputs_ikBlend.value = 1.000000;
  this.controls_leg_R_inputs_inputs_softDist.value = 0.000000;
  this.controls_leg_R_inputs_inputs_stretch.value = 0.000000;
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value = 31.290852;
  this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value = 32.540649;
  this.controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace.value = 0.500000;
  this.controls_arm_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_arm_R_inputs_inputs_ikBlend.value = 1.000000;
  this.controls_arm_R_inputs_inputs_softDist.value = 0.000000;
  this.controls_arm_R_inputs_inputs_stretch.value = 0.000000;
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value = 21.628834;
  this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value = 20.446831;
  this.controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace.value = 0.500000;
  this.controls_arm_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_arm_L_inputs_inputs_ikBlend.value = 1.000000;
  this.controls_arm_L_inputs_inputs_softDist.value = 0.000000;
  this.controls_arm_L_inputs_inputs_stretch.value = 0.000000;
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value = 21.628834;
  this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value = 20.446831;
  this.controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace.value = 0.500000;
  this.controls_hand_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_hand_L_outputs_outputs_ikBlend.value = 1.000000;
  this.controls_hand_L_outputs_outputs_limbMocap.value = 0.000000;
  this.controls_hand_L_outputs_outputs_softDist.value = 0.000000;
  this.controls_hand_L_outputs_outputs_stretch.value = 0.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend.value = 1.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK.value = 0.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap.value = 0.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist.value = 0.000000;
  this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch.value = 0.000000;
  this.controls_hand_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_hand_R_outputs_outputs_ikBlend.value = 1.000000;
  this.controls_hand_R_outputs_outputs_limbMocap.value = 0.000000;
  this.controls_hand_R_outputs_outputs_softDist.value = 0.000000;
  this.controls_hand_R_outputs_outputs_stretch.value = 0.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend.value = 1.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK.value = 0.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap.value = 0.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist.value = 0.000000;
  this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch.value = 0.000000;
  this.controls_headNeck_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK.value = 1.000000;
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK.value = 0.000000;
  this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld.value = 0.000000;
  this.controls_palmSocket_L_inputs_inputs_rigScale.value = 1.000000;
  this.controls_palmSocket_R_inputs_inputs_rigScale.value = 1.000000;
  this.controls_headSocket_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_socketA_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_socketB_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_socketC_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_chestSocket_M_inputs_inputs_rigScale.value = 1.000000;
  this.controls_hipsSocket_M_inputs_inputs_rigScale.value = 1.000000;
}

function KRK_lucy_guide.setClip!(KrakenClip clip) {
  this.clip = clip;
}

function KRK_lucy_guide.evaluateClip!(KrakenClipContext context, Ref<KrakenClip> clip) {
  if(!clip)
    return;
  for(UInt32 i=0;i<clip.getChannelCount();i++) {
    switch(clip.getChannelType(i)) {
      case KrakenClipChannel_Float32: {
        switch(clip.getChannelName(i)) {
          case "controls_main_M_outputs_outputs_rigScale": {
            this.controls_main_M_outputs_outputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale": {
            this.controls_main_M_master01_master_DisplayInfo_MainSettings_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_spine_M_inputs_inputs_rigScale": {
            this.controls_spine_M_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_shoulder_L_inputs_inputs_rigScale": {
            this.controls_shoulder_L_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_shoulder_R_inputs_inputs_rigScale": {
            this.controls_shoulder_R_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_inputs_inputs_rigScale": {
            this.controls_leg_L_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_inputs_inputs_ikBlend": {
            this.controls_leg_L_inputs_inputs_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_inputs_inputs_softDist": {
            this.controls_leg_L_inputs_inputs_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_inputs_inputs_stretch": {
            this.controls_leg_L_inputs_inputs_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len": {
            this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len": {
            this.controls_leg_L_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace": {
            this.controls_leg_L_legUpV01_legUpV_UpVAttrs_footIKSpace.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_inputs_inputs_rigScale": {
            this.controls_foot_L_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_outputs_outputs_ikBlend": {
            this.controls_foot_L_outputs_outputs_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_outputs_outputs_limbMocap": {
            this.controls_foot_L_outputs_outputs_limbMocap.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_outputs_outputs_softDist": {
            this.controls_foot_L_outputs_outputs_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_outputs_outputs_stretch": {
            this.controls_foot_L_outputs_outputs_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footIK.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footRocker.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_ballBreak.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_footTilt.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap": {
            this.controls_foot_L_foot01_foot_DisplayInfo_FootSettings_limbMocap.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_inputs_inputs_rigScale": {
            this.controls_foot_R_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_outputs_outputs_ikBlend": {
            this.controls_foot_R_outputs_outputs_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_outputs_outputs_limbMocap": {
            this.controls_foot_R_outputs_outputs_limbMocap.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_outputs_outputs_softDist": {
            this.controls_foot_R_outputs_outputs_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_outputs_outputs_stretch": {
            this.controls_foot_R_outputs_outputs_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footIK.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footRocker.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_ballBreak.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_footTilt.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap": {
            this.controls_foot_R_foot01_foot_DisplayInfo_FootSettings_limbMocap.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_inputs_inputs_rigScale": {
            this.controls_leg_R_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_inputs_inputs_ikBlend": {
            this.controls_leg_R_inputs_inputs_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_inputs_inputs_softDist": {
            this.controls_leg_R_inputs_inputs_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_inputs_inputs_stretch": {
            this.controls_leg_R_inputs_inputs_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len": {
            this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone0Len.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len": {
            this.controls_leg_R_footIK_footIK_DisplayInfo_LimbSettings_bone1Len.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace": {
            this.controls_leg_R_legUpV01_legUpV_UpVAttrs_footIKSpace.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_inputs_inputs_rigScale": {
            this.controls_arm_R_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_inputs_inputs_ikBlend": {
            this.controls_arm_R_inputs_inputs_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_inputs_inputs_softDist": {
            this.controls_arm_R_inputs_inputs_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_inputs_inputs_stretch": {
            this.controls_arm_R_inputs_inputs_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len": {
            this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len": {
            this.controls_arm_R_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace": {
            this.controls_arm_R_armUpV01_armUpV_UpVAttrs_handIKSpace.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_inputs_inputs_rigScale": {
            this.controls_arm_L_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_inputs_inputs_ikBlend": {
            this.controls_arm_L_inputs_inputs_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_inputs_inputs_softDist": {
            this.controls_arm_L_inputs_inputs_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_inputs_inputs_stretch": {
            this.controls_arm_L_inputs_inputs_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len": {
            this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone0Len.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len": {
            this.controls_arm_L_handIK_handIK_DisplayInfo_LimbSettings_bone1Len.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace": {
            this.controls_arm_L_armUpV01_armUpV_UpVAttrs_handIKSpace.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_inputs_inputs_rigScale": {
            this.controls_hand_L_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_outputs_outputs_ikBlend": {
            this.controls_hand_L_outputs_outputs_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_outputs_outputs_limbMocap": {
            this.controls_hand_L_outputs_outputs_limbMocap.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_outputs_outputs_softDist": {
            this.controls_hand_L_outputs_outputs_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_outputs_outputs_stretch": {
            this.controls_hand_L_outputs_outputs_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_handIK.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_limbMocap.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch": {
            this.controls_hand_L_hand01_hand_DisplayInfo_HandSettings_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_inputs_inputs_rigScale": {
            this.controls_hand_R_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_outputs_outputs_ikBlend": {
            this.controls_hand_R_outputs_outputs_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_outputs_outputs_limbMocap": {
            this.controls_hand_R_outputs_outputs_limbMocap.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_outputs_outputs_softDist": {
            this.controls_hand_R_outputs_outputs_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_outputs_outputs_stretch": {
            this.controls_hand_R_outputs_outputs_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_ikBlend.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_handIK.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_limbMocap.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_softDist.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch": {
            this.controls_hand_R_hand01_hand_DisplayInfo_HandSettings_stretch.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headNeck_M_inputs_inputs_rigScale": {
            this.controls_headNeck_M_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK": {
            this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headFK.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK": {
            this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headIK.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld": {
            this.controls_headNeck_M_neck01_neck_head01_head_DisplayInfo_LimbSettings_headWorld.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_palmSocket_L_inputs_inputs_rigScale": {
            this.controls_palmSocket_L_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_palmSocket_R_inputs_inputs_rigScale": {
            this.controls_palmSocket_R_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_headSocket_M_inputs_inputs_rigScale": {
            this.controls_headSocket_M_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_socketA_M_inputs_inputs_rigScale": {
            this.controls_socketA_M_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_socketB_M_inputs_inputs_rigScale": {
            this.controls_socketB_M_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_socketC_M_inputs_inputs_rigScale": {
            this.controls_socketC_M_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_chestSocket_M_inputs_inputs_rigScale": {
            this.controls_chestSocket_M_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
          case "controls_hipsSocket_M_inputs_inputs_rigScale": {
            this.controls_hipsSocket_M_inputs_inputs_rigScale.value = clip.evaluateFloat32(i, context);
            break;
          }
        }
        break;
      }
      case KrakenClipChannel_Xfo: {
        switch(clip.getChannelName(i)) {
          case "controls_main_M_master": {
            this.controls_main_M_master.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_main_M_offset": {
            this.controls_main_M_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_main_M_cog": {
            this.controls_main_M_cog.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_main_M_vis": {
            this.controls_main_M_vis.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_spine_M_hips": {
            this.controls_spine_M_hips.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_spine_M_torso": {
            this.controls_spine_M_torso.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_spine_M_chest": {
            this.controls_spine_M_chest.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_spine_M_upChest": {
            this.controls_spine_M_upChest.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_shoulder_L_shldr": {
            this.controls_shoulder_L_shldr.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_shoulder_R_shldr": {
            this.controls_shoulder_R_shldr.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_leg_L_upLeg": {
            this.controls_leg_L_upLeg.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_leg_L_loLeg": {
            this.controls_leg_L_loLeg.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_leg_L_legUpV": {
            this.controls_leg_L_legUpV.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_foot_L_foot2": {
            this.controls_foot_L_foot2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_foot_L_foot3": {
            this.controls_foot_L_foot3.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_foot_L_ball": {
            this.controls_foot_L_ball.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_foot_R_foot2": {
            this.controls_foot_R_foot2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_foot_R_foot3": {
            this.controls_foot_R_foot3.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_foot_R_ball": {
            this.controls_foot_R_ball.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_leg_R_upLeg": {
            this.controls_leg_R_upLeg.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_leg_R_loLeg": {
            this.controls_leg_R_loLeg.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_leg_R_legUpV": {
            this.controls_leg_R_legUpV.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_arm_R_upArm": {
            this.controls_arm_R_upArm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_arm_R_loArm": {
            this.controls_arm_R_loArm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_arm_R_armUpV": {
            this.controls_arm_R_armUpV.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_arm_L_upArm": {
            this.controls_arm_L_upArm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_arm_L_loArm": {
            this.controls_arm_L_loArm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_arm_L_armUpV": {
            this.controls_arm_L_armUpV.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_index_palm": {
            this.controls_hand_L_index_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_index_base": {
            this.controls_hand_L_index_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_index_mid": {
            this.controls_hand_L_index_mid.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_index_tip": {
            this.controls_hand_L_index_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_middle_palm": {
            this.controls_hand_L_middle_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_middle_base": {
            this.controls_hand_L_middle_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_middle_mid": {
            this.controls_hand_L_middle_mid.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_middle_tip": {
            this.controls_hand_L_middle_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_ring_palm": {
            this.controls_hand_L_ring_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_ring_base": {
            this.controls_hand_L_ring_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_ring_mid": {
            this.controls_hand_L_ring_mid.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_ring_tip": {
            this.controls_hand_L_ring_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_pinky_palm": {
            this.controls_hand_L_pinky_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_pinky_base": {
            this.controls_hand_L_pinky_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_pinky_mid": {
            this.controls_hand_L_pinky_mid.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_pinky_tip": {
            this.controls_hand_L_pinky_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_thumb_palm": {
            this.controls_hand_L_thumb_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_thumb_base": {
            this.controls_hand_L_thumb_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_thumb_tip": {
            this.controls_hand_L_thumb_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_hand2": {
            this.controls_hand_L_hand2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_hand3": {
            this.controls_hand_L_hand3.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_L_palm": {
            this.controls_hand_L_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_index_palm": {
            this.controls_hand_R_index_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_index_base": {
            this.controls_hand_R_index_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_index_mid": {
            this.controls_hand_R_index_mid.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_index_tip": {
            this.controls_hand_R_index_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_middle_palm": {
            this.controls_hand_R_middle_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_middle_base": {
            this.controls_hand_R_middle_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_middle_mid": {
            this.controls_hand_R_middle_mid.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_middle_tip": {
            this.controls_hand_R_middle_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_ring_palm": {
            this.controls_hand_R_ring_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_ring_base": {
            this.controls_hand_R_ring_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_ring_mid": {
            this.controls_hand_R_ring_mid.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_ring_tip": {
            this.controls_hand_R_ring_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_pinky_palm": {
            this.controls_hand_R_pinky_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_pinky_base": {
            this.controls_hand_R_pinky_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_pinky_mid": {
            this.controls_hand_R_pinky_mid.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_pinky_tip": {
            this.controls_hand_R_pinky_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_thumb_palm": {
            this.controls_hand_R_thumb_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_thumb_base": {
            this.controls_hand_R_thumb_base.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_thumb_tip": {
            this.controls_hand_R_thumb_tip.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_hand2": {
            this.controls_hand_R_hand2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_hand3": {
            this.controls_hand_R_hand3.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hand_R_palm": {
            this.controls_hand_R_palm.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_headNeck_M_head": {
            this.controls_headNeck_M_head.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_headNeck_M_headUpV": {
            this.controls_headNeck_M_headUpV.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_headNeck_M_headWorld": {
            this.controls_headNeck_M_headWorld.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_headNeck_M_neck": {
            this.controls_headNeck_M_neck.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_headNeck_M_head2": {
            this.controls_headNeck_M_head2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_palmSocket_L_palmSocket_offset": {
            this.controls_palmSocket_L_palmSocket_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_palmSocket_L_palmSocket2": {
            this.controls_palmSocket_L_palmSocket2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_palmSocket_R_palmSocket_offset": {
            this.controls_palmSocket_R_palmSocket_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_palmSocket_R_palmSocket2": {
            this.controls_palmSocket_R_palmSocket2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_headSocket_M_headSocket_offset": {
            this.controls_headSocket_M_headSocket_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_headSocket_M_headSocket2": {
            this.controls_headSocket_M_headSocket2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_socketA_M_socketA_offset": {
            this.controls_socketA_M_socketA_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_socketA_M_socketA2": {
            this.controls_socketA_M_socketA2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_socketB_M_socketB_offset": {
            this.controls_socketB_M_socketB_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_socketB_M_socketB2": {
            this.controls_socketB_M_socketB2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_socketC_M_socketC_offset": {
            this.controls_socketC_M_socketC_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_socketC_M_socketC2": {
            this.controls_socketC_M_socketC2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_chestSocket_M_chestSocket_offset": {
            this.controls_chestSocket_M_chestSocket_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_chestSocket_M_chestSocket2": {
            this.controls_chestSocket_M_chestSocket2.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hipsSocket_M_hipsSocket_offset": {
            this.controls_hipsSocket_M_hipsSocket_offset.xfo = clip.evaluateXfo(i, context);
            break;
          }
          case "controls_hipsSocket_M_hipsSocket2": {
            this.controls_hipsSocket_M_hipsSocket2.xfo = clip.evaluateXfo(i, context);
            break;
          }
        }
        break;
      }
    }
  }
}

function Xfo[] KRK_lucy_guide.evaluateJoints!(KrakenClipContext context) {
  this.evaluateClip(context, this.clip);
  this.solve();
  return this.getJointXfos();
}

require Math;
require KrakenForCanvas;

interface KrakenKLRig {

  UInt64 getEvalVersion();
  init!();
  resetPose!();
  solve!(KrakenClipContext context);
  setClip!(KrakenClip clip);
  loadClipFromFile!(String filePath);
  evaluate!(KrakenClipContext context);
  evaluate!(KrakenClipContext context, io Mat44 joints<>);

  Xfo[] getJointXfos();
  Xfo[] getControlXfos();
  String[] getJointNames();
  Xfo[] getAllParentXfos();
  //KrakenObject3D[] getAllObject3Ds();
  Xfo[] getAllXfos();
  String[] getAllNames();
  SInt32 getUniqueID(in String name);
  String[] getTagNames();
  setSolveItemIDsByNames!(in String names[], in Boolean append);
  String[] getScalarOutputNames();
  getScalarOutputValues(io Float32 weights<>);

  dirtyItem!(Index index);
  cleanItem!(Index index);
  dirtyAllItems!();
  cleanAllItems!();

  KrakenControl<> getControls();
  KrakenScalarAttribute<> getScalarAttributes();

  Mat44 getControlLocalMat44(Index index);
  setControlLocalMat44!(Index index, Mat44 value);
  Scalar getScalarAttribute(Index index);
  setScalarAttribute!(Index index, Scalar value);

};
